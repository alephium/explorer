{"version":3,"sources":["style/themes.ts","style/globalStyles.ts","serviceWorker.js","components/ThemeSwitcher.tsx","images/explorer-logo-light.svg","images/explorer-logo-dark.svg","images/block-icon.svg","images/address-icon.svg","images/transaction-icon.svg","components/Sidebar.tsx","hooks/useWindowSize.ts","components/SearchBar.tsx","components/PageTitle.tsx","utils/client.ts","utils/util.tsx","components/LoadingSpinner.tsx","components/Tooltip.tsx","components/Section.tsx","components/Table.tsx","components/Buttons.tsx","components/Amount.tsx","components/Links.tsx","sections/BlockSection.tsx","components/Badge.tsx","hooks/useTableDetailsState.ts","images/alephium-not-found.svg","components/InlineErrorMessage.tsx","sections/BlockInfoSection.tsx","sections/TransactionInfoSection.tsx","sections/AddressInfoSection.tsx","images/alephium-logo-gradient-stroke.svg","components/ComingSoon.tsx","sections/AdressesSection.tsx","sections/TransactionsSection.tsx","index.tsx"],"names":["darkTheme","name","body","textPrimary","textSecondary","textAccent","link","linkHighlight","bgPrimary","bgSecondary","bgHighlight","borderPrimary","borderHighlight","tooltip","lightTheme","GlobalStyle","createGlobalStyle","normalize","theme","deviceSizes","deviceBreakPoints","mobile","desktop","Boolean","window","location","hostname","match","getButtonColor","buttonTheme","toggleVariants","light","left","backgroundColor","dark","toggleWidth","StyledThemeSwitcher","styled","div","ToggleContent","ToggleIcon","ToggleFloatingIndicator","motion","ThemeSwitcher","className","useContext","GlobalContext","currentTheme","switchTheme","onClick","color","size","variants","animate","transition","duration","type","Logo","img","HamburgerButton","Backdrop","SidebarContainer","open","Header","header","Tabs","Tab","NavLink","TabIcon","Sidebar","useTheme","windowWidth","useState","width","undefined","height","windowSize","setWindowSize","useEffect","handleResize","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","lastWindowWidth","useRef","setOpen","current","to","alt","src","logoLight","logoDark","blockIcon","addressIcon","transactionIcon","AnimatePresence","opacity","exit","initial","Container","SearchIcon","Search","SearchInput","input","SearchBar","active","setActive","search","setSearch","setSnackbarMessage","inputRef","history","useHistory","handleRemoveFocus","redirect","blur","push","searching","str","word","trim","charAt","length","slice","text","ref","onBlur","onChange","e","target","value","onKeyDown","key","placeholder","TitleWrapper","Title","h1","Surtitle","h2","Subtitle","SecondaryTitle","PageTitle","title","surtitle","subtitle","AlephClient","url","fetchAPI","this","path","a","fetch","then","resp","Promise","resolve","reject","ok","json","r","data","status","detail","resource","catch","id","fromTs","toTs","MONEY_SYMBOL","QUINTILLION","getNumberOfTrailingZeros","numberArray","numberOfZeros","i","removeTrailingZeros","numString","split","numberArrayWithoutTrailingZeros","join","replace","abbreviateAmount","baseNum","showFullPrecision","nbOfDecimals","maxDecimals","JSBI","lessThanOrEqual","BigInt","alephNum","Number","tier","Math","log10","toString","numberOfNonZero","numberOfDigitsToDisplay","toFixed","suffix","scale","pow","scaled","nonDigitLength","round","numberArrayWithDecimals","replaceAll","ScrollToTop","getScrollContainer","pathname","useLocation","scrollTo","Spinner","Loader","LoadingSpinner","Tooltip","rebuildTooltips","ReactTooltip","rebuild","SectionContext","React","createContext","section","Section","children","Provider","Table","props","StyledTable","TableHeader","headerTitles","columnWidths","compact","transparent","StyledTableHeader","map","v","style","Row","tr","isActive","OpenConditionContext","DetailsRow","openCondition","AnimatedCell","colSpan","condition","AnimatedCellContainer","closed","rotate","DetailToggle","isOpen","padding","textAlign","overflow","DetailToggleWrapper","HighlightedCell","StyledHighlightedCell","table","bodyOnly","main","css","hasDetails","noBorder","thead","TableBody","tbody","tdStyles","s","tdPos","td","TextButton","StyledTextButton","button","Amount","TightLinkStrict","hash","maxWidth","display","StyledLink","data-tip","substring","TightLink","AddressLink","address","txHashRef","amount","AddressWrapper","OutputValue","TxLink","span","Link","dayjs","extend","relativeTime","Content","TableBodyCustomStyles","BlockIcon","LoadMore","BlockSection","from","subtract","fetchTs","setFetchTs","displayFromTs","setDisplayFromTs","blocks","setBlocks","loading","setLoading","client","console","log","format","valueOf","fetchedBlocks","prev","_","unionBy","sort","b","timestamp","getBlocks","callback","delay","shouldPause","savedCallback","setInterval","clearInterval","useInterval","useCallback","add","loadMore","previousDisplayFromTs","newDisplayFromTs","filter","isAfter","txNumber","chainFrom","chainTo","Badge","content","prefix","getBadgeColor","badgeType","useTableDetailsState","defaultState","detailOpen","setDetailOpen","toggleDetail","ErrorWrapper","ErrorLogo","logo","ErrorMessageContainer","ErrorCode","ErrorMessage","InlineErrorMessage","message","code","shownMessage","TransactionRow","t","transaction","TransactionIcon","inputs","outputs","reduce","acc","o","BlockTableBodyCustomStyles","TXTableBodyCustomStyles","BlockInfoSection","useParams","blockInfo","setBlockInfo","block","res","transactions","TransactionInfoSection","txInfo","setTxInfo","blockHash","spent","AddressTransactionRow","addressId","amountDelta","inputAmount","outputAmount","output","calAmountDelta","isOut","lessThan","uniq","inputAccounts","BlockRewardLabel","renderInputAccounts","multiply","AddressTableBodyCustomStyles","NoTxMessage","addressInfo","setAddressInfo","previousId","balance","t1","t2","ComingSoonWrapper","ComingSoonLogo","ComingSoonText","p","ComingSoon","StyledSection","AddressesSection","TransactionsSection","updateLocale","future","past","m","mm","h","hh","d","dd","M","MM","y","yy","App","localStorageKey","defaultValue","localStorage","getItem","setValue","setItem","useStateWithLocalStorage","setTheme","setClient","snackbarMessage","contentRef","getContentRef","process","REACT_APP_BACKEND_URL","xs","protocol","createClient","setTimeout","MainContainer","ContentContainer","ContentWrapper","exact","AddressInfoSection","SnackbarManager","SnackbarManagerContainer","SnackbarPopup","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.186b9c43.chunk.js","sourcesContent":["import { DefaultTheme } from 'styled-components'\n\nexport type ThemeType = 'light' | 'dark'\n\nexport const darkTheme: DefaultTheme = {\n  name: 'dark',\n  body: '#212126',\n\n  textPrimary: 'rgba(255, 255, 255, 0.8)',\n  textSecondary: 'rgba(255, 255, 255, 0.35)',\n  textAccent: '#FFD036',\n\n  link: '#53A9F5',\n  linkHighlight: '#0E82E7',\n\n  bgPrimary: '#212126',\n  bgSecondary: '#18191C',\n  bgHighlight: 'rgba(0, 0, 0, 0.1)',\n\n  borderPrimary: '#34353A',\n  borderHighlight: '#585962',\n\n  tooltip: 'black'\n}\n\nexport const lightTheme: DefaultTheme = {\n  name: 'light',\n  body: 'white',\n\n  textPrimary: 'rgba(15, 15, 15, 0.95)',\n  textSecondary: 'rgba(15, 15, 15, 0.50)',\n  textAccent: '#FF7B03',\n\n  link: '#0E82E7',\n  linkHighlight: '#53A9F5',\n\n  bgPrimary: 'white',\n  bgSecondary: '#FAFAFA',\n  bgHighlight: 'rgba(0, 0, 0, 0.02)',\n\n  borderPrimary: '#F2F2F3',\n  borderHighlight: '#D1D1D4',\n\n  tooltip: 'black'\n}\n","import { createGlobalStyle } from 'styled-components'\nimport normalize from 'styled-normalize'\n\nconst GlobalStyle = createGlobalStyle`\n  ${normalize}\n\n  body {\n    background-color: ${({ theme }) => theme.body};\n    transition: background-color 0.2s ease;\n\n    color: ${({ theme }) => theme.textPrimary};\n  }\n\n  a {\n    color: ${({ theme }) => theme.link};;\n    cursor: pointer;\n\n    &:hover {\n      color: ${({ theme }) => theme.linkHighlight};;\n    }\n  }\n\n  // Animations\n  @keyframes spin {\n    from {\n        transform:rotate(0deg);\n    }\n    to {\n        transform:rotate(360deg);\n    }\n  }\n`\n\n// Breakpoints\n\nexport const deviceSizes = {\n  mobile: 1024,\n  desktop: 1920\n}\n\nexport const deviceBreakPoints = {\n  mobile: `(max-width: ${deviceSizes.mobile}px)`,\n  desktop: `(max-width: ${deviceSizes.desktop}px)`\n}\n\nexport default GlobalStyle\n","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useContext } from 'react'\nimport styled from 'styled-components'\nimport { Moon, Sun } from 'react-feather'\nimport { ThemeType } from '../style/themes'\nimport { motion } from 'framer-motion'\nimport { GlobalContext } from '..'\n\ninterface ThemeSwitcherProps {\n  className?: string\n}\n\nconst getButtonColor = (theme: ThemeType, buttonTheme: string) => {\n  return theme === buttonTheme ? (theme === 'dark' ? '#F6C76A' : 'white') : '#646775'\n}\n\nconst toggleWidth = 80\nconst toggleHeight = toggleWidth / 2\nconst toggleIndicatorSize = toggleWidth / 2\n\nconst toggleVariants = {\n  light: { left: 0, backgroundColor: '#F6C76A' },\n  dark: { left: toggleWidth - toggleIndicatorSize, backgroundColor: '#3A0595' }\n}\n\nconst ThemeSwitcher: React.FC<ThemeSwitcherProps> = ({ className }) => {\n  const { currentTheme, switchTheme } = useContext(GlobalContext)\n\n  return (\n    <StyledThemeSwitcher onClick={() => switchTheme(currentTheme === 'light' ? 'dark' : 'light')} className={className}>\n      <ToggleContent>\n        <ToggleIcon>\n          <Sun onClick={() => switchTheme('light')} color={getButtonColor(currentTheme, 'light')} size={18} />\n        </ToggleIcon>\n        <ToggleIcon>\n          <Moon onClick={() => switchTheme('dark')} color={getButtonColor(currentTheme, 'dark')} size={18} />\n        </ToggleIcon>\n      </ToggleContent>\n      <ToggleFloatingIndicator\n        variants={toggleVariants}\n        animate={currentTheme}\n        transition={{ duration: 0.5, type: 'spring' }}\n      />\n    </StyledThemeSwitcher>\n  )\n}\n\nexport const StyledThemeSwitcher = styled.div`\n  position: relative;\n  width: ${toggleWidth}px;\n  height: ${toggleHeight}px;\n  border: 2px solid ${({ theme }) => theme.borderPrimary};\n  border-radius: 60px;\n  background-color: ${({ theme }) => theme.bgHighlight};\n  cursor: pointer;\n  box-sizing: content-box;\n\n  svg {\n    cursor: pointer;\n  }\n`\n\nconst ToggleContent = styled.div`\n  position: absolute;\n  display: flex;\n  height: 100%;\n  width: 100%;\n  margin: 0;\n  z-index: 1;\n`\n\nconst ToggleIcon = styled.div`\n  display: flex;\n  flex: 1;\n\n  * {\n    margin: auto;\n  }\n`\n\nconst ToggleFloatingIndicator = styled(motion.div)`\n  position: absolute;\n  width: ${toggleIndicatorSize}px;\n  height: ${toggleIndicatorSize}px;\n  background-color: ${({ theme }) => theme.textPrimary};\n  border-radius: 60px;\n  z-index: 0;\n`\n\nexport default ThemeSwitcher\n","export default __webpack_public_path__ + \"static/media/explorer-logo-light.537f5ebc.svg\";","export default __webpack_public_path__ + \"static/media/explorer-logo-dark.a77a8d41.svg\";","export default __webpack_public_path__ + \"static/media/block-icon.a6a8f086.svg\";","export default __webpack_public_path__ + \"static/media/address-icon.143269ad.svg\";","export default __webpack_public_path__ + \"static/media/transaction-icon.964bc84e.svg\";","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useRef, useState } from 'react'\nimport { Link, NavLink } from 'react-router-dom'\nimport styled, { useTheme } from 'styled-components'\n\nimport logoLight from '../images/explorer-logo-light.svg'\nimport logoDark from '../images/explorer-logo-dark.svg'\nimport blockIcon from '../images/block-icon.svg'\nimport addressIcon from '../images/address-icon.svg'\nimport transactionIcon from '../images/transaction-icon.svg'\nimport { deviceBreakPoints, deviceSizes } from '../style/globalStyles'\nimport { Menu, X } from 'react-feather'\nimport { useWindowSize } from '../hooks/useWindowSize'\nimport { AnimatePresence, motion } from 'framer-motion'\nimport ThemeSwitcher, { StyledThemeSwitcher } from './ThemeSwitcher'\n\nconst Sidebar = () => {\n  const theme = useTheme()\n  const windowWidth = useWindowSize().width\n  const lastWindowWidth = useRef(windowWidth)\n  const [open, setOpen] = useState(false)\n\n  useEffect(() => {\n    if (windowWidth) {\n      if (\n        lastWindowWidth.current &&\n        lastWindowWidth.current >= deviceSizes.mobile &&\n        windowWidth < deviceSizes.mobile &&\n        open\n      ) {\n        setOpen(false)\n      }\n\n      lastWindowWidth.current = windowWidth\n    }\n  }, [open, windowWidth])\n\n  return (\n    <>\n      <HamburgerButton onClick={() => setOpen(!open)}>{open ? <X /> : <Menu />}</HamburgerButton>\n      <SidebarContainer open={open}>\n        <Header>\n          <Link to=\"/\">\n            <Logo alt=\"alephium\" src={theme.name === 'light' ? logoLight : logoDark} />\n          </Link>\n        </Header>\n        <Tabs>\n          <Tab to=\"/blocks\" onClick={() => setOpen(false)}>\n            <TabIcon src={blockIcon} alt=\"blocks\" /> Blocks\n          </Tab>\n          <Tab to=\"/addresses\" onClick={() => setOpen(false)}>\n            <TabIcon src={addressIcon} alt=\"addresses\" /> Addresses\n          </Tab>\n          <Tab to=\"/transactions\" onClick={() => setOpen(false)}>\n            <TabIcon src={transactionIcon} alt=\"transactions\" /> Transactions\n          </Tab>\n        </Tabs>\n        <ThemeSwitcher />\n      </SidebarContainer>\n      <AnimatePresence>\n        {open && (\n          <Backdrop\n            onClick={() => setOpen(false)}\n            animate={{ opacity: 0.4 }}\n            exit={{ opacity: 0 }}\n            initial={{ opacity: 0 }}\n            transition={{ duration: 0.15 }}\n          />\n        )}\n      </AnimatePresence>\n    </>\n  )\n}\n\n/* STYLES */\n\nconst Logo = styled.img`\n  height: 100px;\n  width: 160px;\n  margin-top: 15px;\n\n  @media ${deviceBreakPoints.mobile} {\n    width: 150px;\n  }\n`\n\nconst HamburgerButton = styled.div`\n  position: absolute;\n  width: 35px;\n  height: 35px;\n  top: 17px;\n  left: 20px;\n  display: none;\n  z-index: 300;\n  background-color: ${({ theme }) => theme.bgPrimary};\n  padding: 5px;\n  border-radius: 100%;\n\n  @media ${deviceBreakPoints.mobile} {\n    display: block;\n    cursor: pointer;\n  }\n`\n\nconst Backdrop = styled(motion.div)`\n  display: none;\n\n  @media ${deviceBreakPoints.mobile} {\n    display: block;\n    position: fixed;\n    top: 0;\n    right: 0;\n    left: 0;\n    bottom: 0;\n    background-color: black;\n    z-index: 101;\n  }\n`\n\ninterface SidebarContainerProps {\n  open: boolean\n}\n\nconst SidebarContainer = styled.div<SidebarContainerProps>`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  max-width: 300px;\n  padding: 0 20px;\n  background-color: ${({ theme }) => theme.bgSecondary};\n  border-right: 2px solid ${({ theme }) => theme.borderPrimary};\n\n  ${StyledThemeSwitcher} {\n    display: block;\n    position: absolute;\n    bottom: 25px;\n  }\n\n  @media ${deviceBreakPoints.mobile} {\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    z-index: 200;\n    width: 250px;\n\n    transition: all 0.15s ease-out;\n    transform: ${({ open }) => (!open ? 'translateX(-100%)' : '')};\n  }\n`\n\nconst Header = styled.header`\n  display: flex;\n  align-items: center;\n\n  @media ${deviceBreakPoints.mobile} {\n    margin-top: 50px;\n  }\n`\n\nconst Tabs = styled.div`\n  margin-top: 5vh;\n  display: flex;\n  flex-direction: column;\n\n  @media ${deviceBreakPoints.mobile} {\n    margin-top: 30px;\n  }\n`\n\nconst Tab = styled(NavLink)`\n  font-size: 1.1rem;\n  font-weight: 600;\n  cursor: pointer;\n  margin-bottom: 25px;\n  display: flex;\n  align-items: center;\n  transition: all 0.15s ease;\n  position: relative;\n\n  color: ${({ theme }) => theme.textSecondary};\n  &.active {\n    color: ${({ theme }) => theme.textPrimary};\n\n    img {\n      filter: none;\n    }\n\n    &::after {\n      content: '';\n      display: block;\n      width: 20px;\n      height: 3px;\n      position: absolute;\n      left: 40px;\n      bottom: -6px;\n      background: linear-gradient(to left, #6510f7, #f76110) border-box;\n    }\n  }\n  &:hover {\n    color: ${({ theme }) => theme.textPrimary};\n  }\n`\n\nconst TabIcon = styled.img`\n  height: 25px;\n  width: 25px;\n  margin-right: 15px;\n  filter: grayscale(100%);\n`\n\nexport default Sidebar\n","import { useState, useEffect } from 'react'\n\nexport function useWindowSize() {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState<{ width: undefined | number; height: undefined | number }>({\n    width: undefined,\n    height: undefined\n  })\n\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      })\n    }\n\n    // Add event listener\n    window.addEventListener('resize', handleResize)\n\n    // Call handler right away so state gets updated with initial window size\n    handleResize()\n\n    // Remove event listener on cleanup\n    return () => window.removeEventListener('resize', handleResize)\n  }, []) // Empty array ensures that effect is only run on mount\n\n  return windowSize\n}\n","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\n\nimport { motion } from 'framer-motion'\nimport React, { useContext, useRef, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { Search } from 'react-feather'\nimport { deviceBreakPoints } from '../style/globalStyles'\nimport { GlobalContext } from '..'\n\nconst SearchBar = () => {\n  const [active, setActive] = useState(false)\n  const [search, setSearch] = useState('')\n  const { setSnackbarMessage } = useContext(GlobalContext)\n  const inputRef = useRef<HTMLInputElement>(null)\n\n  const history = useHistory()\n\n  const handleInputClick = () => setActive(true)\n\n  const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearch(e.target.value)\n  }\n\n  const handleSearchClick = () => searching(search)\n\n  const handleSearchKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter') {\n      searching(search)\n    }\n  }\n\n  const handleRemoveFocus = () => {\n    setActive(false)\n  }\n\n  const cleanSearch = () => {\n    setSearch('')\n    setActive(false)\n  }\n\n  const redirect = (to: string) => {\n    handleRemoveFocus()\n    cleanSearch()\n    inputRef.current?.blur()\n    history.push(to)\n  }\n\n  const searching = (str: string) => {\n    const word = str.trim()\n    //TODO This is a very dummy way do differentiate address and transaction, need improvement\n    if (word.charAt(0) === 'T' || word.charAt(0) === 'M' || word.charAt(0) === 'D') {\n      redirect(`/addresses/${word}`)\n    } else if (word.length === 64 && word.slice(0, 4) === '0000') {\n      redirect(`/blocks/${word}`)\n    } else if (word.length === 64) {\n      redirect(`/transactions/${word}`)\n    } else {\n      setSnackbarMessage({ text: 'Please look for a correct address, transaction or block hash', type: 'info' })\n    }\n  }\n\n  return (\n    <Container>\n      <SearchInput\n        ref={inputRef}\n        onBlur={handleRemoveFocus}\n        onChange={handleSearchChange}\n        value={search}\n        onClick={handleInputClick}\n        onKeyDown={handleSearchKeyDown}\n        placeholder=\"Search for an address or a tx...\"\n      />\n      {active && <Backdrop animate={{ opacity: 1 }} transition={{ duration: 0.15 }} />}\n      <SearchIcon onClick={handleSearchClick} />\n    </Container>\n  )\n}\n\nconst Container = styled.div`\n  flex: 1;\n  position: relative;\n  height: 50px;\n\n  @media ${deviceBreakPoints.mobile} {\n    right: 10px;\n    left: 10px;\n    margin-left: 50px;\n    margin-right: 10px;\n    z-index: 1;\n  }\n`\n\nconst SearchIcon = styled(Search)`\n  color: ${({ theme }) => theme.textPrimary};\n  position: absolute;\n  right: 20px;\n  top: 12px;\n  z-index: 11;\n  cursor: pointer;\n`\n\nconst SearchInput = styled.input`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  border-radius: 30px;\n  padding: 0 20px;\n  color: ${({ theme }) => theme.textPrimary};\n  background: ${({ theme }) => theme.bgSecondary};\n  border: 2px solid ${({ theme }) => theme.borderPrimary};\n  transition: all 0.15s ease-out;\n  z-index: 10;\n\n  &:hover {\n    border: 2px solid ${({ theme }) => theme.borderHighlight};\n  }\n\n  &:focus,\n  &:active {\n    box-shadow: 0 15px 15px rgba(0, 0, 0, 0.15);\n    background: linear-gradient(${({ theme }) => `${theme.bgSecondary}, ${theme.bgSecondary}`}) padding-box,\n      /*this is your grey background*/ linear-gradient(to right, #6510f7, #f76110) border-box;\n    border: 2px solid transparent;\n    z-index: 10;\n  }\n`\n\nconst Backdrop = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  z-index: 9;\n  opacity: 0;\n`\n\nexport default SearchBar\n","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\n\nimport React from 'react'\nimport styled from 'styled-components'\nimport { deviceBreakPoints } from '../style/globalStyles'\n\ninterface PageTitleProps {\n  title: string\n  surtitle?: string | JSX.Element\n  subtitle?: string | JSX.Element\n}\n\nconst PageTitle: React.FC<PageTitleProps> = ({ title, surtitle, subtitle }) => (\n  <TitleWrapper>\n    {surtitle && <Surtitle>{surtitle}</Surtitle>}\n    <Title>{title}</Title>\n    {subtitle && <Subtitle>{subtitle}</Subtitle>}\n  </TitleWrapper>\n)\n\nconst TitleWrapper = styled.div`\n  margin-bottom: 35px;\n`\n\nconst Title = styled.h1`\n  font-family: 'Inter';\n  font-weight: bold;\n  font-size: 3.2rem;\n  color: ${({ theme }) => theme.textPrimary};\n  margin: 0 0 5px 0;\n  font-weight: 800;\n\n  @media ${deviceBreakPoints.mobile} {\n    font-size: 2.5rem;\n    margin-top: 20px;\n  }\n`\n\nconst Surtitle = styled.h2`\n  font-family: 'Inter';\n  font-weight: 500;\n  font-size: 1.8rem;\n  color: ${({ theme }) => theme.textSecondary};\n  margin-bottom: 0;\n  overflow: hidden;\n`\n\nconst Subtitle = styled.h2`\n  font-family: 'Inter';\n  font-weight: 500;\n  font-size: 1.8rem;\n  color: ${({ theme }) => theme.textSecondary};\n  margin: 0;\n`\n\nexport const SecondaryTitle = styled.h2`\n  margin-top: 40px;\n`\n\nexport default PageTitle\n","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\n\nimport { Block, BlockDetail, Transaction, Address } from '../types/api'\n\nexport interface APIData<T> {\n  data: T\n  status: number\n  resource?: never\n  detail?: never\n}\n\nexport interface APIError {\n  status: number\n  detail: string\n  resource?: string\n  data?: never\n}\n\nexport type APIResp<T> = APIData<T> | APIError\n\nexport class AlephClient {\n  url: string\n  fetchAPI: <T>(path: string) => Promise<APIResp<T>>\n\n  constructor(url: string) {\n    this.url = url\n    this.fetchAPI = async function <T>(path: string) {\n      return fetch(url + path)\n        .then((resp) => {\n          return new Promise((resolve, reject) => {\n            if (resp.ok) {\n              resp.json().then((r) => resolve({ data: r as T, status: resp.status }))\n            } else {\n              resp.json().then((e) => {\n                return reject({ detail: e.detail, status: resp.status, resource: e.resource } as APIError)\n              })\n            }\n          }) as Promise<APIResp<T>>\n        })\n        .catch((e) => {\n          return e as APIError\n        })\n    }\n  }\n\n  async block(id: string) {\n    return await this.fetchAPI<BlockDetail>('/blocks/' + id)\n  }\n\n  async blocks(fromTs: number, toTs: number) {\n    return await this.fetchAPI<Block[]>('/blocks?from-ts=' + fromTs + '&to-ts=' + toTs)\n  }\n\n  async address(id: string) {\n    return await this.fetchAPI<Address>('/addresses/' + id)\n  }\n\n  async transaction(id: string) {\n    return await this.fetchAPI<Transaction>('/transactions/' + id)\n  }\n}\n","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\n\nimport { AlephClient } from './client'\nimport { useEffect, useRef } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { FC } from 'react'\nimport { Transaction } from '../types/api'\nimport JSBI from 'jsbi'\n\n// ==== API\n\nexport const createClient = (url: string) => {\n  const client = new AlephClient(url)\n\n  console.log('Connecting to: ' + client.url)\n\n  return client\n}\n\n// ==== MATHS\n\nconst MONEY_SYMBOL = ['', 'K', 'M', 'B', 'T']\nconst QUINTILLION = 1000000000000000000\n\nexport const truncateToDecimals = (num: number, dec = 2) => {\n  const calcDec = Math.pow(10, dec)\n  return Math.trunc(num * calcDec) / calcDec\n}\n\nconst getNumberOfTrailingZeros = (numberArray: string[]) => {\n  let numberOfZeros = 0\n\n  for (let i = numberArray.length - 1; i >= 0; i--) {\n    if (numberArray[i] === '0') {\n      numberOfZeros++\n    } else {\n      break\n    }\n  }\n\n  return numberOfZeros\n}\n\nconst removeTrailingZeros = (numString: string) => {\n  const numberArray = numString.split('')\n\n  const numberOfZeros = getNumberOfTrailingZeros(numberArray)\n\n  const numberArrayWithoutTrailingZeros = [...numberArray.slice(0, numberArray.length - numberOfZeros)]\n\n  if (numberArrayWithoutTrailingZeros[numberArrayWithoutTrailingZeros.length - 1] === '.')\n    numberArrayWithoutTrailingZeros.push('0')\n\n  return numberArrayWithoutTrailingZeros.join().replace(/,/g, '')\n}\n\nexport const abbreviateAmount = (baseNum: JSBI, showFullPrecision = false, nbOfDecimals?: number) => {\n  const maxDecimals = 6\n\n  if (JSBI.lessThanOrEqual(baseNum, JSBI.BigInt(0))) return '0.00'\n\n  // For abbreviation, we don't need full precision and can work with number\n  const alephNum = Number(baseNum) / QUINTILLION\n\n  // what tier? (determines SI symbol)\n  let tier = (Math.log10(alephNum) / 3) | 0\n\n  const numberArray = baseNum.toString().split('')\n\n  const numberOfZeros = getNumberOfTrailingZeros(numberArray)\n  const numberOfNonZero = numberArray.length - numberOfZeros\n\n  const numberOfDigitsToDisplay = nbOfDecimals\n    ? nbOfDecimals\n    : numberOfNonZero < maxDecimals\n    ? numberOfNonZero\n    : maxDecimals\n\n  if (tier < 0) {\n    return removeTrailingZeros(alephNum.toFixed(8))\n  } else if (tier === 0) {\n    // Small number, low precision is ok\n    return removeTrailingZeros(alephNum.toFixed(numberOfDigitsToDisplay).toString())\n  } else if (tier >= MONEY_SYMBOL.length) {\n    tier = MONEY_SYMBOL.length - 1\n  }\n\n  // get suffix and determine scale\n  const suffix = MONEY_SYMBOL[tier]\n  const scale = Math.pow(10, tier * 3)\n\n  // scale the bigNum\n  // Here we need to be careful of precision issues\n  const scaled = alephNum / scale\n\n  if (showFullPrecision) {\n    // Work with string to avoid rounding issues\n    const nonDigitLength = Math.round(scaled).toString().length\n    const numberArrayWithDecimals = [...numberArray.slice(0, nonDigitLength), '.', ...numberArray.slice(nonDigitLength)]\n    return removeTrailingZeros(numberArrayWithDecimals.join().replaceAll(',', '')) + suffix\n  }\n\n  return scaled.toFixed(numberOfDigitsToDisplay) + suffix\n}\n\nexport const createRandomId = () => Math.random().toString(36).substring(7)\n\n// ==== ROUTING\n\ninterface ScrollToTopProps {\n  getScrollContainer: () => HTMLElement | null\n}\n\nexport const ScrollToTop: FC<ScrollToTopProps> = ({ getScrollContainer }) => {\n  const { pathname } = useLocation()\n\n  useEffect(() => {\n    getScrollContainer()?.scrollTo(0, 0)\n  }, [getScrollContainer, pathname])\n\n  return null\n}\n\n// ==== MISC\n\nexport function useInterval(callback: () => void, delay: number, shouldPause = false) {\n  const savedCallback = useRef<() => void>(() => null)\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current()\n    }\n    if (delay !== null && !shouldPause) {\n      const id = setInterval(tick, delay)\n      return () => clearInterval(id)\n    }\n  }, [delay, shouldPause])\n}\n\nexport function smartHash(hash: string) {\n  if (hash.length <= 16) return hash\n  else return hash.substring(0, 8) + '...' + hash.substring(hash.length - 8)\n}\n\nexport function calAmountDelta(t: Transaction, id: string) {\n  const inputAmount = t.inputs.reduce<JSBI>((acc, input) => {\n    const inputAmount = JSBI.BigInt(input.amount)\n    return input.address === id ? JSBI.add(acc, inputAmount) : acc\n  }, JSBI.BigInt(0))\n  const outputAmount = t.outputs.reduce<JSBI>((acc, output) => {\n    const outputAmount = JSBI.BigInt(output.amount)\n    return output.address === id ? JSBI.add(acc, outputAmount) : acc\n  }, JSBI.BigInt(0))\n\n  return JSBI.subtract(outputAmount, inputAmount)\n}\n","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\n\nimport React from 'react'\nimport { Loader } from 'react-feather'\nimport styled from 'styled-components'\n\ninterface LoadingSpinnerProps {\n  size?: number\n}\n\nconst LoadingSpinner: React.FC<LoadingSpinnerProps> = ({ size }) => <Spinner size={size} />\n\nconst Spinner = styled(Loader)`\n  animation: spin 1s infinite;\n`\n\nexport default LoadingSpinner\n","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { FC } from 'react'\nimport ReactTooltip from 'react-tooltip'\nimport { useTheme } from 'styled-components'\n\ninterface TooltipProps {\n  id?: string\n}\n\nconst Tooltip: FC<TooltipProps> = ({ id }) => {\n  const theme = useTheme()\n\n  return <ReactTooltip backgroundColor={theme.tooltip} id={id} />\n}\n\nexport default Tooltip\n","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect } from 'react'\nimport { FC } from 'react'\nimport ReactTooltip from 'react-tooltip'\nimport styled from 'styled-components'\nimport Tooltip from './Tooltip'\n\nconst rebuildTooltips = () => {\n  ReactTooltip.rebuild()\n}\n\ninterface SectionContextType {\n  rebuildTooltips: () => void\n}\n\nexport const SectionContext = React.createContext<SectionContextType>({ rebuildTooltips: rebuildTooltips })\n\nconst Section: FC<{ className?: string }> = ({ children, className }) => {\n  useEffect(() => {\n    rebuildTooltips()\n  })\n\n  return (\n    <Container className={className}>\n      <SectionContext.Provider value={{ rebuildTooltips }}>\n        <Tooltip />\n        {children}\n      </SectionContext.Provider>\n    </Container>\n  )\n}\n\nconst Container = styled.section`\n  width: 100%;\n`\n\nexport default Section\n","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\n\nimport { AnimatePresence, motion } from 'framer-motion'\nimport React, { createContext, FC, useContext, useEffect } from 'react'\nimport { ChevronDown } from 'react-feather'\nimport styled, { css, DefaultTheme, FlattenInterpolation, ThemeProps } from 'styled-components'\nimport { SectionContext } from './Section'\nimport MiddleEllipsis from 'react-middle-ellipsis'\n\ninterface TableProps {\n  main?: boolean\n  hasDetails?: boolean\n  noBorder?: boolean\n  bodyOnly?: boolean\n}\n\nexport const Table: FC<TableProps> = ({ children, ...props }) => <StyledTable {...props}>{children}</StyledTable>\n\ninterface TableHeaderProps {\n  headerTitles: string[]\n  columnWidths?: string[]\n  compact?: boolean\n  transparent?: boolean\n}\n\nexport const TableHeader: React.FC<TableHeaderProps> = ({\n  headerTitles,\n  columnWidths,\n  compact = false,\n  transparent = false\n}) => (\n  <StyledTableHeader compact={compact} transparent={transparent}>\n    <tr>\n      {headerTitles.map((v, i) => (\n        <th key={i} style={{ width: columnWidths ? columnWidths[i] || 'auto' : 'auto' }}>\n          {v}\n        </th>\n      ))}\n    </tr>\n  </StyledTableHeader>\n)\n\n// == Row\n\ninterface RowProps {\n  isActive?: boolean\n}\n\nexport const Row = styled.tr<RowProps>`\n  background-color: ${({ theme, isActive }) => (isActive ? theme.bgHighlight : '')};\n  border: none;\n`\n\n// == Details Row\n\ninterface DetailsRowProps {\n  openCondition: boolean\n}\n\nconst OpenConditionContext = createContext(false)\n\nexport const DetailsRow: FC<DetailsRowProps> = ({ children, openCondition }) => {\n  const rebuildTooltips = useContext(SectionContext).rebuildTooltips\n  useEffect(() => rebuildTooltips()) // Need to rebuild after lazy rendering\n\n  return (\n    <OpenConditionContext.Provider value={openCondition}>\n      <tr className=\"details\">{children}</tr>\n    </OpenConditionContext.Provider>\n  )\n}\n\ninterface AnimatedCellProps {\n  className?: string\n  colSpan?: number\n}\n\nexport const AnimatedCell: FC<AnimatedCellProps> = ({ children, className, colSpan }) => {\n  const condition = useContext(OpenConditionContext)\n\n  return (\n    <td colSpan={colSpan}>\n      <AnimatePresence>\n        {condition && (\n          <motion.div\n            initial={{ height: 0 }}\n            animate={{ height: 'auto' }}\n            exit={{ height: 0 }}\n            transition={{ duration: 0.15 }}\n            className={className}\n          >\n            <AnimatedCellContainer>{children}</AnimatedCellContainer>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </td>\n  )\n}\n\n// == Details Toggle\n\nconst variants = {\n  closed: { rotate: 0 },\n  open: { rotate: 180 }\n}\n\ninterface DetailToggleProps {\n  isOpen: boolean\n  onClick: () => void\n}\n\nexport const DetailToggle: FC<DetailToggleProps> = ({ isOpen, onClick }) => {\n  return (\n    <td style={{ padding: 0, textAlign: 'center', overflow: 'hidden' }}>\n      <DetailToggleWrapper animate={isOpen ? 'open' : 'closed'} variants={variants} onClick={onClick}>\n        <ChevronDown size={20} />\n      </DetailToggleWrapper>\n    </td>\n  )\n}\n\nconst DetailToggleWrapper = styled(motion.div)`\n  cursor: pointer;\n`\n\n// == Highlighted cell (address, hash...)\n\nexport const HighlightedCell: FC = ({ children }) => {\n  return (\n    <StyledHighlightedCell>\n      <MiddleEllipsis>\n        <span>{children}</span>\n      </MiddleEllipsis>\n    </StyledHighlightedCell>\n  )\n}\n\n// ===\n// === Styles ====\n// ===\n\nconst StyledTable = styled.table<TableProps>`\n  width: 100%;\n  text-align: left;\n  border-collapse: collapse;\n  table-layout: fixed;\n  vertical-align: middle;\n\n  ${({ bodyOnly, main }) =>\n    !bodyOnly && main\n      ? css`\n          min-width: 550px;\n        `\n      : ''}\n\n  td:nth-child(1) {\n    width: ${({ bodyOnly }) => (bodyOnly ? '30%' : 'auto')};\n  }\n\n  tr:not(.details) td,\n  th {\n    padding: 10px 5px;\n  }\n\n  svg {\n    vertical-align: middle;\n  }\n\n  tbody {\n    tr:not(:last-child) {\n      border-bottom: ${({ hasDetails, noBorder, theme }) =>\n        !hasDetails ? (noBorder ? 'none' : `2px solid ${theme.borderPrimary}`) : ''};\n    }\n\n    tr.details {\n      border-bottom: 2px solid ${({ theme }) => theme.borderPrimary};\n      background-color: ${({ theme }) => theme.bgHighlight};\n\n      td {\n        padding-top: 0;\n        padding-bottom: 0;\n      }\n    }\n  }\n`\n\ninterface StyledTableHeaderProps {\n  compact: boolean\n  transparent: boolean\n}\n\nexport const StyledTableHeader = styled.thead<StyledTableHeaderProps>`\n  font-weight: 400;\n  color: ${({ theme }) => theme.textSecondary};\n\n  th {\n    position: sticky;\n    top: 0;\n    background-color: ${({ theme, transparent }) => (transparent ? 'transparent' : `${theme.bgPrimary}`)};\n  }\n\n  tr {\n    height: ${({ compact }) => (compact ? '30px' : '60px')};\n  }\n`\n\nexport interface TDStyle {\n  tdPos: number\n  style: FlattenInterpolation<ThemeProps<DefaultTheme>>\n}\n\nexport interface TableBopyProps {\n  tdStyles?: TDStyle[]\n}\n\nexport const TableBody = styled.tbody<TableBopyProps>`\n  color: ${({ theme }) => theme.textPrimary};\n\n  & > tr {\n    ${(props) =>\n      props.tdStyles\n        ? props.tdStyles.map(\n            (s) =>\n              css`\n                & > td:nth-child(${s.tdPos}) {\n                  ${s.style}\n                }\n              `\n          )\n        : ''}\n\n    &.details div {\n      overflow: hidden;\n    }\n\n    &:hover td {\n      background-color: ${({ theme }) => theme.bgHighlight};\n    }\n  }\n`\n\nconst StyledHighlightedCell = styled.td`\n  font-weight: 600 !important;\n  color: ${({ theme }) => theme.textAccent};\n`\n\nexport const AnimatedCellContainer = styled(motion.div)`\n  padding: 10px 0;\n  text-align: left;\n  overflow: hidden;\n\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`\n","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { FC } from 'react'\nimport styled from 'styled-components'\n\nexport const TextButton: FC<React.ButtonHTMLAttributes<HTMLButtonElement>> = ({ children, ...props }) => (\n  <StyledTextButton {...props}>{children}</StyledTextButton>\n)\n\nconst StyledTextButton = styled.button`\n  background: transparent;\n  font-size: inherit;\n  color: ${({ theme }) => theme.link};\n  display: flex;\n  align-items: center;\n  padding: 0;\n  border: 0;\n\n  &:hover {\n    color: ${({ theme }) => theme.linkHighlight};\n  }\n`\n","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\nimport React, { FC } from 'react'\nimport { abbreviateAmount } from '../utils/util'\nimport JSBI from 'jsbi'\n\ninterface AmountProps {\n  value: JSBI | undefined\n  className?: string\n}\n\nconst Amount: FC<AmountProps> = ({ value, className }) => {\n  if (value !== undefined) {\n    return <span className={className}>{abbreviateAmount(value).toString()} א</span>\n  } else {\n    return <span className={className}>- א</span>\n  }\n}\n\nexport default Amount\n","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { FC } from 'react'\nimport { ExternalLink } from 'react-feather'\nimport { Link, LinkProps } from 'react-router-dom'\nimport styled from 'styled-components'\nimport Amount from './Amount'\nimport { smartHash } from '../utils/util'\nimport MiddleEllipisis from 'react-middle-ellipsis'\nimport JSBI from 'jsbi'\n\ninterface TightLinkProps extends LinkProps {\n  maxWidth: string\n  text: string\n}\n\nexport const TightLinkStrict: React.FC<TightLinkProps> = ({ maxWidth, text, ...props }) => {\n  return (\n    <div style={{ maxWidth: maxWidth, display: 'flex', overflow: 'hidden' }}>\n      <StyledLink {...props} data-tip={text}>\n        {smartHash(text)}\n      </StyledLink>\n    </div>\n  )\n}\n\nexport const TightLink: React.FC<TightLinkProps> = ({ maxWidth, text, ...props }) => {\n  return (\n    <div style={{ maxWidth: maxWidth, display: 'flex', overflow: 'hidden' }}>\n      <MiddleEllipisis>\n        <StyledLink {...props} data-tip={text}>\n          {text}\n        </StyledLink>\n      </MiddleEllipisis>\n    </div>\n  )\n}\n\ninterface AddressLinkProps {\n  maxWidth?: string\n  address: string\n  txHashRef?: string\n  amount?: JSBI\n}\n\nexport const AddressLink: FC<AddressLinkProps> = ({ maxWidth = 'auto', address, txHashRef, amount }) => {\n  return (\n    <AddressWrapper>\n      <TightLink to={`/addresses/${address}`} maxWidth={maxWidth} text={address} className=\"ellipseMe\" />\n      {amount !== undefined && (\n        <OutputValue>\n          (<Amount value={amount} />)\n        </OutputValue>\n      )}\n      {txHashRef && (\n        <TxLink to={`/transactions/${txHashRef}`} data-tip={txHashRef}>\n          <ExternalLink size={12} />\n        </TxLink>\n      )}\n    </AddressWrapper>\n  )\n}\n\nconst OutputValue = styled.span`\n  color: ${({ theme }) => theme.textSecondary};\n  margin-left: 8px;\n`\n\nconst TxLink = styled(Link)`\n  margin-left: 8px;\n`\n\nconst StyledLink = styled(Link)`\n  white-space: nowrap;\n  font-family: 'Inconsolata';\n  font-weight: 600;\n`\n\nconst AddressWrapper = styled.div`\n  padding: 3px 0;\n  display: flex;\n  width: 100%;\n`\n","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useCallback, useContext, useEffect, useState } from 'react'\nimport dayjs from 'dayjs'\nimport _ from 'lodash'\nimport styled, { css } from 'styled-components'\nimport PageTitle from '../components/PageTitle'\nimport { Block } from '../types/api'\nimport { useInterval } from '../utils/util'\nimport blockIcon from '../images/block-icon.svg'\nimport { Plus } from 'react-feather'\nimport relativeTime from 'dayjs/plugin/relativeTime'\nimport LoadingSpinner from '../components/LoadingSpinner'\nimport { GlobalContext } from '..'\nimport { Table, TableBody, TableHeader, TDStyle } from '../components/Table'\nimport { TextButton } from '../components/Buttons'\nimport { TightLinkStrict } from '../components/Links'\nimport Section from '../components/Section'\nimport { motion } from 'framer-motion'\nimport { APIResp } from '../utils/client'\n\ndayjs.extend(relativeTime)\n\nconst BlockSection = () => {\n  const [fetchTs, setFetchTs] = useState({ from: dayjs().subtract(5, 'm'), to: dayjs() })\n  const [displayFromTs, setDisplayFromTs] = useState(dayjs().subtract(5, 'm'))\n  const [blocks, setBlocks] = useState<Block[]>([]) // TODO: define blocks type\n  const [loading, setLoading] = useState(false)\n\n  const client = useContext(GlobalContext).client\n\n  // Fetching Data\n  useEffect(() => {\n    const getBlocks = async () => {\n      if (!client) return\n\n      const to = fetchTs.to\n      const from = fetchTs.from\n\n      console.log('Fetching blocks: ' + from.format() + ' -> ' + to.format() + ' (' + from + ' -> ' + to + ')')\n\n      setLoading(true)\n      const fetchedBlocks: APIResp<Block[]> = await client.blocks(from.valueOf(), to.valueOf())\n\n      console.log('Number of block fetched: ' + fetchedBlocks.data?.length)\n\n      setBlocks((prev) =>\n        _.unionBy(fetchedBlocks.data, prev, 'hash').sort((a: Block, b: Block) => b.timestamp - a.timestamp)\n      )\n      setLoading(false)\n    }\n\n    getBlocks()\n  }, [client, fetchTs])\n\n  // Polling\n  const fetchData = useCallback(() => {\n    if (blocks.length > 0) {\n      setFetchTs({ from: dayjs(blocks[0].timestamp).add(1), to: dayjs() })\n    }\n  }, [blocks])\n\n  useInterval(fetchData, 5 * 1000)\n\n  // Load more\n  const loadMore = useCallback(() => {\n    const previousDisplayFromTs = displayFromTs\n    const newDisplayFromTs = dayjs(displayFromTs).subtract(5, 'm')\n    setDisplayFromTs(newDisplayFromTs)\n    setFetchTs({ from: newDisplayFromTs, to: previousDisplayFromTs })\n  }, [displayFromTs])\n\n  return (\n    <Section>\n      <PageTitle title=\"Blocks\" />\n      <Content>\n        <Table main>\n          <TableHeader\n            headerTitles={['', 'Hash', 'Height', 'Txn', 'Chain index', 'Timestamp']}\n            columnWidths={['50px', '25%', '16%', '12%', '20%', '']}\n          />\n          <TableBody tdStyles={TableBodyCustomStyles}>\n            {blocks\n              .filter((b) => dayjs(b.timestamp).isAfter(displayFromTs))\n              .map((b) => (\n                <motion.tr\n                  key={b.hash}\n                  animate={{ opacity: 1 }}\n                  initial={{ opacity: 0 }}\n                  transition={{ duration: 0.8 }}\n                >\n                  <td>\n                    <BlockIcon src={blockIcon} alt=\"Block\" />\n                  </td>\n                  <td>\n                    <TightLinkStrict to={`blocks/${b.hash}`} text={b.hash} maxWidth=\"150px\" />\n                  </td>\n                  <td>{b.height}</td>\n                  <td>{b.txNumber}</td>\n                  <td>\n                    {b.chainFrom} → {b.chainTo}\n                  </td>\n                  <td>{dayjs().to(b.timestamp)}</td>\n                </motion.tr>\n              ))}\n          </TableBody>\n        </Table>\n        <LoadMore>\n          {loading ? (\n            <span>\n              <LoadingSpinner size={12} /> Loading...\n            </span>\n          ) : (\n            <TextButton onClick={loadMore}>\n              <Plus />\n              Load more...\n            </TextButton>\n          )}\n        </LoadMore>\n      </Content>\n    </Section>\n  )\n}\n\nconst Content = styled.div`\n  margin-top: 30px;\n`\n\nconst TableBodyCustomStyles: TDStyle[] = [\n  {\n    tdPos: 1,\n    style: css`\n      text-align: center;\n      text-align: -webkit-center;\n    `\n  },\n  {\n    tdPos: 3,\n    style: css`\n      font-family: 'Roboto Mono', monospace;\n      color: ${({ theme }) => theme.textAccent};\n      font-weight: 400;\n      font-size: 95%;\n    `\n  },\n  {\n    tdPos: 4,\n    style: css`\n      font-family: 'Roboto Mono', monospace;\n      font-weight: 400;\n      font-size: 95%;\n    `\n  },\n  {\n    tdPos: 5,\n    style: css`\n      font-family: 'Roboto Mono', monospace;\n      font-weight: 400;\n      font-size: 95%;\n    `\n  },\n  {\n    tdPos: 6,\n    style: css`\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n    `\n  }\n]\n\nconst BlockIcon = styled.img`\n  height: 25px;\n  width: 25px;\n`\n\nconst LoadMore = styled.span`\n  display: flex;\n  align-items: center;\n  margin-top: 25px;\n  height: 20px;\n\n  svg {\n    margin-right: 5px;\n  }\n`\n\nexport default BlockSection\n","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { FC } from 'react'\nimport styled, { DefaultTheme } from 'styled-components'\nimport { abbreviateAmount } from '../utils/util'\nimport Amount from './Amount'\nimport JSBI from 'jsbi'\n\ntype BadgeType = 'plus' | 'minus' | 'neutral' | 'neutralHighlight'\n\ninterface BadgeProps {\n  type: BadgeType\n  content: string | JSBI | undefined\n  className?: string\n  amount?: boolean\n  prefix?: string\n}\n\nlet Badge: FC<BadgeProps> = ({ content, className, amount, prefix }) => {\n  return (\n    <div\n      className={className}\n      data-tip={amount && content ? `${abbreviateAmount(JSBI.BigInt(content), true)} א` : null}\n    >\n      {prefix && <span>{prefix}</span>}\n      {amount && content ? <Amount value={JSBI.BigInt(content)} /> : content}\n    </div>\n  )\n}\n\nconst getBadgeColor = (badgeType: BadgeType, theme: DefaultTheme) => {\n  let backgroundColor\n  let color\n\n  switch (badgeType) {\n    case 'plus':\n      backgroundColor = 'rgba(93, 203, 126, 0.12)'\n      color = 'rgba(93, 203, 126, 1)'\n      break\n    case 'minus':\n      backgroundColor = 'rgba(243, 113, 93, 0.1)'\n      color = 'rgba(243, 113, 93, 1)'\n      break\n    case 'neutral':\n      backgroundColor = theme.name === 'dark' ? 'rgba(101, 16, 247, 0.28)' : 'rgba(101, 16, 247, 0.6)'\n      color = theme.name === 'dark' ? 'rgba(255, 255, 255, 0.8)' : 'rgba(255, 255, 255, 1)'\n      break\n    case 'neutralHighlight':\n      backgroundColor = 'rgba(101, 16, 247, 1)'\n      color = 'rgba(255, 255, 255, 1)'\n  }\n\n  return { backgroundColor, color }\n}\n\nBadge = styled(Badge)`\n  background-color: ${({ type, theme }) => getBadgeColor(type, theme).backgroundColor};\n  color: ${({ type, theme }) => getBadgeColor(type, theme).color};\n  text-align: center;\n  padding: 5px 10px;\n  border-radius: 3px;\n  font-weight: 600;\n  float: left;\n  white-space: nowrap;\n`\n\nexport default Badge\n","import { useCallback, useEffect, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\n\nconst useTableDetailsState = (defaultState: boolean) => {\n  const [detailOpen, setDetailOpen] = useState(defaultState)\n\n  const { pathname } = useLocation()\n\n  useEffect(() => {\n    // Close details when location is changing\n    // TODO: Store state in URL? Careful, can become complex when we'll have paging\n    setDetailOpen(false)\n  }, [pathname])\n\n  const toggleDetail = useCallback(() => setDetailOpen(!detailOpen), [detailOpen])\n\n  return { detailOpen, setDetailOpen, toggleDetail }\n}\n\nexport default useTableDetailsState\n","export default __webpack_public_path__ + \"static/media/alephium-not-found.356bba05.svg\";","import React from 'react'\nimport styled from 'styled-components'\nimport logo from '../images/alephium-not-found.svg'\n\nconst InlineErrorMessage = ({ message, code }: { message?: string; code?: number }) => {\n  let shownMessage = ''\n\n  if (!message) {\n    shownMessage = \"Something's wrong\"\n  } else {\n    shownMessage = message\n  }\n\n  return (\n    <ErrorWrapper>\n      <Container>\n        <ErrorLogo />\n        <ErrorMessageContainer>\n          <ErrorCode>{code}</ErrorCode>\n          <ErrorMessage>{shownMessage}</ErrorMessage>\n        </ErrorMessageContainer>\n      </Container>\n    </ErrorWrapper>\n  )\n}\n\nconst ErrorWrapper = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 100px;\n`\n\nconst Container = styled.div`\n  background-color: ${({ theme }) => theme.bgSecondary};\n  border-radius: 14px;\n  padding: 35px 25px;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`\n\nconst ErrorLogo = styled.div`\n  background-image: url(${logo});\n  background-repeat: no-repeat;\n  background-size: contain;\n  background-position: center;\n  min-height: 150px;\n  max-height: 300px;\n  height: 25%;\n  width: 100%;\n  margin-bottom: 25px;\n`\n\nconst ErrorMessageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 0 25px;\n  text-align: center;\n`\n\nconst ErrorCode = styled.span`\n  font-size: 1.5rem;\n  font-weight: 600;\n  margin-bottom: 20px;\n`\n\nconst ErrorMessage = styled.span`\n  max-width: 500px;\n  width: 100%;\n  color: ${({ theme }) => theme.textSecondary};\n  overflow: hidden;\n  text-overflow: ellipsis;\n`\n\nexport default InlineErrorMessage\n","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\n\nimport dayjs from 'dayjs'\nimport React, { FC, useContext, useEffect, useState } from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\nimport styled, { css } from 'styled-components'\nimport { GlobalContext } from '..'\nimport PageTitle, { SecondaryTitle } from '../components/PageTitle'\nimport {\n  Table,\n  TableHeader,\n  TDStyle,\n  TableBody,\n  HighlightedCell,\n  AnimatedCell,\n  DetailsRow,\n  Row,\n  DetailToggle\n} from '../components/Table'\nimport { BlockDetail, Transaction } from '../types/api'\nimport transactionIcon from '../images/transaction-icon.svg'\nimport { AddressLink, TightLink } from '../components/Links'\nimport { ArrowRight } from 'react-feather'\nimport Badge from '../components/Badge'\nimport { APIResp } from '../utils/client'\nimport Amount from '../components/Amount'\nimport Section from '../components/Section'\nimport useTableDetailsState from '../hooks/useTableDetailsState'\nimport LoadingSpinner from '../components/LoadingSpinner'\nimport InlineErrorMessage from '../components/InlineErrorMessage'\nimport JSBI from 'jsbi'\n\ninterface ParamTypes {\n  id: string\n}\n\nconst BlockInfoSection = () => {\n  const { id } = useParams<ParamTypes>()\n  const [blockInfo, setBlockInfo] = useState<APIResp<BlockDetail>>()\n  const client = useContext(GlobalContext).client\n  const history = useHistory()\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    if (!client) return\n    setLoading(true)\n\n    client\n      .block(id)\n      .catch((e) => {\n        console.log(e)\n        setLoading(false)\n      })\n      .then((r) => {\n        if (!r) return\n        setBlockInfo(r)\n        setLoading(false)\n      })\n  }, [client, id])\n\n  // If user entered an incorrect url (or did an incorrect search, try to see if a transaction exists with this hash)\n\n  useEffect(() => {\n    if (!client) return\n    ;(async () => {\n      if (blockInfo?.detail) {\n        const res = await client.transaction(id)\n        if (!res?.detail) {\n          // A transaction exists, redirect automatically\n          history.push(`/transactions/${id}`)\n        }\n      }\n    })()\n  }, [blockInfo, id, client, history])\n\n  return (\n    <Section>\n      <PageTitle title=\"Block\" />\n      {!loading ? (\n        <>\n          {blockInfo && blockInfo.status === 200 && blockInfo.data ? (\n            <>\n              <Table bodyOnly>\n                <TableBody tdStyles={BlockTableBodyCustomStyles}>\n                  <tr>\n                    <td>Hash</td>\n                    <HighlightedCell>{blockInfo.data.hash}</HighlightedCell>\n                  </tr>\n                  <tr>\n                    <td>Height</td>\n                    <td>{blockInfo.data.height}</td>\n                  </tr>\n                  <tr>\n                    <td>Chain Index</td>\n                    <td>\n                      {blockInfo.data.chainFrom} → {blockInfo.data.chainTo}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>Nb. of transactions</td>\n                    <td>{blockInfo.data.transactions.length}</td>\n                  </tr>\n                  <tr>\n                    <td>Timestamp</td>\n                    <td>{dayjs(blockInfo.data.timestamp).format('YYYY/MM/DD HH:mm:ss')}</td>\n                  </tr>\n                </TableBody>\n              </Table>\n\n              <SecondaryTitle>Transactions</SecondaryTitle>\n              <Table main hasDetails>\n                <TableHeader\n                  headerTitles={['', 'Hash', 'Inputs', '', 'Outputs', 'Amount', '']}\n                  columnWidths={['50px', '', '15%', '50px', '', '130px', '50px']}\n                />\n                <TableBody tdStyles={TXTableBodyCustomStyles}>\n                  {blockInfo.data.transactions.map((t, i) => (\n                    <TransactionRow transaction={t} key={i} />\n                  ))}\n                </TableBody>\n              </Table>\n            </>\n          ) : (\n            <InlineErrorMessage message={blockInfo?.detail} code={blockInfo?.status} />\n          )}\n        </>\n      ) : (\n        <LoadingSpinner />\n      )}\n    </Section>\n  )\n}\n\ninterface TransactionRowProps {\n  transaction: Transaction\n}\n\nconst TransactionRow: FC<TransactionRowProps> = ({ transaction }) => {\n  const t = transaction\n  const { detailOpen, toggleDetail } = useTableDetailsState(false)\n\n  return (\n    <>\n      <Row key={t.hash} isActive={detailOpen}>\n        <td>\n          <TransactionIcon />\n        </td>\n        <td>\n          <TightLink to={`/transactions/${t.hash}`} text={t.hash} maxWidth=\"150px\" />\n        </td>\n        <td>\n          {t.inputs.length} address{t.inputs.length > 1 ? 'es' : ''}\n        </td>\n        <td>\n          <ArrowRight size={15} />\n        </td>\n        <td>\n          {t.outputs.length} address{t.outputs.length > 1 ? 'es' : ''}\n        </td>\n        <td>\n          <Badge\n            type={'neutral'}\n            content={t.outputs.reduce<JSBI>((acc, o) => JSBI.add(acc, JSBI.BigInt(o.amount)), JSBI.BigInt(0))}\n            amount\n          />\n        </td>\n        <DetailToggle isOpen={detailOpen} onClick={toggleDetail} />\n      </Row>\n      <DetailsRow openCondition={detailOpen}>\n        <td />\n        <td />\n        <AnimatedCell>\n          {t.inputs.map((input, i) => (\n            <AddressLink key={i} address={input.address} txHashRef={input.txHashRef} />\n          ))}\n        </AnimatedCell>\n        <td />\n        <AnimatedCell>\n          {t.outputs.map((o, i) => (\n            <AddressLink address={o.address} key={i} />\n          ))}\n        </AnimatedCell>\n        <AnimatedCell>\n          {t.outputs.map((o, i) => (\n            <Amount value={JSBI.BigInt(o.amount)} key={i} />\n          ))}\n        </AnimatedCell>\n        <td />\n      </DetailsRow>\n    </>\n  )\n}\n\n// TODO: make expandlable elements generic (in Table.tsx)\n\nconst TransactionIcon = styled.div`\n  background-image: url(${transactionIcon});\n  background-position: center;\n  background-repeat: no-repeat;\n  height: 25px;\n  width: 25px;\n`\n\nconst BlockTableBodyCustomStyles: TDStyle[] = [\n  {\n    tdPos: 2,\n    style: css`\n      font-weight: 600;\n    `\n  }\n]\n\nconst TXTableBodyCustomStyles: TDStyle[] = [\n  {\n    tdPos: 1,\n    style: css`\n      text-align: center;\n      text-align: -webkit-center;\n    `\n  },\n  {\n    tdPos: 3,\n    style: css`\n      color: ${({ theme }) => theme.textAccent};\n    `\n  },\n  {\n    tdPos: 4,\n    style: css`\n      text-align: center;\n      color: ${({ theme }) => theme.textSecondary};\n    `\n  },\n  {\n    tdPos: 5,\n    style: css`\n      color: ${({ theme }) => theme.textAccent};\n    `\n  }\n]\n\nexport default BlockInfoSection\n","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\n\nimport dayjs from 'dayjs'\nimport React, { useContext, useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { GlobalContext } from '..'\nimport PageTitle from '../components/PageTitle'\nimport { Transaction } from '../types/api'\nimport { APIResp } from '../utils/client'\nimport Badge from '../components/Badge'\nimport { Table, TableBody, HighlightedCell } from '../components/Table'\nimport { AddressLink, TightLink } from '../components/Links'\nimport Section from '../components/Section'\nimport LoadingSpinner from '../components/LoadingSpinner'\nimport InlineErrorMessage from '../components/InlineErrorMessage'\nimport JSBI from 'jsbi'\n\ninterface ParamTypes {\n  id: string\n}\n\nconst TransactionInfoSection = () => {\n  const { id } = useParams<ParamTypes>()\n  const client = useContext(GlobalContext).client\n  const [txInfo, setTxInfo] = useState<APIResp<Transaction>>()\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    if (!client) return\n    setLoading(true)\n\n    client\n      .transaction(id)\n      .catch((e) => {\n        console.log(e)\n        setLoading(false)\n      })\n      .then((r) => {\n        if (!r) return\n\n        setTxInfo(r)\n        setLoading(false)\n      })\n  }, [client, id])\n\n  return (\n    <Section>\n      <PageTitle title=\"Transaction\" />\n      {!loading ? (\n        <>\n          {txInfo && txInfo.status === 200 && txInfo.data ? (\n            <Table bodyOnly>\n              <TableBody>\n                <tr>\n                  <td>Hash</td>\n                  <HighlightedCell>{txInfo.data.hash}</HighlightedCell>\n                </tr>\n                <tr>\n                  <td>Block Hash</td>\n                  <td>\n                    <TightLink\n                      to={`../blocks/${txInfo.data.blockHash || ''}`}\n                      text={txInfo.data.blockHash || ''}\n                      maxWidth=\"550px\"\n                    />\n                  </td>\n                </tr>\n                <tr>\n                  <td>Timestamp</td>\n                  <td>{dayjs(txInfo.data.timestamp).format('YYYY/MM/DD HH:mm:ss')}</td>\n                </tr>\n                <tr>\n                  <td>Inputs</td>\n                  <td>\n                    {txInfo.data.inputs && txInfo.data.inputs.length > 0\n                      ? txInfo.data.inputs.map((v, i) => (\n                          <AddressLink\n                            address={v.address}\n                            txHashRef={v.txHashRef}\n                            key={i}\n                            amount={JSBI.BigInt(v.amount)}\n                          />\n                        ))\n                      : 'Block Rewards'}\n                  </td>\n                </tr>\n                <tr>\n                  <td>Outputs</td>\n                  <td>\n                    {txInfo.data.outputs.map((v, i) => (\n                      <AddressLink address={v.address} key={i} amount={JSBI.BigInt(v.amount)} txHashRef={v.spent} />\n                    ))}\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <b>Total value</b>\n                  </td>\n                  <td>\n                    <Badge\n                      type={'neutral'}\n                      content={txInfo.data.outputs.reduce<JSBI>(\n                        (acc, o) => JSBI.add(acc, JSBI.BigInt(o.amount)),\n                        JSBI.BigInt(0)\n                      )}\n                      amount\n                    />\n                  </td>\n                </tr>\n              </TableBody>\n            </Table>\n          ) : (\n            <InlineErrorMessage message={txInfo?.detail} code={txInfo?.status} />\n          )}\n        </>\n      ) : (\n        <LoadingSpinner />\n      )}\n    </Section>\n  )\n}\n\nexport default TransactionInfoSection\n","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { FC, useContext, useEffect, useRef, useState } from 'react'\nimport dayjs from 'dayjs'\nimport relativeTime from 'dayjs/plugin/relativeTime'\nimport { useParams } from 'react-router-dom'\nimport { GlobalContext } from '..'\nimport PageTitle, { SecondaryTitle } from '../components/PageTitle'\nimport { Address, Transaction } from '../types/api'\nimport { APIResp } from '../utils/client'\nimport { calAmountDelta } from '../utils/util'\nimport Badge from '../components/Badge'\nimport {\n  Table,\n  TableBody,\n  HighlightedCell,\n  TableHeader,\n  AnimatedCell,\n  DetailsRow,\n  Row,\n  DetailToggle,\n  TDStyle\n} from '../components/Table'\nimport { AddressLink, TightLink } from '../components/Links'\nimport { ArrowRight } from 'react-feather'\nimport Section from '../components/Section'\nimport styled, { css } from 'styled-components'\nimport _ from 'lodash'\nimport useTableDetailsState from '../hooks/useTableDetailsState'\nimport LoadingSpinner from '../components/LoadingSpinner'\nimport InlineErrorMessage from '../components/InlineErrorMessage'\nimport JSBI from 'jsbi'\n\ndayjs.extend(relativeTime)\n\ninterface ParamTypes {\n  id: string\n}\n\nconst TransactionInfoSection = () => {\n  const { id } = useParams<ParamTypes>()\n  const client = useContext(GlobalContext).client\n  const [addressInfo, setAddressInfo] = useState<APIResp<Address>>()\n  const [loading, setLoading] = useState(true)\n  const previousId = useRef(id)\n\n  useEffect(() => {\n    if (!client) return\n\n    previousId.current = id\n\n    setLoading(true)\n\n    client\n      .address(id)\n      .catch((e) => {\n        console.log(e)\n        setLoading(false)\n      })\n      .then((r) => {\n        if (!r) return\n        setAddressInfo(r)\n        setLoading(false)\n      })\n  }, [client, id])\n\n  return (\n    <Section>\n      <PageTitle title=\"Address\" />\n      {!loading && previousId.current === id ? (\n        <>\n          {addressInfo && addressInfo.status === 200 && addressInfo.data ? (\n            <>\n              <Table bodyOnly>\n                <TableBody tdStyles={AddressTableBodyCustomStyles}>\n                  <tr>\n                    <td>Address</td>\n                    <HighlightedCell>{id}</HighlightedCell>\n                  </tr>\n                  <tr>\n                    <td>Balance</td>\n                    <td>\n                      <Badge type={'neutralHighlight'} content={addressInfo.data.balance} amount />\n                    </td>\n                  </tr>\n                </TableBody>\n              </Table>\n\n              <SecondaryTitle>History</SecondaryTitle>\n              {addressInfo.data.transactions.length > 0 ? (\n                <Table hasDetails main>\n                  <TableHeader\n                    headerTitles={['Hash', 'Timestamp', '', 'Account(s)', 'Amount', '']}\n                    columnWidths={['10%', '15%', '80px', '30%', '80px', '25px']}\n                  />\n                  <TableBody>\n                    {addressInfo.data.transactions\n                      .sort((t1, t2) => t2.timestamp - t1.timestamp)\n                      .map((t, i) => (\n                        <AddressTransactionRow transaction={t} addressId={id} key={i} />\n                      ))}\n                  </TableBody>\n                </Table>\n              ) : (\n                <NoTxMessage>No transactions yet</NoTxMessage>\n              )}\n            </>\n          ) : (\n            <InlineErrorMessage message={addressInfo?.detail} code={addressInfo?.status} />\n          )}\n        </>\n      ) : (\n        <LoadingSpinner />\n      )}\n    </Section>\n  )\n}\n\ninterface AddressTransactionRowProps {\n  transaction: Transaction\n  addressId: string\n}\n\nconst AddressTransactionRow: FC<AddressTransactionRowProps> = ({ transaction, addressId }) => {\n  const t = transaction\n  const { detailOpen, toggleDetail } = useTableDetailsState(false)\n\n  const amountDelta = calAmountDelta(t, addressId)\n  const isOut = JSBI.lessThan(amountDelta, JSBI.BigInt(0))\n\n  const renderOutputAccounts = () => {\n    return _(t.outputs.filter((o) => o.address !== addressId))\n      .map((v) => v.address)\n      .uniq()\n      .value()\n      .map((v, i) => <AddressLink key={i} address={v} maxWidth=\"250px\" />)\n  }\n\n  const renderInputAccounts = () => {\n    const inputAccounts = _(t.inputs.filter((o) => o.address !== addressId))\n      .map((v) => v.address)\n      .uniq()\n      .value()\n      .map((v, i) => <AddressLink key={i} address={v} maxWidth=\"250px\" />)\n\n    if (inputAccounts.length > 0) {\n      return inputAccounts\n    } else {\n      return <BlockRewardLabel>Block rewards</BlockRewardLabel>\n    }\n  }\n\n  return (\n    <>\n      <Row key={t.hash} isActive={detailOpen}>\n        <td>\n          <TightLink to={`/transactions/${t.hash}`} text={t.hash} maxWidth=\"120px\" />\n        </td>\n        <td>{dayjs().to(t.timestamp)}</td>\n        <td>\n          <Badge type={isOut ? 'minus' : 'plus'} content={isOut ? 'To' : 'From'} />\n        </td>\n        <td>{isOut ? renderOutputAccounts() : renderInputAccounts()}</td>\n        <td>\n          <Badge\n            type={isOut ? 'minus' : 'plus'}\n            amount\n            prefix={isOut ? '- ' : '+ '}\n            content={\n              JSBI.lessThan(amountDelta, JSBI.BigInt(0))\n                ? JSBI.multiply(amountDelta, JSBI.BigInt(-1)).toString()\n                : amountDelta.toString()\n            }\n          />\n        </td>\n        <DetailToggle isOpen={detailOpen} onClick={toggleDetail} />\n      </Row>\n      <DetailsRow openCondition={detailOpen}>\n        <td />\n        <td />\n        <AnimatedCell colSpan={4}>\n          <Table noBorder>\n            <TableHeader headerTitles={['Inputs', '', 'Outputs']} columnWidths={['', '50px', '']} compact transparent />\n            <TableBody>\n              <Row>\n                <td>\n                  {t.inputs.length > 0 ? (\n                    t.inputs.map((input, i) => (\n                      <AddressLink\n                        key={i}\n                        address={input.address}\n                        txHashRef={input.txHashRef}\n                        amount={JSBI.BigInt(input.amount)}\n                        maxWidth=\"180px\"\n                      />\n                    ))\n                  ) : (\n                    <BlockRewardLabel>Block rewards</BlockRewardLabel>\n                  )}\n                </td>\n                <td style={{ textAlign: 'center' }}>\n                  <ArrowRight size={12} />\n                </td>\n                <td>\n                  {t.outputs.map((output, i) => (\n                    <AddressLink\n                      key={i}\n                      address={output.address}\n                      amount={JSBI.BigInt(output.amount)}\n                      maxWidth=\"180px\"\n                    />\n                  ))}\n                </td>\n              </Row>\n            </TableBody>\n          </Table>\n        </AnimatedCell>\n      </DetailsRow>\n    </>\n  )\n}\n\nconst AddressTableBodyCustomStyles: TDStyle[] = [\n  {\n    tdPos: 2,\n    style: css`\n      font-weight: 600;\n    `\n  }\n]\n\nconst BlockRewardLabel = styled.span`\n  color: ${({ theme }) => theme.textSecondary};\n`\n\nconst NoTxMessage = styled.span`\n  color: ${({ theme }) => theme.textSecondary};\n`\n\nexport default TransactionInfoSection\n","export default __webpack_public_path__ + \"static/media/alephium-logo-gradient-stroke.be7cb67e.svg\";","import React from 'react'\nimport styled from 'styled-components'\nimport logo from '../images/alephium-logo-gradient-stroke.svg'\n\nconst ComingSoon = ({ text }: { text: string }) => {\n  return (\n    <ComingSoonWrapper>\n      <ComingSoonLogo />\n      <ComingSoonText>{text}</ComingSoonText>\n    </ComingSoonWrapper>\n  )\n}\n\nconst ComingSoonWrapper = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 100px;\n`\n\nconst ComingSoonLogo = styled.div`\n  background-image: url(${logo});\n  background-repeat: no-repeat;\n  background-size: contain;\n  background-position: center;\n  min-height: 150px;\n  max-height: 300px;\n  height: 25%;\n  width: 100%;\n  margin-bottom: 25px;\n`\n\nconst ComingSoonText = styled.p`\n  text-align: center;\n`\n\nexport default ComingSoon\n","import React from 'react'\nimport Section from '../components/Section'\nimport ComingSoon from '../components/ComingSoon'\nimport styled from 'styled-components'\n\nconst AddressesSection = () => {\n  return (\n    <StyledSection>\n      <ComingSoon text=\"Coming soon.\" />\n    </StyledSection>\n  )\n}\n\nconst StyledSection = styled(Section)`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n`\n\nexport default AddressesSection\n","import React from 'react'\nimport styled from 'styled-components'\nimport ComingSoon from '../components/ComingSoon'\nimport Section from '../components/Section'\n\nconst TransactionsSection = () => {\n  return (\n    <StyledSection>\n      <ComingSoon text=\"Coming soon.\" />\n    </StyledSection>\n  )\n}\n\nconst StyledSection = styled(Section)`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n`\n\nexport default TransactionsSection\n","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState, useEffect, useRef, useCallback } from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { HashRouter as Router, Redirect, Route } from 'react-router-dom'\nimport styled, { ThemeProvider } from 'styled-components'\nimport { darkTheme, lightTheme, ThemeType } from './style/themes'\nimport GlobalStyle, { deviceBreakPoints } from './style/globalStyles'\nimport * as serviceWorker from './serviceWorker'\n\nimport { StyledThemeSwitcher } from './components/ThemeSwitcher'\nimport Sidebar from './components/Sidebar'\nimport SearchBar from './components/SearchBar'\nimport BlockSection from './sections/BlockSection'\nimport { createClient, ScrollToTop } from './utils/util'\nimport { AlephClient } from './utils/client'\nimport BlockInfoSection from './sections/BlockInfoSection'\nimport TransactionInfoSection from './sections/TransactionInfoSection'\nimport AddressInfoSection from './sections/AddressInfoSection'\nimport AddressesSection from './sections/AdressesSection'\nimport TransactionsSection from './sections/TransactionsSection'\nimport { AnimatePresence, motion } from 'framer-motion'\nimport dayjs from 'dayjs'\nimport updateLocale from 'dayjs/plugin/updateLocale'\n\ninterface GlobalContext {\n  client: AlephClient | undefined\n  currentTheme: ThemeType\n  switchTheme: (arg0: ThemeType) => void\n  setSnackbarMessage: (message: SnackbarMessage) => void\n}\n\nexport const GlobalContext = React.createContext<GlobalContext>({\n  client: undefined,\n  currentTheme: 'dark',\n  switchTheme: () => null,\n  setSnackbarMessage: () => null\n})\n\ninterface SnackbarMessage {\n  text: string\n  type: 'info' | 'alert' | 'success'\n  duration?: number\n}\n\n/* Customize data format accross the app */\ndayjs.extend(updateLocale)\n\ndayjs.updateLocale('en', {\n  relativeTime: {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few secs',\n    m: 'a min',\n    mm: '%d mins',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years'\n  }\n})\n\nconst App = () => {\n  const [theme, setTheme] = useStateWithLocalStorage<ThemeType>('theme', 'light')\n  const [client, setClient] = useState<AlephClient>()\n  const [snackbarMessage, setSnackbarMessage] = useState<SnackbarMessage | undefined>()\n\n  const contentRef = useRef(null)\n\n  const getContentRef = useCallback(() => contentRef.current, [])\n\n  useEffect(() => {\n    let url: string | null | undefined\n\n    if (process.env.REACT_APP_BACKEND_URL && window.location.hostname === 'localhost') {\n      url = process.env.REACT_APP_BACKEND_URL\n    } else {\n      const xs = window.location.hostname.split('.')\n      if (!url && xs.length === 3 && xs[1] === 'alephium' && xs[2] === 'org') {\n        url = `${window.location.protocol}//${xs[0]}-backend.${xs[1]}.${xs[2]}`\n      }\n    }\n\n    setClient(createClient(url || 'http://localhost:9090'))\n  }, [])\n\n  // Remove snackbar popup\n  useEffect(() => {\n    if (snackbarMessage) {\n      setTimeout(() => setSnackbarMessage(undefined), snackbarMessage.duration || 3000)\n    }\n  }, [snackbarMessage])\n\n  return (\n    <Router>\n      <ThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\n        <GlobalStyle />\n        <GlobalContext.Provider\n          value={{\n            client,\n            currentTheme: theme as ThemeType,\n            switchTheme: setTheme as (arg0: ThemeType) => void,\n            setSnackbarMessage\n          }}\n        >\n          <MainContainer>\n            <Sidebar />\n            <ContentContainer>\n              <ContentWrapper ref={contentRef}>\n                <ScrollToTop getScrollContainer={getContentRef} />\n                <Header>\n                  <SearchBar />\n                </Header>\n                <Content>\n                  <Route exact path=\"/\">\n                    <Redirect to=\"/blocks\" />\n                  </Route>\n                  <Route exact path=\"/blocks\">\n                    <BlockSection />\n                  </Route>\n                  <Route path=\"/blocks/:id\">\n                    <BlockInfoSection />\n                  </Route>\n                  <Route exact path=\"/addresses\">\n                    <AddressesSection />\n                  </Route>\n                  <Route path=\"/addresses/:id\">\n                    <AddressInfoSection />\n                  </Route>\n                  <Route exact path=\"/transactions\">\n                    <TransactionsSection />\n                  </Route>\n                  <Route path=\"/transactions/:id\">\n                    <TransactionInfoSection />\n                  </Route>\n                </Content>\n              </ContentWrapper>\n            </ContentContainer>\n            <SnackbarManager message={snackbarMessage} />\n          </MainContainer>\n        </GlobalContext.Provider>\n      </ThemeProvider>\n    </Router>\n  )\n}\n\nconst SnackbarManager = ({ message }: { message: SnackbarMessage | undefined }) => {\n  return (\n    <SnackbarManagerContainer>\n      <AnimatePresence>\n        {message && (\n          <SnackbarPopup\n            initial={{ y: 10, opacity: 0 }}\n            animate={{ y: 0, opacity: 1 }}\n            exit={{ opacity: 0 }}\n            className={message?.type}\n          >\n            {message?.text}\n          </SnackbarPopup>\n        )}\n      </AnimatePresence>\n    </SnackbarManagerContainer>\n  )\n}\n\n/* Custom hooks */\n// Local storage hook\n\nfunction useStateWithLocalStorage<T>(localStorageKey: string, defaultValue: T) {\n  const [value, setValue] = React.useState(localStorage.getItem(localStorageKey) || defaultValue)\n\n  React.useEffect(() => {\n    localStorage.setItem(localStorageKey, value as string)\n  }, [localStorageKey, value])\n\n  return [value, setValue]\n}\n\n/* Styles */\n\nconst MainContainer = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  display: flex;\n  overflow: hidden;\n`\n\nconst ContentContainer = styled.div`\n  flex: 1;\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  overflow-y: auto;\n`\n\nconst ContentWrapper = styled.main`\n  min-height: 100%;\n  flex: 1 1 1200px;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  max-width: 1400px;\n\n  @media ${deviceBreakPoints.mobile} {\n    width: 100%;\n    justify-self: flex-start;\n  }\n`\n\nconst Content = styled.div`\n  flex: 1;\n  display: flex;\n  padding: 0 min(5vw, 50px);\n  margin-top: 20px;\n  margin-bottom: 40px;\n`\n\nconst Header = styled.header`\n  display: flex;\n  align-items: center;\n  margin: 40px;\n  z-index: 1;\n\n  @media ${deviceBreakPoints.mobile} {\n    margin: 10px;\n  }\n\n  ${StyledThemeSwitcher} {\n    @media ${deviceBreakPoints.mobile} {\n      display: none;\n    }\n  }\n`\n\nconst SnackbarManagerContainer = styled.div`\n  position: fixed;\n  bottom: 0;\n  right: 0;\n  left: 0;\n  display: flex;\n  z-index: 10001;\n`\n\nconst SnackbarPopup = styled(motion.div)`\n  bottom: 10px;\n  margin: 10px auto;\n  text-align: center;\n  min-width: 300px;\n  width: 50vw;\n  padding: 20px 15px;\n  color: white;\n  border-radius: 14px;\n  z-index: 1000;\n  box-shadow: 0 15px 15px rgba(0, 0, 0, 0.15);\n\n  &.alert {\n    background-color: rgb(219, 99, 69);\n  }\n\n  &.info {\n    background-color: black;\n  }\n\n  &.success {\n    background-color: rgb(56, 168, 93);\n  }\n`\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n)\n\n//\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}