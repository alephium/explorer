{"version":3,"sources":["style/globalStyles.ts","components/SearchBar.tsx","utils/strings.ts","images/address-icon.svg","images/block-icon.svg","images/explorer-logo-dark.svg","images/explorer-logo-light.svg","images/transaction-icon.svg","components/Menu.tsx","components/NetworkLogo.tsx","components/ThemeSwitcher.tsx","components/Sidebar.tsx","hooks/useWindowSize.ts","utils/amounts.ts","components/Amount.tsx","components/Badge.tsx","images/alephium-not-found.svg","components/InlineErrorMessage.tsx","components/Links.tsx","components/LoadingSpinner.tsx","hooks/useQueryParams.ts","components/Buttons/TextButton.tsx","components/PageSwitch.tsx","components/Tooltip.tsx","components/Section.tsx","components/SectionTitle.tsx","components/Buttons/ClipboardButton.tsx","components/Buttons/QRCodeButton.tsx","components/Table.tsx","hooks/usePageNumber.ts","hooks/useTableDetailsState.ts","utils/api.ts","utils/types.ts","sections/AddressInfoSection.tsx","images/alephium-logo-gradient-stroke.svg","components/ComingSoon.tsx","sections/AdressesSection.tsx","sections/BlockInfoSection.tsx","utils/hooks.ts","sections/BlockSection.tsx","sections/TransactionInfoSection.tsx","sections/TransactionsSection.tsx","serviceWorker.js","style/themes.ts","utils/client.ts","utils/routing.ts","index.tsx","utils/misc.ts"],"names":["GlobalStyle","createGlobalStyle","normalize","theme","body","textPrimary","link","linkHighlight","deviceSizes","deviceBreakPoints","mobile","tablet","desktop","Container","styled","div","SearchIcon","Search","SearchInput","input","bgSecondary","borderPrimary","borderHighlight","accentGradient","Backdrop","motion","SearchBar","useState","active","setActive","search","setSearch","setSnackbarMessage","useContext","GlobalContext","inputRef","useRef","history","useHistory","handleRemoveFocus","redirect","to","current","blur","push","searching","str","word","trim","test","length","slice","text","type","ref","onBlur","onChange","e","target","value","onClick","onKeyDown","key","placeholder","animate","opacity","transition","duration","menuHeight","MenuContainer","MenuCurrentContent","borderSecondary","Label","span","IconContainer","MenuItemsContainer","MenuItemsList","bgPrimary","ItemIcon","MenuItem","bgHover","ItemText","Divider","Menu","label","icon","items","direction","className","visible","setVisible","animationOrigin","animationDestination","id","tabIndex","size","AnimatePresence","initial","y","exit","style","marginBottom","marginTop","map","item","i","LogoContainer","network","NetworkLogo","getButtonColor","buttonTheme","toggleVariants","light","left","backgroundColor","dark","toggleWidth","StyledThemeSwitcher","bgHighlight","ToggleContent","ToggleIcon","ToggleFloatingIndicator","ThemeSwitcher","currentTheme","switchTheme","color","variants","Logo","img","CloseButton","SidebarContainer","open","Header","header","Tabs","Navigation","nav","NavigationTitle","textSecondary","Tab","NavLink","TabIcon","NetworkMenu","Sidebar","sidebarState","useTheme","windowWidth","width","undefined","height","windowSize","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","lastWindowWidth","setSidebarState","networkType","isMainnet","switchToNetwork","location","assign","closeSidebar","useCallback","alt","src","name","logoLight","logoDark","blockIcon","addressIcon","transactionIcon","MONEY_SYMBOL","QUINTILLION","removeTrailingZeros","numString","numberArray","split","numberOfZeros","getNumberOfTrailingZeros","numberArrayWithoutTrailingZeros","join","replace","abbreviateAmount","baseNum","showFullPrecision","nbOfDecimalsToShow","minDigits","JSBI","lessThanOrEqual","BigInt","alephNum","Number","tier","Math","log10","numberOfDigitsToDisplay","toFixed","toString","suffix","scale","pow","scaled","Amount","Badge","content","amount","prefix","floatRight","float","getBadgeColor","badgeType","ErrorWrapper","ErrorLogo","logo","ErrorMessageContainer","ErrorCode","ErrorMessage","InlineErrorMessage","message","code","shownMessage","TightLink","maxWidth","props","display","overflow","StyledLink","stopPropagation","AddressLink","address","txHashRef","AddressWrapper","OutputValue","TxLink","Link","Spinner","Loader","LoadingSpinner","useQueryParams","paramNames","useLocation","params","URLSearchParams","get","forEach","p","StyledTextButton","button","disabled","TextButton","children","SwitchContainer","PageNumbers","TotalNumberOfPages","PageSwitch","elementsPerPage","totalNumberOfElements","numberOfElementsLoaded","currentPage","parseInt","locationSearch","useMemo","handlePageSwitch","setPageNumber","pageNumber","set","totalNumberOfPages","ceil","isNaN","Tooltip","tooltip","rebuildTooltips","ReactTooltip","rebuild","SectionContext","createContext","section","Section","Provider","TitleWrapper","Title","h1","Surtitle","h2","Subtitle","SecondaryTitle","SectionTitle","title","surtitle","subtitle","StyledClipboardIcon","Clipboard","StyledCheckIcon","Check","ClipboardButton","textToCopy","hasBeenCopied","setHasBeenCopied","setInterval","navigator","clipboard","writeText","catch","then","QrCode","QRCodeButton","textToEncode","globalEventOff","bgColor","fgColor","Table","TableWrapper","StyledTable","TableHeader","headerTitles","columnWidths","textAlign","compact","transparent","StyledTableHeader","v","Row","tr","isActive","OpenConditionContext","DetailsRow","openCondition","AnimatedCell","colSpan","alignItems","condition","AnimatedCellContainer","closed","rotate","DetailToggle","isOpen","padding","DetailToggleWrapper","HighlightedCell","qrCodeContent","StyledHighlightedCell","noBorder","table","scrollable","bodyOnly","css","hasDetails","thead","TableBody","tbody","tdStyles","s","tdPos","td","textAccent","usePageNumber","pageParam","delete","useTableDetailsState","defaultState","detailOpen","setDetailOpen","pathname","toggleDetail","getHumanReadableError","defaultErrorMessage","obj","stringifiedError","error","isHTTPError","detail","dayjs","extend","relativeTime","AddressTransactionRow","transaction","addressId","t","amountDelta","inputAmount","inputs","reduce","acc","add","outputAmount","outputs","output","subtract","calAmountDelta","isOut","lessThan","hash","timestamp","every","o","_","filter","uniq","inputAccounts","BlockRewardLabel","renderInputAccounts","multiply","AddressTableBodyCustomStyles","NoTxMessage","TransactionInfoSection","useParams","client","explorerClient","addressInfo","setAddressInfo","addressInfoError","setAddressInfoError","txList","setTxList","infoLoading","setInfoLoading","txLoading","setTxLoading","previousId","fetchAddressInfo","a","getAddressDetails","response","console","log","data","addressTransactions","r","txNumber","balance","lockedBalance","status","main","sort","t1","t2","ComingSoonWrapper","ComingSoonLogo","ComingSoonText","ComingSoon","StyledSection","AddressesSection","TransactionRow","TransactionIcon","BlockTableBodyCustomStyles","TXTableBodyCustomStyles","BlockInfoSection","blockInfo","setBlockInfo","currentPageNumber","block","blockTransactions","res","chainFrom","chainTo","format","mainChain","useInterval","callback","delay","shouldPause","savedCallback","clearInterval","TitleAndLoader","Content","PollingLoadingSpinner","TableBodyCustomStyles","BlockRow","BlockIcon","BlockSection","blockList","setBlockList","loading","setLoading","manualLoading","setManualLoading","getBlocks","manualFetch","blocks","fetchedBlocks","b","total","txInfo","setTxInfo","getTxInfo","marginRight","blockHash","spent","gasAmount","gasPrice","TransactionsSection","Boolean","hostname","match","darkTheme","lightTheme","AlephClient","url","fetchAPI","this","path","fetch","resp","Promise","resolve","reject","ok","json","resource","page","ScrollToTop","getScrollContainer","scrollTo","networkTypes","React","updateLocale","future","past","m","mm","h","hh","d","dd","M","MM","yy","App","localStorageKey","defaultValue","localStorage","getItem","setValue","setItem","useStateWithLocalStorage","themeName","setThemeName","setClient","setExplorerClient","setNetworkType","snackbarMessage","contentRef","getContentRef","process","REACT_APP_BACKEND_URL","REACT_APP_NETWORK_TYPE","Error","includes","ExplorerClient","baseUrl","createClient","setTimeout","MainContainer","ContentContainer","ContentWrapper","HamburgerButton","userAgent","toLowerCase","indexOf","BackButton","goBack","exact","AddressInfoSection","SnackbarManager","SnackbarManagerContainer","SnackbarPopup","ArrowLeft","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7c771be7.chunk.js","sourcesContent":["/*\nCopyright 2018 - 2022 The Alephium Authors\nThis file is part of the alephium project.\n\nThe library is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThe library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with the library. If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { createGlobalStyle } from 'styled-components'\nimport normalize from 'styled-normalize'\n\nconst GlobalStyle = createGlobalStyle`\n  ${normalize}\n\n  body {\n    background-color: ${({ theme }) => theme.body};\n    transition: background-color 0.2s ease;\n\n    color: ${({ theme }) => theme.textPrimary};\n  }\n\n  a {\n    color: ${({ theme }) => theme.link};\n    cursor: pointer;\n\n    &:hover {\n      color: ${({ theme }) => theme.linkHighlight};;\n    }\n  }\n\n  // Titles\n  h2 {\n    font-weight: 600;\n  }\n\n  // Animations\n  @keyframes spin {\n    from {\n        transform:rotate(0deg);\n    }\n    to {\n        transform:rotate(360deg);\n    }\n  }\n`\n\n// Breakpoints\n\nexport const deviceSizes = {\n  mobile: 800,\n  tablet: 1000,\n  desktop: 1600\n}\n\nexport const deviceBreakPoints = {\n  mobile: `(max-width: ${deviceSizes.mobile}px)`,\n  tablet: `(max-width: ${deviceSizes.tablet}px)`,\n  desktop: `(max-width: ${deviceSizes.desktop}px)`\n}\n\nexport default GlobalStyle\n","/*\nCopyright 2018 - 2022 The Alephium Authors\nThis file is part of the alephium project.\n\nThe library is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThe library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with the library. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { motion } from 'framer-motion'\nimport { Search } from 'lucide-react'\nimport React, { useContext, useRef, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport styled from 'styled-components'\n\nimport { GlobalContext } from '..'\nimport { deviceBreakPoints } from '../style/globalStyles'\nimport { checkAddressValidity, checkHexStringValidity } from '../utils/strings'\n\nconst SearchBar = () => {\n  const [active, setActive] = useState(false)\n  const [search, setSearch] = useState('')\n  const { setSnackbarMessage } = useContext(GlobalContext)\n  const inputRef = useRef<HTMLInputElement>(null)\n\n  const history = useHistory()\n\n  const handleInputClick = () => setActive(true)\n\n  const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearch(e.target.value)\n  }\n\n  const handleSearchClick = () => searching(search)\n\n  const handleSearchKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter') {\n      searching(search)\n    }\n  }\n\n  const handleRemoveFocus = () => {\n    setActive(false)\n  }\n\n  const cleanSearch = () => {\n    setSearch('')\n    setActive(false)\n  }\n\n  const redirect = (to: string) => {\n    handleRemoveFocus()\n    cleanSearch()\n    inputRef.current?.blur()\n    history.push(to)\n  }\n\n  const searching = (str: string) => {\n    const word = str.trim()\n\n    const isHexString = checkHexStringValidity(word)\n\n    //TODO This is a very dummy way do differentiate address and transaction, need improvement\n    if (isHexString) {\n      // Is probably not an address, as an address usually contains at least one non-hex character.\n      if (word.length === 64) {\n        if (word.slice(0, 4) === '0000') {\n          redirect(`/blocks/${word}`)\n        } else {\n          redirect(`/transactions/${word}`)\n        }\n      } else {\n        setSnackbarMessage({ text: 'There seems to be an error in the hash format.', type: 'info' })\n      }\n    } else {\n      if (checkAddressValidity(word)) {\n        redirect(`/addresses/${word}`)\n      } else {\n        setSnackbarMessage({ text: 'There seems to be an error in the address format.', type: 'info' })\n      }\n    }\n  }\n\n  return (\n    <Container>\n      <SearchInput\n        ref={inputRef}\n        onBlur={handleRemoveFocus}\n        onChange={handleSearchChange}\n        value={search}\n        onClick={handleInputClick}\n        onKeyDown={handleSearchKeyDown}\n        placeholder=\"Search for an address or a tx...\"\n      />\n      {active && <Backdrop animate={{ opacity: 1 }} transition={{ duration: 0.15 }} />}\n      <SearchIcon onClick={handleSearchClick} />\n    </Container>\n  )\n}\n\nconst Container = styled.div`\n  flex: 1;\n  position: relative;\n  height: 45px;\n\n  @media ${deviceBreakPoints.mobile} {\n    right: 10px;\n    left: 10px;\n    margin-right: 10px;\n    z-index: 1;\n  }\n`\n\nconst SearchIcon = styled(Search)`\n  color: ${({ theme }) => theme.textPrimary};\n  position: absolute;\n  right: 20px;\n  top: 12px;\n  z-index: 11;\n  height: 21px;\n  cursor: pointer;\n`\n\nconst SearchInput = styled.input`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  border-radius: 30px;\n  padding: 0 20px;\n  color: ${({ theme }) => theme.textPrimary};\n  background: ${({ theme }) => theme.bgSecondary};\n  border: 1px solid ${({ theme }) => theme.borderPrimary};\n  transition: all 0.15s ease-out;\n  z-index: 10;\n\n  &:hover {\n    border: 1px solid ${({ theme }) => theme.borderHighlight};\n  }\n\n  &:focus,\n  &:active {\n    box-shadow: 0 15px 15px rgba(0, 0, 0, 0.15);\n    background: linear-gradient(${({ theme }) => `${theme.bgSecondary}, ${theme.bgSecondary}`}) padding-box,\n      ${({ theme }) => theme.accentGradient};\n    border: 1px solid transparent;\n    z-index: 10;\n  }\n`\n\nconst Backdrop = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  z-index: 9;\n  opacity: 0;\n`\n\nexport default SearchBar\n","/*\nCopyright 2018 - 2022 The Alephium Authors\nThis file is part of the alephium project.\n\nThe library is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThe library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with the library. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nexport const smartHash = (hash: string) => {\n  if (hash.length <= 16) return hash\n  else return hash.substring(0, 8) + '...' + hash.substring(hash.length - 8)\n}\n\nexport const checkAddressValidity = (addressToTest: string) => {\n  return /^[1-9A-HJ-NP-Za-km-z]+$/.test(addressToTest)\n}\n\nexport const checkHexStringValidity = (stringToTest: string) => {\n  return /^[a-fA-F0-9]+$/.test(stringToTest)\n}\n","export default __webpack_public_path__ + \"static/media/address-icon.143269ad.svg\";","export default __webpack_public_path__ + \"static/media/block-icon.a6a8f086.svg\";","export default __webpack_public_path__ + \"static/media/explorer-logo-dark.3d0d2623.svg\";","export default __webpack_public_path__ + \"static/media/explorer-logo-light.7b97902d.svg\";","export default __webpack_public_path__ + \"static/media/transaction-icon.964bc84e.svg\";","/*\nCopyright 2018 - 2022 The Alephium Authors\nThis file is part of the alephium project.\n\nThe library is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThe library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with the library. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { AnimatePresence, motion } from 'framer-motion'\nimport { MoreVertical } from 'lucide-react'\nimport { useState } from 'react'\nimport styled from 'styled-components'\n\ninterface MenuItem {\n  text: string\n  icon?: React.ReactNode\n  onClick: () => void\n}\n\ntype Direction = 'up' | 'down'\n\nconst menuHeight = '47px'\n\nconst Menu = ({\n  label,\n  icon,\n  items,\n  direction,\n  className\n}: {\n  label: string\n  icon?: React.ReactNode\n  items: MenuItem[]\n  direction: Direction\n  className?: string\n}) => {\n  const [visible, setVisible] = useState(false)\n\n  const animationOrigin = direction === 'up' ? '-95%' : `calc(${menuHeight} - 10px)`\n  const animationDestination = direction === 'up' ? '-100%' : menuHeight\n\n  const handleBlur = () => {\n    setVisible(false)\n  }\n\n  return (\n    <MenuContainer\n      onClick={() => setVisible(!visible)}\n      className={className}\n      id=\"menu-container\"\n      onBlur={handleBlur}\n      tabIndex={0}\n    >\n      <MenuCurrentContent>\n        {icon && <IconContainer>{icon}</IconContainer>}\n        <Label>{label}</Label>\n        <MoreVertical size={15} />\n      </MenuCurrentContent>\n      <AnimatePresence>\n        {visible && (\n          <MenuItemsContainer\n            initial={{ y: animationOrigin, opacity: 0 }}\n            animate={{ y: animationDestination, opacity: 1 }}\n            exit={{ y: animationOrigin, opacity: 0 }}\n            transition={{ duration: 0.15 }}\n          >\n            <MenuItemsList\n              style={{ marginBottom: direction === 'up' ? '8px' : 0, marginTop: direction === 'down' ? '8px' : 0 }}\n            >\n              {items.map((item, i) => (\n                <div key={i}>\n                  <MenuItem onClick={item.onClick}>\n                    {item.icon && <ItemIcon>{item.icon}</ItemIcon>}\n                    <ItemText>{item.text}</ItemText>\n                  </MenuItem>\n                  {i !== items.length - 1 && <Divider />}\n                </div>\n              ))}\n            </MenuItemsList>\n          </MenuItemsContainer>\n        )}\n      </AnimatePresence>\n    </MenuContainer>\n  )\n}\n\nconst MenuContainer = styled.div`\n  position: relative;\n  height: ${menuHeight};\n  display: flex;\n`\n\nconst MenuCurrentContent = styled.div`\n  flex: 1;\n  display: flex;\n  align-items: center;\n  padding: 0 20px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.borderSecondary};\n  }\n`\n\nconst Label = styled.span`\n  color: ${({ theme }) => theme.textPrimary};\n  flex: 1;\n`\n\nconst IconContainer = styled.div`\n  margin-right: 20px;\n`\n\nconst MenuItemsContainer = styled(motion.div)`\n  position: absolute;\n  width: calc(100% - 10px);\n  margin-left: 5px;\n  z-index: 10000;\n  overflow: hidden;\n  border-radius: 7px;\n  box-shadow: 0 10px 10px rgba(0, 0, 0, 0.2);\n`\n\nconst MenuItemsList = styled.div`\n  overflow: hidden;\n  border-radius: 7px;\n  background-color: ${({ theme }) => theme.bgPrimary};\n  border: 1px solid ${({ theme }) => theme.borderPrimary};\n`\n\nconst ItemIcon = styled.div`\n  width: 23px;\n  height: 23px;\n\n  margin-right: 20px;\n  opacity: 0.8;\n`\n\nconst MenuItem = styled.div`\n  height: 47px;\n  display: flex;\n  align-items: center;\n  padding: 0 20px;\n  cursor: pointer;\n  color: ${({ theme }) => theme.textPrimary};\n\n  &:hover {\n    background-color: ${({ theme }) => theme.bgHover};\n    color: ${({ theme }) => theme.link};\n\n    ${ItemIcon} {\n      opacity: 1;\n    }\n  }\n`\n\nconst ItemText = styled.div``\n\nconst Divider = styled.div`\n  height: 1px;\n  background-color: ${({ theme }) => theme.borderSecondary};\n`\n\nexport default Menu\n","/*\nCopyright 2018 - 2022 The Alephium Authors\nThis file is part of the alephium project.\n\nThe library is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThe library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with the library. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport styled from 'styled-components'\n\nimport { NetworkType } from '..'\n\ninterface NetworkLogoProps {\n  network: NetworkType\n  size?: number\n}\n\nconst NetworkLogo = ({ network, size = 25 }: NetworkLogoProps) => {\n  return (\n    <LogoContainer network={network} size={size}>\n      {network === 'mainnet' ? 'M' : 'T'}\n    </LogoContainer>\n  )\n}\n\nconst LogoContainer = styled.div<NetworkLogoProps>`\n  height: ${({ size }) => size}px;\n  width: ${({ size }) => size}px;\n  border-radius: 20%;\n  background: ${({ network, theme }) => (network === 'mainnet' ? theme.accentGradient : theme.bgSecondary)};\n  color: ${({ network, theme }) => (network === 'mainnet' ? 'rgba(255, 255, 255, 0.8)' : theme.textPrimary)};\n  border: 1px solid ${({ theme }) => theme.borderPrimary};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  line-height: normal;\n`\n\nexport default NetworkLogo\n","/*\nCopyright 2018 - 2022 The Alephium Authors\nThis file is part of the alephium project.\n\nThe library is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThe library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with the library. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { motion } from 'framer-motion'\nimport { Moon, Sun } from 'lucide-react'\nimport React, { useContext } from 'react'\nimport styled from 'styled-components'\n\nimport { GlobalContext } from '..'\nimport { ThemeType } from '../style/themes'\n\ninterface ThemeSwitcherProps {\n  className?: string\n}\n\nconst getButtonColor = (theme: ThemeType, buttonTheme: string) => {\n  return theme === buttonTheme ? (theme === 'dark' ? '#F6C76A' : 'white') : '#646775'\n}\n\nconst toggleWidth = 80\nconst toggleHeight = toggleWidth / 2\nconst toggleIndicatorSize = toggleWidth / 2\n\nconst toggleVariants = {\n  light: { left: 0, backgroundColor: '#F6C76A' },\n  dark: { left: toggleWidth - toggleIndicatorSize, backgroundColor: '#3A0595' }\n}\n\nconst ThemeSwitcher: React.FC<ThemeSwitcherProps> = ({ className }) => {\n  const { currentTheme, switchTheme } = useContext(GlobalContext)\n\n  return (\n    <StyledThemeSwitcher onClick={() => switchTheme(currentTheme === 'light' ? 'dark' : 'light')} className={className}>\n      <ToggleContent>\n        <ToggleIcon>\n          <Sun onClick={() => switchTheme('light')} color={getButtonColor(currentTheme, 'light')} size={18} />\n        </ToggleIcon>\n        <ToggleIcon>\n          <Moon onClick={() => switchTheme('dark')} color={getButtonColor(currentTheme, 'dark')} size={18} />\n        </ToggleIcon>\n      </ToggleContent>\n      <ToggleFloatingIndicator\n        variants={toggleVariants}\n        animate={currentTheme}\n        transition={{ duration: 0.5, type: 'spring' }}\n      />\n    </StyledThemeSwitcher>\n  )\n}\n\nexport const StyledThemeSwitcher = styled.div`\n  position: relative;\n  width: ${toggleWidth}px;\n  height: ${toggleHeight}px;\n  border: 1px solid ${({ theme }) => theme.borderPrimary};\n  border-radius: 60px;\n  background-color: ${({ theme }) => theme.bgHighlight};\n  cursor: pointer;\n  box-sizing: content-box;\n\n  svg {\n    cursor: pointer;\n  }\n`\n\nconst ToggleContent = styled.div`\n  position: absolute;\n  display: flex;\n  height: 100%;\n  width: 100%;\n  margin: 0;\n  z-index: 1;\n`\n\nconst ToggleIcon = styled.div`\n  display: flex;\n  flex: 1;\n\n  * {\n    margin: auto;\n  }\n`\n\nconst ToggleFloatingIndicator = styled(motion.div)`\n  position: absolute;\n  width: ${toggleIndicatorSize}px;\n  height: ${toggleIndicatorSize}px;\n  background-color: ${({ theme }) => theme.textPrimary};\n  border-radius: 60px;\n  z-index: 0;\n`\n\nexport default ThemeSwitcher\n","/*\nCopyright 2018 - 2022 The Alephium Authors\nThis file is part of the alephium project.\n\nThe library is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThe library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with the library. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { AnimatePresence, motion } from 'framer-motion'\nimport { X } from 'lucide-react'\nimport { useCallback, useContext, useEffect, useRef } from 'react'\nimport { Link, NavLink } from 'react-router-dom'\nimport styled, { useTheme } from 'styled-components'\n\nimport { GlobalContext } from '..'\nimport { useWindowSize } from '../hooks/useWindowSize'\nimport addressIcon from '../images/address-icon.svg'\nimport blockIcon from '../images/block-icon.svg'\nimport logoDark from '../images/explorer-logo-dark.svg'\nimport logoLight from '../images/explorer-logo-light.svg'\nimport transactionIcon from '../images/transaction-icon.svg'\nimport { deviceBreakPoints, deviceSizes } from '../style/globalStyles'\nimport Menu from './Menu'\nimport NetworkLogo from './NetworkLogo'\nimport ThemeSwitcher, { StyledThemeSwitcher } from './ThemeSwitcher'\n\nexport type SidebarState = 'open' | 'close'\n\nconst Sidebar = ({ sidebarState }: { sidebarState: SidebarState }) => {\n  const theme = useTheme()\n  const windowWidth = useWindowSize().width\n  const lastWindowWidth = useRef(windowWidth)\n  const { setSidebarState, networkType } = useContext(GlobalContext)\n\n  const isMainnet = networkType === 'mainnet'\n\n  const switchToNetwork = (network: string) => {\n    if (networkType !== network) {\n      window.location.assign(isMainnet ? 'https://testnet.alephium.org' : 'https://explorer.alephium.org')\n    }\n  }\n\n  const closeSidebar = useCallback(() => {\n    setSidebarState('close')\n  }, [setSidebarState])\n\n  useEffect(() => {\n    if (windowWidth) {\n      if (\n        lastWindowWidth.current &&\n        lastWindowWidth.current >= deviceSizes.tablet &&\n        windowWidth < deviceSizes.tablet &&\n        open\n      ) {\n        closeSidebar()\n      }\n\n      lastWindowWidth.current = windowWidth\n    }\n  }, [closeSidebar, windowWidth])\n\n  return (\n    <>\n      <SidebarContainer open={sidebarState === 'open'}>\n        <CloseButton onClick={closeSidebar}>{<X />}</CloseButton>\n        <Header>\n          <Link to=\"/\">\n            <Logo alt=\"alephium\" src={theme.name === 'light' ? logoLight : logoDark} />\n          </Link>\n          <NetworkMenu\n            label={isMainnet ? 'Mainnet' : 'Testnet'}\n            icon={isMainnet ? <NetworkLogo network=\"mainnet\" /> : <NetworkLogo network=\"testnet\" />}\n            items={[\n              {\n                text: 'Mainnet',\n                onClick: () => switchToNetwork('mainnet'),\n                icon: <NetworkLogo network=\"mainnet\" />\n              },\n              {\n                text: 'Testnet',\n                onClick: () => switchToNetwork('testnet'),\n                icon: <NetworkLogo network=\"testnet\" />\n              }\n            ]}\n            direction=\"down\"\n          />\n        </Header>\n        <Navigation>\n          <NavigationTitle>MENU</NavigationTitle>\n          <Tabs>\n            <Tab to=\"/blocks\" onClick={closeSidebar}>\n              <TabIcon src={blockIcon} alt=\"blocks\" /> Blocks\n            </Tab>\n            <Tab to=\"/addresses\" onClick={closeSidebar}>\n              <TabIcon src={addressIcon} alt=\"addresses\" /> Addresses\n            </Tab>\n            <Tab to=\"/transactions\" onClick={closeSidebar}>\n              <TabIcon src={transactionIcon} alt=\"transactions\" /> Transactions\n            </Tab>\n          </Tabs>\n        </Navigation>\n        <ThemeSwitcher />\n      </SidebarContainer>\n      <AnimatePresence>\n        {sidebarState === 'open' && (\n          <Backdrop\n            onClick={closeSidebar}\n            animate={{ opacity: 0.4 }}\n            exit={{ opacity: 0 }}\n            initial={{ opacity: 0 }}\n            transition={{ duration: 0.15 }}\n          />\n        )}\n      </AnimatePresence>\n    </>\n  )\n}\n\n/* STYLES */\n\nconst Logo = styled.img`\n  height: 100px;\n  width: 140px;\n  margin-top: 5px;\n  margin-left: 25px;\n\n  @media ${deviceBreakPoints.tablet} {\n    width: 150px;\n  }\n`\n\nconst CloseButton = styled.div`\n  position: absolute;\n  width: 35px;\n  height: 35px;\n  top: 16px;\n  left: 20px;\n  display: none;\n  z-index: 300;\n  padding: 5px;\n  border-radius: 100%;\n\n  @media ${deviceBreakPoints.tablet} {\n    display: block;\n    cursor: pointer;\n  }\n`\n\nconst Backdrop = styled(motion.div)`\n  display: none;\n\n  @media ${deviceBreakPoints.tablet} {\n    display: block;\n    position: fixed;\n    top: 0;\n    right: 0;\n    left: 0;\n    bottom: 0;\n    background-color: black;\n    z-index: 101;\n  }\n`\n\ninterface SidebarContainerProps {\n  open: boolean\n}\n\nconst SidebarContainer = styled.div<SidebarContainerProps>`\n  position: relative;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  max-width: 250px;\n\n  background-color: ${({ theme }) => theme.bgSecondary};\n  border-right: 1px solid ${({ theme }) => theme.borderPrimary};\n\n  ${StyledThemeSwitcher} {\n    display: block;\n    position: absolute;\n    bottom: 25px;\n    left: 25px;\n  }\n\n  @media ${deviceBreakPoints.tablet} {\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    z-index: 200;\n    width: 250px;\n\n    transition: all 0.15s ease-out;\n    transform: ${({ open }) => (!open ? 'translateX(-100%)' : '')};\n  }\n`\n\nconst Header = styled.header`\n  display: flex;\n  flex-direction: column;\n  background-color: ${({ theme }) => theme.bgHighlight};\n\n  @media ${deviceBreakPoints.tablet} {\n    padding-top: 50px;\n  }\n`\n\nconst Tabs = styled.div`\n  margin-top: 12px;\n  display: flex;\n  flex-direction: column;\n`\n\nconst Navigation = styled.nav`\n  margin-top: 25px;\n`\n\nconst NavigationTitle = styled.div`\n  font-size: 11px;\n  font-weight: 600;\n  padding: 0 25px;\n  color: ${({ theme }) => theme.textSecondary};\n`\n\nconst Tab = styled(NavLink)`\n  font-size: 0.9rem;\n  font-weight: 500;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  transition: all 0.15s ease;\n  position: relative;\n  padding: 13px 20px;\n\n  color: ${({ theme }) => theme.textSecondary};\n  &.active {\n    color: ${({ theme }) => theme.textPrimary};\n\n    img {\n      filter: none;\n    }\n  }\n  &:hover {\n    color: ${({ theme }) => theme.textPrimary};\n  }\n`\n\nconst TabIcon = styled.img`\n  height: 20px;\n  width: 20px;\n  margin-right: 15px;\n  filter: grayscale(100%);\n`\n\n// Network switch\n\nconst NetworkMenu = styled(Menu)`\n  border-width: 1px 0;\n  border-style: solid;\n  border-color: ${({ theme }) => theme.borderSecondary};\n`\n\nexport default Sidebar\n","/*\nCopyright 2018 - 2022 The Alephium Authors\nThis file is part of the alephium project.\n\nThe library is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThe library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with the library. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { useEffect, useState } from 'react'\n\nexport function useWindowSize() {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState<{ width: undefined | number; height: undefined | number }>({\n    width: undefined,\n    height: undefined\n  })\n\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      })\n    }\n\n    // Add event listener\n    window.addEventListener('resize', handleResize)\n\n    // Call handler right away so state gets updated with initial window size\n    handleResize()\n\n    // Remove event listener on cleanup\n    return () => window.removeEventListener('resize', handleResize)\n  }, []) // Empty array ensures that effect is only run on mount\n\n  return windowSize\n}\n","/*\nCopyright 2018 - 2022 The Alephium Authors\nThis file is part of the alephium project.\n\nThe library is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThe library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with the library. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport JSBI from 'jsbi'\n\nimport { Transaction } from '../types/api'\n\nconst MONEY_SYMBOL = ['', 'K', 'M', 'B', 'T']\nconst QUINTILLION = 1000000000000000000\n\nexport const truncateToDecimals = (num: number, dec = 2) => {\n  const calcDec = Math.pow(10, dec)\n  return Math.trunc(num * calcDec) / calcDec\n}\n\nconst getNumberOfTrailingZeros = (numberArray: string[]) => {\n  let numberOfZeros = 0\n\n  for (let i = numberArray.length - 1; i >= 0; i--) {\n    if (numberArray[i] === '0') {\n      numberOfZeros++\n    } else {\n      break\n    }\n  }\n\n  return numberOfZeros\n}\n\nexport const removeTrailingZeros = (numString: string) => {\n  const numberArray = numString.split('')\n\n  const numberOfZeros = getNumberOfTrailingZeros(numberArray)\n\n  const numberArrayWithoutTrailingZeros = [...numberArray.slice(0, numberArray.length - numberOfZeros)]\n\n  if (numberArrayWithoutTrailingZeros[numberArrayWithoutTrailingZeros.length - 1] === '.')\n    numberArrayWithoutTrailingZeros.push('00')\n\n  return numberArrayWithoutTrailingZeros.join().replace(/,/g, '')\n}\n\nexport const abbreviateAmount = (baseNum: JSBI, showFullPrecision = false, nbOfDecimalsToShow?: number) => {\n  const minDigits = 3\n\n  if (JSBI.lessThanOrEqual(baseNum, JSBI.BigInt(0))) return '0.00'\n\n  // For abbreviation, we don't need full precision and can work with number\n  const alephNum = Number(baseNum) / QUINTILLION\n\n  // what tier? (determines SI symbol)\n\n  let tier = (Math.log10(alephNum) / 3) | 0\n\n  const numberOfDigitsToDisplay = nbOfDecimalsToShow ? nbOfDecimalsToShow : minDigits\n\n  if (tier < 0 || showFullPrecision) {\n    return removeTrailingZeros(alephNum.toFixed(18)) // Keep full precision for very low numbers (gas etc.)\n  } else if (tier === 0) {\n    // Small number, low precision is ok\n    return removeTrailingZeros(alephNum.toFixed(numberOfDigitsToDisplay).toString())\n  } else if (tier >= MONEY_SYMBOL.length) {\n    tier = MONEY_SYMBOL.length - 1\n  }\n\n  // get suffix and determine scale\n  const suffix = MONEY_SYMBOL[tier]\n  const scale = Math.pow(10, tier * 3)\n\n  // Scale the bigNum\n  // Here we need to be careful of precision issues\n  const scaled = alephNum / scale\n\n  return scaled.toFixed(numberOfDigitsToDisplay) + suffix\n}\n\nexport function calAmountDelta(t: Transaction, id: string) {\n  const inputAmount = t.inputs.reduce<JSBI>((acc, input) => {\n    const inputAmount = JSBI.BigInt(input.amount)\n    return input.address === id ? JSBI.add(acc, inputAmount) : acc\n  }, JSBI.BigInt(0))\n  const outputAmount = t.outputs.reduce<JSBI>((acc, output) => {\n    const outputAmount = JSBI.BigInt(output.amount)\n    return output.address === id ? JSBI.add(acc, outputAmount) : acc\n  }, JSBI.BigInt(0))\n\n  return JSBI.subtract(outputAmount, inputAmount)\n}\n","/*\nCopyright 2018 - 2022 The Alephium Authors\nThis file is part of the alephium project.\n\nThe library is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThe library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with the library. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport JSBI from 'jsbi'\nimport { FC } from 'react'\n\nimport { abbreviateAmount } from '../utils/amounts'\n\ninterface AmountProps {\n  value: JSBI | undefined\n  className?: string\n  showFullPrecision?: boolean\n}\n\nconst Amount: FC<AmountProps> = ({ value, className, showFullPrecision = false }) => {\n  if (value !== undefined) {\n    return <span className={className}>{abbreviateAmount(value, showFullPrecision).toString()} א</span>\n  } else {\n    return <span className={className}>- א</span>\n  }\n}\n\nexport default Amount\n","/*\nCopyright 2018 - 2022 The Alephium Authors\nThis file is part of the alephium project.\n\nThe library is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThe library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with the library. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport JSBI from 'jsbi'\nimport { FC } from 'react'\nimport styled, { DefaultTheme } from 'styled-components'\n\nimport { abbreviateAmount } from '../utils/amounts'\nimport Amount from './Amount'\n\ntype BadgeType = 'plus' | 'minus' | 'neutral' | 'neutralHighlight'\n\ninterface BadgeProps {\n  type: BadgeType\n  content: JSX.Element | string | JSBI | undefined\n  className?: string\n  amount?: boolean\n  prefix?: string\n  floatRight?: boolean\n}\n\nlet Badge: FC<BadgeProps> = ({ content, className, amount, prefix, floatRight = false }) => {\n  return (\n    <div\n      className={className}\n      data-tip={amount && content ? `${abbreviateAmount(JSBI.BigInt(content), true)} א` : null}\n      style={{ float: floatRight ? 'right' : 'left' }}\n    >\n      {prefix && <span>{prefix}</span>}\n      {amount && content ? <Amount value={JSBI.BigInt(content)} /> : content}\n    </div>\n  )\n}\n\nconst getBadgeColor = (badgeType: BadgeType, theme: DefaultTheme) => {\n  let backgroundColor\n  let color\n\n  switch (badgeType) {\n    case 'plus':\n      backgroundColor = 'rgba(93, 203, 126, 0.12)'\n      color = 'rgba(93, 203, 126, 1)'\n      break\n    case 'minus':\n      backgroundColor = 'rgba(243, 113, 93, 0.1)'\n      color = 'rgba(243, 113, 93, 1)'\n      break\n    case 'neutral':\n      backgroundColor = theme.name === 'dark' ? 'rgba(101, 16, 247, 0.28)' : 'rgba(101, 16, 247, 0.6)'\n      color = theme.name === 'dark' ? 'rgba(255, 255, 255, 0.8)' : 'rgba(255, 255, 255, 1)'\n      break\n    case 'neutralHighlight':\n      backgroundColor = 'rgba(101, 16, 247, 1)'\n      color = 'rgba(255, 255, 255, 1)'\n  }\n\n  return { backgroundColor, color }\n}\n\nBadge = styled(Badge)`\n  background-color: ${({ type, theme }) => getBadgeColor(type, theme).backgroundColor};\n  color: ${({ type, theme }) => getBadgeColor(type, theme).color};\n  text-align: center;\n  padding: 5px 10px;\n  border-radius: 3px;\n  font-weight: 600;\n  float: left;\n  white-space: nowrap;\n`\n\nexport default Badge\n","export default __webpack_public_path__ + \"static/media/alephium-not-found.356bba05.svg\";","/*\nCopyright 2018 - 2022 The Alephium Authors\nThis file is part of the alephium project.\n\nThe library is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThe library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with the library. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport styled from 'styled-components'\n\nimport logo from '../images/alephium-not-found.svg'\n\nconst InlineErrorMessage = ({ message, code }: { message?: string; code?: number }) => {\n  let shownMessage = ''\n\n  if (!message) {\n    shownMessage = \"Something's wrong\"\n  } else {\n    shownMessage = message\n  }\n\n  return (\n    <ErrorWrapper>\n      <Container>\n        <ErrorLogo />\n        <ErrorMessageContainer>\n          <ErrorCode>{code}</ErrorCode>\n          <ErrorMessage>{shownMessage}</ErrorMessage>\n        </ErrorMessageContainer>\n      </Container>\n    </ErrorWrapper>\n  )\n}\n\nconst ErrorWrapper = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 100px;\n`\n\nconst Container = styled.div`\n  background-color: ${({ theme }) => theme.bgSecondary};\n  border-radius: 14px;\n  padding: 35px 25px;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`\n\nconst ErrorLogo = styled.div`\n  background-image: url(${logo});\n  background-repeat: no-repeat;\n  background-size: contain;\n  background-position: center;\n  min-height: 150px;\n  max-height: 300px;\n  height: 25%;\n  width: 100%;\n  margin-bottom: 25px;\n`\n\nconst ErrorMessageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 0 25px;\n  text-align: center;\n`\n\nconst ErrorCode = styled.span`\n  font-size: 1.5rem;\n  font-weight: 600;\n  margin-bottom: 20px;\n`\n\nconst ErrorMessage = styled.span`\n  max-width: 500px;\n  width: 100%;\n  color: ${({ theme }) => theme.textSecondary};\n  overflow: hidden;\n  text-overflow: ellipsis;\n`\n\nexport default InlineErrorMessage\n","/*\nCopyright 2018 - 2022 The Alephium Authors\nThis file is part of the alephium project.\n\nThe library is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThe library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with the library. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport JSBI from 'jsbi'\nimport { ExternalLink } from 'lucide-react'\nimport React, { FC } from 'react'\nimport { Link, LinkProps } from 'react-router-dom'\nimport styled from 'styled-components'\n\nimport { smartHash } from '../utils/strings'\nimport Amount from './Amount'\n\ninterface TightLinkProps extends LinkProps {\n  maxWidth: string\n  text: string\n}\n\nexport const TightLinkStrict: React.FC<TightLinkProps> = ({ maxWidth, text, ...props }) => {\n  return (\n    <div style={{ maxWidth: maxWidth, display: 'flex', overflow: 'hidden' }}>\n      <StyledLink {...props} data-tip={text}>\n        {smartHash(text)}\n      </StyledLink>\n    </div>\n  )\n}\n\nexport const TightLink: React.FC<TightLinkProps> = ({ maxWidth, text, ...props }) => {\n  return (\n    <div style={{ maxWidth: maxWidth, display: 'flex', overflow: 'hidden' }}>\n      <StyledLink\n        {...props}\n        data-tip={text}\n        onClick={(e) => {\n          e.stopPropagation()\n        }}\n      >\n        {text}\n      </StyledLink>\n    </div>\n  )\n}\n\ninterface AddressLinkProps {\n  maxWidth?: string\n  address: string\n  txHashRef?: string\n  amount?: JSBI\n}\n\nexport const AddressLink: FC<AddressLinkProps> = ({ maxWidth = 'auto', address, txHashRef, amount }) => {\n  return (\n    <AddressWrapper>\n      <TightLink to={`/addresses/${address}`} maxWidth={maxWidth} text={address} />\n      {amount !== undefined && (\n        <OutputValue>\n          (<Amount value={amount} />)\n        </OutputValue>\n      )}\n      {txHashRef && (\n        <TxLink to={`/transactions/${txHashRef}`} data-tip={txHashRef}>\n          <ExternalLink size={12} />\n        </TxLink>\n      )}\n    </AddressWrapper>\n  )\n}\n\nconst OutputValue = styled.span`\n  color: ${({ theme }) => theme.textSecondary};\n  margin-left: 8px;\n`\n\nconst TxLink = styled(Link)`\n  margin-left: 8px;\n`\nconst StyledLink = styled(Link)`\n  white-space: nowrap;\n  font-family: 'Roboto Mono';\n  font-size: 13.3px;\n  font-weight: 500;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`\n\nconst AddressWrapper = styled.div`\n  padding: 3px 0;\n  display: flex;\n  width: 100%;\n`\n","/*\nCopyright 2018 - 2022 The Alephium Authors\nThis file is part of the alephium project.\n\nThe library is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThe library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with the library. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { Loader } from 'lucide-react'\nimport { CSSProperties, FC } from 'react'\nimport styled from 'styled-components'\n\ninterface LoadingSpinnerProps {\n  size?: number\n  style?: CSSProperties\n}\n\nconst LoadingSpinner: FC<LoadingSpinnerProps> = ({ size, style }) => <Spinner size={size} style={style} />\n\nconst Spinner = styled(Loader)`\n  animation: spin 1s infinite;\n`\n\nexport default LoadingSpinner\n","/*\nCopyright 2018 - 2022 The Alephium Authors\nThis file is part of the alephium project.\n\nThe library is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThe library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with the library. If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n// https://github.com/microsoft/TypeScript/issues/24929\n\nimport { useLocation } from 'react-router-dom'\n\nconst useQueryParams = <T extends string[] | string>(\n  paramNames: T\n): T extends string ? string | null : Record<string, string | null> => {\n  const search = useLocation().search\n\n  const params: Record<string, string | null> = {}\n\n  if (typeof paramNames === 'string') {\n    return new URLSearchParams(search).get(paramNames) as any\n  } else {\n    paramNames.forEach((p) => {\n      params[p] = new URLSearchParams(search).get(p)\n    })\n    return params as any\n  }\n}\n\nexport default useQueryParams\n","/*\nCopyright 2018 - 2022 The Alephium Authors\nThis file is part of the alephium project.\n\nThe library is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThe library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with the library. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport React, { FC } from 'react'\nimport styled from 'styled-components'\n\nconst TextButton: FC<React.ButtonHTMLAttributes<HTMLButtonElement>> = ({ children, ...props }) => (\n  <StyledTextButton {...props}>{children}</StyledTextButton>\n)\n\nconst StyledTextButton = styled.button`\n  background: transparent;\n  font-size: inherit;\n  color: ${({ theme, disabled }) => {\n    if (disabled) return theme.textSecondary\n    else return theme.link\n  }};\n\n  display: flex;\n  align-items: center;\n  padding: 0;\n  border: 0;\n  cursor: ${({ disabled }) => (disabled ? 'default' : 'pointer')};\n\n  &:hover {\n    color: ${({ theme, disabled }) => {\n      if (disabled) return\n      return theme.linkHighlight\n    }};\n  }\n`\n\nexport default TextButton\n","/*\nCopyright 2018 - 2022 The Alephium Authors\nThis file is part of the alephium project.\n\nThe library is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThe library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with the library. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { ChevronLeft, ChevronRight } from 'lucide-react'\nimport { useCallback, useEffect, useMemo } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport styled from 'styled-components'\n\nimport useQueryParams from '../hooks/useQueryParams'\nimport TextButton from './Buttons/TextButton'\n\nconst PageSwitch = ({\n  elementsPerPage = 20,\n  totalNumberOfElements,\n  numberOfElementsLoaded\n}: {\n  elementsPerPage?: number\n  totalNumberOfElements?: number\n  numberOfElementsLoaded?: number\n}) => {\n  const currentPage = parseInt(useQueryParams('p') || '1')\n  const history = useHistory()\n  const location = history.location\n\n  const locationSearch = useMemo(() => new URLSearchParams(location.search), [location.search])\n\n  const handlePageSwitch = (direction: 'previous' | 'next') => {\n    setPageNumber(direction === 'previous' ? currentPage - 1 : currentPage + 1)\n  }\n\n  const setPageNumber = useCallback(\n    (pageNumber: number) => {\n      locationSearch.set('p', pageNumber.toString())\n      history.push({ search: locationSearch.toString() })\n    },\n    [history, locationSearch]\n  )\n\n  const totalNumberOfPages = totalNumberOfElements && Math.ceil(totalNumberOfElements / elementsPerPage)\n\n  // Redirect if page number is incorrect\n  useEffect(() => {\n    if (currentPage < 1) {\n      setPageNumber(1)\n    } else if (totalNumberOfPages && currentPage > totalNumberOfPages) {\n      setPageNumber(totalNumberOfPages)\n    } else if (isNaN(currentPage)) {\n      setPageNumber(1)\n    }\n  }, [currentPage, setPageNumber, totalNumberOfPages])\n\n  if (totalNumberOfElements === 0) return null\n\n  return (\n    <SwitchContainer>\n      <TextButton disabled={currentPage === 1} onClick={() => handlePageSwitch('previous')}>\n        <ChevronLeft />\n        <span>Previous</span>\n      </TextButton>\n      <PageNumbers>\n        {currentPage}\n        {totalNumberOfPages && <TotalNumberOfPages>{` / ${totalNumberOfPages}`}</TotalNumberOfPages>}\n      </PageNumbers>\n      <TextButton\n        disabled={\n          totalNumberOfPages\n            ? totalNumberOfPages === currentPage\n            : numberOfElementsLoaded\n            ? numberOfElementsLoaded < 20\n            : false\n        }\n        onClick={() => handlePageSwitch('next')}\n      >\n        <span>Next</span>\n        <ChevronRight />\n      </TextButton>\n    </SwitchContainer>\n  )\n}\n\nconst SwitchContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 35px;\n`\n\nconst PageNumbers = styled.div`\n  padding: 0 15px;\n  text-align: center;\n  font-weight: 600;\n`\n\nconst TotalNumberOfPages = styled.span`\n  color: ${({ theme }) => theme.textSecondary};\n`\n\nexport default PageSwitch\n","/*\nCopyright 2018 - 2022 The Alephium Authors\nThis file is part of the alephium project.\n\nThe library is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThe library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with the library. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { FC } from 'react'\nimport ReactTooltip from 'react-tooltip'\nimport { useTheme } from 'styled-components'\n\ninterface TooltipProps {\n  id?: string\n}\n\nconst Tooltip: FC<TooltipProps> = ({ id }) => {\n  const theme = useTheme()\n\n  return <ReactTooltip backgroundColor={theme.tooltip} id={id} />\n}\n\nexport default Tooltip\n","/*\nCopyright 2018 - 2022 The Alephium Authors\nThis file is part of the alephium project.\n\nThe library is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThe library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with the library. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { createContext, useEffect } from 'react'\nimport { FC } from 'react'\nimport ReactTooltip from 'react-tooltip'\nimport styled from 'styled-components'\n\nimport Tooltip from './Tooltip'\n\nconst rebuildTooltips = () => {\n  ReactTooltip.rebuild()\n}\n\ninterface SectionContextType {\n  rebuildTooltips: () => void\n}\n\nexport const SectionContext = createContext<SectionContextType>({ rebuildTooltips: rebuildTooltips })\n\nconst Section: FC<{ className?: string }> = ({ children, className }) => {\n  useEffect(() => {\n    rebuildTooltips()\n  })\n\n  return (\n    <Container className={className}>\n      <SectionContext.Provider value={{ rebuildTooltips }}>\n        <Tooltip />\n        {children}\n      </SectionContext.Provider>\n    </Container>\n  )\n}\n\nconst Container = styled.section`\n  width: 100%;\n`\n\nexport default Section\n","/*\nCopyright 2018 - 2022 The Alephium Authors\nThis file is part of the alephium project.\n\nThe library is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThe library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with the library. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { deviceBreakPoints } from '../style/globalStyles'\n\ninterface PageTitleProps {\n  title: string\n  surtitle?: string | JSX.Element\n  subtitle?: string | JSX.Element\n}\n\nconst SectionTitle: React.FC<PageTitleProps> = ({ title, surtitle, subtitle }) => (\n  <TitleWrapper>\n    {surtitle && <Surtitle>{surtitle}</Surtitle>}\n    <Title>{title}</Title>\n    {subtitle && <Subtitle>{subtitle}</Subtitle>}\n  </TitleWrapper>\n)\n\nconst TitleWrapper = styled.div`\n  margin-bottom: 25px;\n`\n\nconst Title = styled.h1`\n  font-family: 'Inter';\n  font-weight: bold;\n  font-size: 2.2rem;\n  color: ${({ theme }) => theme.textPrimary};\n  margin: 0 0 5px 0;\n  font-weight: 600;\n\n  @media ${deviceBreakPoints.mobile} {\n    font-size: 2rem;\n    margin-top: 20px;\n  }\n`\n\nconst Surtitle = styled.h2`\n  font-family: 'Inter';\n  font-weight: 500;\n  font-size: 1.6rem;\n  color: ${({ theme }) => theme.textSecondary};\n  margin-bottom: 0;\n  overflow: hidden;\n`\n\nconst Subtitle = styled.h2`\n  font-family: 'Inter';\n  font-weight: 500;\n  font-size: 1.6rem;\n  color: ${({ theme }) => theme.textSecondary};\n  margin: 0;\n`\n\nexport const SecondaryTitle = styled.h2`\n  margin-top: 40px;\n`\n\nexport default SectionTitle\n","/*\nCopyright 2018 - 2022 The Alephium Authors\nThis file is part of the alephium project.\n\nThe library is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThe library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with the library. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { Check, Clipboard } from 'lucide-react'\nimport { useContext, useEffect, useState } from 'react'\nimport ReactTooltip from 'react-tooltip'\nimport styled from 'styled-components'\n\nimport { GlobalContext } from '../..'\n\nconst ClipboardButton = ({ textToCopy }: { textToCopy: string }) => {\n  const [hasBeenCopied, setHasBeenCopied] = useState(false)\n  const { setSnackbarMessage } = useContext(GlobalContext)\n\n  const handleClick = () => {\n    navigator.clipboard\n      .writeText(textToCopy)\n      .catch((e) => {\n        throw e\n      })\n      .then(() => {\n        setHasBeenCopied(true)\n      })\n  }\n\n  useEffect(() => {\n    // Reset icon after copy\n    if (hasBeenCopied) {\n      ReactTooltip.rebuild()\n      setSnackbarMessage({ text: 'Copied to clipboard!', type: 'info' })\n\n      setInterval(() => {\n        setHasBeenCopied(false)\n      }, 3000)\n    }\n  }, [hasBeenCopied, setSnackbarMessage])\n\n  if (!hasBeenCopied) {\n    return <StyledClipboardIcon size={15} data-tip={'Copy to clipboard'} onClick={handleClick} />\n  } else {\n    return <StyledCheckIcon size={15} />\n  }\n}\n\nconst StyledClipboardIcon = styled(Clipboard)`\n  margin-left: 10px;\n  cursor: pointer;\n  color: ${({ theme }) => theme.textSecondary};\n`\n\nconst StyledCheckIcon = styled(Check)`\n  margin-left: 10px;\n  color: ${({ theme }) => theme.textPrimary};\n`\n\nexport default ClipboardButton\n","/*\nCopyright 2018 - 2022 The Alephium Authors\nThis file is part of the alephium project.\n\nThe library is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThe library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with the library. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { QrCode } from 'lucide-react'\nimport QRCode from 'qrcode.react'\nimport ReactTooltip from 'react-tooltip'\nimport styled from 'styled-components'\n\nconst QRCodeButton = ({ textToEncode }: { textToEncode: string }) => {\n  return (\n    <>\n      <StyledClipboardIcon data-tip data-for=\"qr-code-tooltip\" data-event=\"click\" size={15} />\n      <Tooltip id=\"qr-code-tooltip\" backgroundColor=\"black\" globalEventOff=\"click\">\n        <QRCode size={150} value={textToEncode} bgColor=\"black\" fgColor=\"white\" />\n      </Tooltip>\n    </>\n  )\n}\n\nconst StyledClipboardIcon = styled(QrCode)`\n  margin-left: 10px;\n  cursor: pointer;\n  color: ${({ theme }) => theme.textSecondary};\n`\n\nconst Tooltip = styled(ReactTooltip)`\n  opacity: 1 !important;\n`\n\nexport default QRCodeButton\n","/*\nCopyright 2018 - 2022 The Alephium Authors\nThis file is part of the alephium project.\n\nThe library is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThe library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with the library. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { AnimatePresence, motion } from 'framer-motion'\nimport { ChevronDown } from 'lucide-react'\nimport { createContext, FC, useContext, useEffect } from 'react'\nimport styled, { css, DefaultTheme, FlattenInterpolation, ThemeProps } from 'styled-components'\n\nimport { deviceBreakPoints } from '../style/globalStyles'\nimport ClipboardButton from './Buttons/ClipboardButton'\nimport QRCodeButton from './Buttons/QRCodeButton'\nimport { SectionContext } from './Section'\n\ninterface TableProps {\n  main?: boolean\n  hasDetails?: boolean\n  noBorder?: boolean\n  bodyOnly?: boolean\n  scrollable?: boolean\n}\n\nexport const Table: FC<TableProps> = ({ children, ...props }) => (\n  <TableWrapper {...props}>\n    <StyledTable {...props}>{children}</StyledTable>\n  </TableWrapper>\n)\n\ninterface TableHeaderProps {\n  headerTitles: string[]\n  columnWidths?: string[]\n  textAlign?: ('left' | 'right')[]\n  compact?: boolean\n  transparent?: boolean\n}\n\nexport const TableHeader: React.FC<TableHeaderProps> = ({\n  headerTitles,\n  columnWidths,\n  textAlign,\n  compact = false,\n  transparent = false\n}) => (\n  <StyledTableHeader compact={compact} transparent={transparent}>\n    <tr>\n      {headerTitles.map((v, i) => (\n        <th\n          key={i}\n          style={{\n            width: columnWidths ? columnWidths[i] || 'auto' : 'auto',\n            textAlign: textAlign ? textAlign[i] : 'left'\n          }}\n        >\n          {v}\n        </th>\n      ))}\n    </tr>\n  </StyledTableHeader>\n)\n\n// == Row\n\ninterface RowProps {\n  isActive?: boolean\n}\n\nexport const Row = styled.tr<RowProps>`\n  background-color: ${({ theme, isActive }) => (isActive ? theme.bgHighlight : '')};\n  border: none;\n  cursor: ${({ onClick }) => (onClick ? 'pointer' : 'auto')};\n`\n\n// == Details Row\n\ninterface DetailsRowProps {\n  openCondition: boolean\n}\n\nconst OpenConditionContext = createContext(false)\n\nexport const DetailsRow: FC<DetailsRowProps> = ({ children, openCondition }) => {\n  const rebuildTooltips = useContext(SectionContext).rebuildTooltips\n  useEffect(() => rebuildTooltips()) // Need to rebuild after lazy rendering\n\n  return (\n    <OpenConditionContext.Provider value={openCondition}>\n      <tr className=\"details\">{children}</tr>\n    </OpenConditionContext.Provider>\n  )\n}\n\ninterface AnimatedCellProps {\n  className?: string\n  colSpan?: number\n  alignItems?: 'left' | 'right'\n}\n\nexport const AnimatedCell: FC<AnimatedCellProps> = ({ children, className, colSpan, alignItems = 'left' }) => {\n  const condition = useContext(OpenConditionContext)\n\n  return (\n    <td colSpan={colSpan}>\n      <AnimatePresence>\n        {condition && (\n          <motion.div\n            initial={{ height: 0 }}\n            animate={{ height: 'auto' }}\n            exit={{ height: 0 }}\n            transition={{ duration: 0.15 }}\n            className={className}\n          >\n            <AnimatedCellContainer alignItems={alignItems}>{children}</AnimatedCellContainer>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </td>\n  )\n}\n\n// == Details Toggle\n\nconst variants = {\n  closed: { rotate: 0 },\n  open: { rotate: 180 }\n}\n\ninterface DetailToggleProps {\n  isOpen: boolean\n  onClick: () => void\n}\n\nexport const DetailToggle: FC<DetailToggleProps> = ({ isOpen, onClick }) => {\n  return (\n    <td style={{ padding: 0, textAlign: 'center', overflow: 'hidden' }}>\n      <DetailToggleWrapper animate={isOpen ? 'open' : 'closed'} variants={variants} onClick={onClick}>\n        <ChevronDown size={20} />\n      </DetailToggleWrapper>\n    </td>\n  )\n}\n\nconst DetailToggleWrapper = styled(motion.div)`\n  cursor: pointer;\n`\n\n// == Highlighted cell (address, hash...)\n\nexport const HighlightedCell: FC<{ textToCopy?: string; qrCodeContent?: string }> = ({\n  children,\n  textToCopy,\n  qrCodeContent\n}) => {\n  return (\n    <StyledHighlightedCell>\n      <span>{children}</span>\n      {textToCopy && <ClipboardButton textToCopy={textToCopy} />}\n      {qrCodeContent && <QRCodeButton textToEncode={qrCodeContent} />}\n    </StyledHighlightedCell>\n  )\n}\n\n// ===\n// === Styles ====\n// ===\n\nconst TableWrapper = styled.div<TableProps>`\n  border: ${({ noBorder, theme }) => !noBorder && `1px solid ${theme.borderPrimary}`};\n  overflow: hidden;\n  border-radius: 7px;\n`\n\nconst StyledTable = styled.table<TableProps>`\n  width: 100%;\n  text-align: left;\n  border-collapse: collapse;\n  table-layout: fixed;\n  white-space: nowrap;\n\n  @media ${deviceBreakPoints.mobile} {\n    ${({ scrollable, bodyOnly }) => {\n      if (scrollable) {\n        return `\n\t\t\t\t\tdisplay: block;\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\toverflow-x: auto;\n\t\t\t\t`\n      } else if (bodyOnly) {\n        /* Change table structure, stack td vertically */\n        return css`\n          tr {\n            display: flex;\n            flex-direction: column;\n\n            td:first-child {\n              height: 25px !important;\n              font-weight: 600;\n            }\n\n            td:not(:first-child) {\n              height: initial !important;\n              font-weight: 500 !important;\n            }\n          }\n        `\n      }\n    }}\n  }\n\n  td:nth-child(1) {\n    width: ${({ bodyOnly }) => (bodyOnly ? '27%' : 'auto')};\n  }\n\n  tr td {\n    padding: 12px;\n  }\n\n  tr:not(.details) td {\n    height: 45px;\n  }\n\n  svg {\n    vertical-align: bottom;\n  }\n\n  tbody {\n    tr:not(:last-child) {\n      border-bottom: ${({ hasDetails, noBorder, theme }) =>\n        !hasDetails ? (noBorder ? 'none' : `1px solid ${theme.borderPrimary}`) : ''};\n    }\n\n    tr.details {\n      &:not(:last-child) {\n        border-bottom: 1px solid ${({ theme }) => theme.borderPrimary};\n      }\n      box-shadow: inset 0 1px 0 ${({ theme }) => theme.borderSecondary};\n      background-color: ${({ theme }) => theme.bgHighlight};\n\n      td {\n        padding-top: 0;\n        padding-bottom: 0;\n      }\n    }\n  }\n`\n\ninterface StyledTableHeaderProps {\n  compact: boolean\n  transparent: boolean\n}\n\nexport const StyledTableHeader = styled.thead<StyledTableHeaderProps>`\n  color: ${({ theme }) => theme.textSecondary};\n\n  th {\n    padding: 0px 12px 12px 12px;\n    font-weight: 500;\n    ${({ compact, theme }) => {\n      if (!compact) {\n        return `\n\t\t\t\t\tposition: sticky;\n\t\t\t\t\ttop: 0;\n\t\t\t\t\tbox-shadow: inset 0 -1px 0 ${theme.borderPrimary};\n\t\t\t\t\tpadding: 12px;\n\t\t\t\t`\n      }\n    }}\n    background-color: ${({ theme, transparent }) => (transparent ? 'transparent' : `${theme.bgSecondary}`)};\n  }\n\n  tr {\n    height: ${({ compact }) => (compact ? '30px' : '48px')};\n  }\n`\n\nexport interface TDStyle {\n  tdPos: number\n  style: FlattenInterpolation<ThemeProps<DefaultTheme>>\n}\n\nexport interface TableBopyProps {\n  tdStyles?: TDStyle[]\n}\n\nexport const TableBody = styled.tbody<TableBopyProps>`\n  color: ${({ theme }) => theme.textPrimary};\n\n  & > tr {\n    ${(props) =>\n      props.tdStyles\n        ? props.tdStyles.map(\n            (s) =>\n              css`\n                & > td:nth-child(${s.tdPos}) {\n                  ${s.style}\n                }\n              `\n          )\n        : ''}\n\n    &.details div {\n      overflow: hidden;\n    }\n\n    &:hover {\n      background-color: ${({ theme }) => theme.bgHover};\n    }\n  }\n`\n\nconst StyledHighlightedCell = styled.td`\n  font-weight: 600 !important;\n  color: ${({ theme }) => theme.textAccent};\n  word-wrap: break-word;\n  white-space: pre-wrap;\n  overflow: hidden;\n`\n\nexport const AnimatedCellContainer = styled(motion.div)<{ alignItems: 'left' | 'right' }>`\n  padding: 10px 0;\n  text-align: left;\n  overflow: hidden;\n\n  display: flex;\n  flex-direction: column;\n  align-items: ${({ alignItems }) => (alignItems === 'left' ? 'flex-start' : 'flex-end')};\n\n  > * {\n    padding: 3px 0 !important;\n  }\n`\n","/*\nCopyright 2018 - 2022 The Alephium Authors\nThis file is part of the alephium project.\n\nThe library is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThe library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with the library. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { useMemo } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport useQueryParams from './useQueryParams'\n\nconst usePageNumber = () => {\n  const pageParam = useQueryParams('p')\n  const pageNumber = pageParam && parseInt(pageParam)\n  const history = useHistory()\n  const location = history.location\n\n  const locationSearch = useMemo(() => new URLSearchParams(location.search), [location.search])\n\n  if (pageNumber === 1) {\n    locationSearch.delete('p')\n    history.replace({ search: locationSearch.toString() })\n  }\n\n  return pageNumber || 1\n}\n\nexport default usePageNumber\n","/*\nCopyright 2018 - 2022 The Alephium Authors\nThis file is part of the alephium project.\n\nThe library is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThe library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with the library. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { useCallback, useEffect, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\n\nconst useTableDetailsState = (defaultState: boolean) => {\n  const [detailOpen, setDetailOpen] = useState(defaultState)\n\n  const { pathname } = useLocation()\n\n  useEffect(() => {\n    // Close details when location is changing\n    // TODO: Store state in URL? Careful, can become complex when we'll have paging\n    setDetailOpen(false)\n  }, [pathname])\n\n  const toggleDetail = useCallback(() => setDetailOpen(!detailOpen), [detailOpen])\n\n  return { detailOpen, setDetailOpen, toggleDetail }\n}\n\nexport default useTableDetailsState\n","/*\nCopyright 2018 - 2022 The Alephium Authors\nThis file is part of the alephium project.\n\nThe library is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThe library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with the library. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { tryGetString } from './types'\n\ninterface APIError {\n  error: { detail: string }\n}\n\nexport const isHTTPError = (e: unknown): e is APIError => {\n  return (e as APIError).error !== undefined\n}\n\nexport const getHumanReadableError = (e: unknown, defaultErrorMessage: string) => {\n  const stringifiedError = tryGetString(e)\n  return isHTTPError(e) ? e.error.detail : stringifiedError || defaultErrorMessage\n}\n","/*\nCopyright 2018 - 2022 The Alephium Authors\nThis file is part of the alephium project.\n\nThe library is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThe library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with the library. If not, see <http://www.gnu.org/licenses/>.\n*/\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const tryGetString = (obj: any): string | null => {\n  return typeof obj.toString === 'function' ? obj.toString() : null\n}\n","/*\nCopyright 2018 - 2022 The Alephium Authors\nThis file is part of the alephium project.\n\nThe library is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThe library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with the library. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { AddressInfo } from 'alephium-js/dist/api/api-explorer'\nimport dayjs from 'dayjs'\nimport relativeTime from 'dayjs/plugin/relativeTime'\nimport JSBI from 'jsbi'\nimport _ from 'lodash'\nimport { ArrowRight } from 'lucide-react'\nimport { FC, useContext, useEffect, useRef, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport styled, { css } from 'styled-components'\n\nimport { GlobalContext } from '..'\nimport Badge from '../components/Badge'\nimport InlineErrorMessage from '../components/InlineErrorMessage'\nimport { AddressLink, TightLink } from '../components/Links'\nimport LoadingSpinner from '../components/LoadingSpinner'\nimport PageSwitch from '../components/PageSwitch'\nimport Section from '../components/Section'\nimport SectionTitle, { SecondaryTitle } from '../components/SectionTitle'\nimport {\n  AnimatedCell,\n  DetailsRow,\n  DetailToggle,\n  HighlightedCell,\n  Row,\n  Table,\n  TableBody,\n  TableHeader,\n  TDStyle\n} from '../components/Table'\nimport usePageNumber from '../hooks/usePageNumber'\nimport useTableDetailsState from '../hooks/useTableDetailsState'\nimport { Transaction } from '../types/api'\nimport { calAmountDelta } from '../utils/amounts'\nimport { getHumanReadableError } from '../utils/api'\nimport { APIResp } from '../utils/client'\n\ndayjs.extend(relativeTime)\n\ninterface ParamTypes {\n  id: string\n}\n\nconst TransactionInfoSection = () => {\n  const { id } = useParams<ParamTypes>()\n  const client = useContext(GlobalContext).client\n  const explorerClient = useContext(GlobalContext).explorerClient\n  const [addressInfo, setAddressInfo] = useState<AddressInfo>()\n  const [addressInfoError, setAddressInfoError] = useState('')\n  const [txList, setTxList] = useState<APIResp<Transaction[]>>()\n\n  const [infoLoading, setInfoLoading] = useState(true)\n  const [txLoading, setTxLoading] = useState(true)\n  const previousId = useRef(id)\n\n  // Default page\n  const pageNumber = usePageNumber()\n\n  // Address info\n  useEffect(() => {\n    const fetchAddressInfo = async () => {\n      if (!explorerClient) return\n\n      previousId.current = id\n\n      setInfoLoading(true)\n\n      try {\n        const response = await explorerClient.getAddressDetails(id)\n        console.log(response.data)\n        if (!response.data) return\n\n        setAddressInfo(response.data)\n      } catch (error) {\n        setInfoLoading(false)\n        console.error(error)\n        setAddressInfoError(getHumanReadableError(error, 'Error while fetching address info'))\n      }\n      setInfoLoading(false)\n    }\n    fetchAddressInfo()\n  }, [explorerClient, id])\n\n  // Address transactions\n  useEffect(() => {\n    if (!client) return\n\n    setTxLoading(true)\n\n    client\n      .addressTransactions(id, pageNumber)\n      .catch((e) => {\n        console.log(e)\n        setTxLoading(false)\n      })\n      .then((r) => {\n        if (!r) return\n        setTxList(r)\n        setTxLoading(false)\n      })\n  }, [client, id, pageNumber])\n\n  return (\n    <Section>\n      <SectionTitle title=\"Address\" />\n      {!infoLoading && previousId.current === id ? (\n        <>\n          {addressInfo ? (\n            <>\n              <Table bodyOnly>\n                <TableBody tdStyles={AddressTableBodyCustomStyles}>\n                  <tr>\n                    <td>Address</td>\n                    <HighlightedCell textToCopy={id} qrCodeContent={id}>\n                      {id}\n                    </HighlightedCell>\n                  </tr>\n                  <tr>\n                    <td>Number of Transactions</td>\n                    <td>{addressInfo.txNumber}</td>\n                  </tr>\n                  <tr>\n                    <td>Total Balance</td>\n                    <td>\n                      <Badge type={'neutralHighlight'} content={addressInfo.balance} amount />\n                    </td>\n                  </tr>\n                  {addressInfo.lockedBalance && parseInt(addressInfo.lockedBalance) > 0 && (\n                    <tr>\n                      <td>Locked Balance</td>\n                      <td>\n                        <Badge type={'neutral'} content={addressInfo.lockedBalance} amount />\n                      </td>\n                    </tr>\n                  )}\n                </TableBody>\n              </Table>\n\n              <SecondaryTitle>History</SecondaryTitle>\n              {!txLoading && txList && txList.data && txList.status === 200 ? (\n                <>\n                  {txList.data.length > 0 ? (\n                    <Table hasDetails main scrollable>\n                      <TableHeader\n                        headerTitles={['Hash', 'Timestamp', '', 'Account(s)', 'Amount', '']}\n                        columnWidths={['15%', '100px', '80px', '25%', '120px', '30px']}\n                        textAlign={['left', 'left', 'left', 'left', 'right', 'left']}\n                      />\n                      <TableBody>\n                        {txList.data\n                          .sort((t1, t2) => (t2.timestamp && t1.timestamp ? t2.timestamp - t1.timestamp : 1))\n                          .map((t, i) => (\n                            <AddressTransactionRow transaction={t} addressId={id} key={i} />\n                          ))}\n                      </TableBody>\n                    </Table>\n                  ) : (\n                    <NoTxMessage>No transactions yet</NoTxMessage>\n                  )}\n                </>\n              ) : (\n                <LoadingSpinner />\n              )}\n            </>\n          ) : (\n            <InlineErrorMessage message={addressInfoError} />\n          )}\n          {txList && txList.data && <PageSwitch totalNumberOfElements={addressInfo?.txNumber} />}\n        </>\n      ) : (\n        <LoadingSpinner />\n      )}\n    </Section>\n  )\n}\n\ninterface AddressTransactionRowProps {\n  transaction: Transaction\n  addressId: string\n}\n\nconst AddressTransactionRow: FC<AddressTransactionRowProps> = ({ transaction, addressId }) => {\n  const t = transaction\n  const { detailOpen, toggleDetail } = useTableDetailsState(false)\n\n  const amountDelta = calAmountDelta(t, addressId)\n  const isOut = JSBI.lessThan(amountDelta, JSBI.BigInt(0))\n\n  const renderOutputAccounts = () => {\n    // Check for auto-sent tx\n    if (t.outputs.every((o) => o.address === addressId)) {\n      return <AddressLink key={addressId} address={addressId} maxWidth=\"250px\" />\n    } else {\n      return _(t.outputs.filter((o) => o.address !== addressId))\n        .map((v) => v.address)\n        .uniq()\n        .value()\n        .map((v, i) => <AddressLink key={i} address={v} maxWidth=\"250px\" />)\n    }\n  }\n\n  const renderInputAccounts = () => {\n    const inputAccounts = _(t.inputs.filter((o) => o.address !== addressId))\n      .map((v) => v.address)\n      .uniq()\n      .value()\n      .map((v, i) => <AddressLink key={i} address={v} maxWidth=\"250px\" />)\n\n    if (inputAccounts.length > 0) {\n      return inputAccounts\n    } else {\n      return <BlockRewardLabel>Block rewards</BlockRewardLabel>\n    }\n  }\n\n  return (\n    <>\n      <Row key={t.hash} isActive={detailOpen} onClick={toggleDetail}>\n        <td>\n          <TightLink to={`/transactions/${t.hash}`} text={t.hash} maxWidth=\"120px\" />\n        </td>\n        <td>{(t.timestamp && dayjs().to(t.timestamp)) || '-'}</td>\n        <td>\n          <Badge type={isOut ? 'minus' : 'plus'} content={isOut ? 'To' : 'From'} />\n        </td>\n        <td>{isOut ? renderOutputAccounts() : renderInputAccounts()}</td>\n        <td>\n          <Badge\n            type={isOut ? 'minus' : 'plus'}\n            amount\n            prefix={isOut ? '- ' : '+ '}\n            floatRight\n            content={\n              JSBI.lessThan(amountDelta, JSBI.BigInt(0))\n                ? JSBI.multiply(amountDelta, JSBI.BigInt(-1)).toString()\n                : amountDelta.toString()\n            }\n          />\n        </td>\n        <DetailToggle isOpen={detailOpen} onClick={toggleDetail} />\n      </Row>\n      <DetailsRow openCondition={detailOpen}>\n        <td />\n        <td />\n        <AnimatedCell colSpan={4}>\n          <Table noBorder>\n            <TableHeader headerTitles={['Inputs', '', 'Outputs']} columnWidths={['', '50px', '']} compact transparent />\n            <TableBody>\n              <Row>\n                <td>\n                  {t.inputs.length > 0 ? (\n                    t.inputs.map((input, i) => (\n                      <AddressLink\n                        key={i}\n                        address={input.address}\n                        txHashRef={input.txHashRef}\n                        amount={JSBI.BigInt(input.amount)}\n                        maxWidth=\"180px\"\n                      />\n                    ))\n                  ) : (\n                    <BlockRewardLabel>Block rewards</BlockRewardLabel>\n                  )}\n                </td>\n                <td style={{ textAlign: 'center' }}>\n                  <ArrowRight size={12} />\n                </td>\n                <td>\n                  {t.outputs.map((output, i) => (\n                    <AddressLink\n                      key={i}\n                      address={output.address}\n                      amount={JSBI.BigInt(output.amount)}\n                      maxWidth=\"180px\"\n                    />\n                  ))}\n                </td>\n              </Row>\n            </TableBody>\n          </Table>\n        </AnimatedCell>\n      </DetailsRow>\n    </>\n  )\n}\n\nconst AddressTableBodyCustomStyles: TDStyle[] = [\n  {\n    tdPos: 2,\n    style: css`\n      font-weight: 500;\n    `\n  }\n]\n\nconst BlockRewardLabel = styled.span`\n  color: ${({ theme }) => theme.textSecondary};\n  font-style: italic;\n`\n\nconst NoTxMessage = styled.span`\n  color: ${({ theme }) => theme.textSecondary};\n`\n\nexport default TransactionInfoSection\n","export default __webpack_public_path__ + \"static/media/alephium-logo-gradient-stroke.2922636d.svg\";","/*\nCopyright 2018 - 2022 The Alephium Authors\nThis file is part of the alephium project.\n\nThe library is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThe library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with the library. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport styled from 'styled-components'\n\nimport logo from '../images/alephium-logo-gradient-stroke.svg'\n\nconst ComingSoon = ({ text }: { text: string }) => {\n  return (\n    <ComingSoonWrapper>\n      <ComingSoonLogo />\n      <ComingSoonText>{text}</ComingSoonText>\n    </ComingSoonWrapper>\n  )\n}\n\nconst ComingSoonWrapper = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 100px;\n`\n\nconst ComingSoonLogo = styled.div`\n  background-image: url(${logo});\n  background-repeat: no-repeat;\n  background-size: contain;\n  background-position: center;\n  min-height: 150px;\n  max-height: 300px;\n  height: 25%;\n  width: 100%;\n  margin-bottom: 25px;\n`\n\nconst ComingSoonText = styled.p`\n  text-align: center;\n`\n\nexport default ComingSoon\n","/*\nCopyright 2018 - 2022 The Alephium Authors\nThis file is part of the alephium project.\n\nThe library is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThe library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with the library. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport styled from 'styled-components'\n\nimport ComingSoon from '../components/ComingSoon'\nimport Section from '../components/Section'\n\nconst AddressesSection = () => {\n  return (\n    <StyledSection>\n      <ComingSoon text=\"Coming soon.\" />\n    </StyledSection>\n  )\n}\n\nconst StyledSection = styled(Section)`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n`\n\nexport default AddressesSection\n","/*\nCopyright 2018 - 2022 The Alephium Authors\nThis file is part of the alephium project.\n\nThe library is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThe library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with the library. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport dayjs from 'dayjs'\nimport JSBI from 'jsbi'\nimport { ArrowRight } from 'lucide-react'\nimport { FC, useContext, useEffect, useState } from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\nimport styled, { css } from 'styled-components'\n\nimport { GlobalContext } from '..'\nimport Amount from '../components/Amount'\nimport Badge from '../components/Badge'\nimport InlineErrorMessage from '../components/InlineErrorMessage'\nimport { AddressLink, TightLink } from '../components/Links'\nimport LoadingSpinner from '../components/LoadingSpinner'\nimport PageSwitch from '../components/PageSwitch'\nimport Section from '../components/Section'\nimport SectionTitle, { SecondaryTitle } from '../components/SectionTitle'\nimport {\n  AnimatedCell,\n  DetailsRow,\n  DetailToggle,\n  HighlightedCell,\n  Row,\n  Table,\n  TableBody,\n  TableHeader,\n  TDStyle\n} from '../components/Table'\nimport usePageNumber from '../hooks/usePageNumber'\nimport useTableDetailsState from '../hooks/useTableDetailsState'\nimport transactionIcon from '../images/transaction-icon.svg'\nimport { Block, Transaction } from '../types/api'\nimport { APIResp } from '../utils/client'\n\ninterface ParamTypes {\n  id: string\n}\n\nconst BlockInfoSection = () => {\n  const { id } = useParams<ParamTypes>()\n  const client = useContext(GlobalContext).client\n  const history = useHistory()\n\n  const [blockInfo, setBlockInfo] = useState<APIResp<Block>>()\n  const [txList, setTxList] = useState<APIResp<Transaction[]>>()\n\n  const [infoLoading, setInfoLoading] = useState(true)\n  const [txLoading, setTxLoading] = useState(true)\n\n  const currentPageNumber = usePageNumber()\n\n  // Block info\n  useEffect(() => {\n    if (!client) return\n    setInfoLoading(true)\n\n    client\n      .block(id)\n      .catch((e) => {\n        console.log(e)\n        setInfoLoading(false)\n      })\n      .then((r) => {\n        if (!r) return\n        setBlockInfo(r)\n        setInfoLoading(false)\n      })\n  }, [client, id])\n\n  // Block transactions\n  useEffect(() => {\n    if (!client) return\n\n    setTxLoading(true)\n\n    client\n      .blockTransactions(id, currentPageNumber)\n      .catch((e) => {\n        console.log(e)\n        setTxLoading(false)\n      })\n      .then((r) => {\n        if (!r) return\n        setTxList(r)\n        setTxLoading(false)\n      })\n  }, [client, id, currentPageNumber])\n\n  // If user entered an incorrect url (or did an incorrect search, try to see if a transaction exists with this hash)\n\n  useEffect(() => {\n    if (!client) return\n    ;(async () => {\n      if (blockInfo?.detail) {\n        const res = await client.transaction(id)\n        if (!res?.detail) {\n          // A transaction exists, redirect automatically\n          history.push(`/transactions/${id}`)\n        }\n      }\n    })()\n  }, [blockInfo, id, client, history])\n\n  return (\n    <Section>\n      <SectionTitle title=\"Block\" />\n      {!infoLoading ? (\n        <>\n          {blockInfo && blockInfo.status === 200 && blockInfo.data ? (\n            <>\n              <Table bodyOnly>\n                <TableBody tdStyles={BlockTableBodyCustomStyles}>\n                  <tr>\n                    <td>Hash</td>\n                    <HighlightedCell textToCopy={blockInfo.data.hash}>{blockInfo.data.hash}</HighlightedCell>\n                  </tr>\n                  <tr>\n                    <td>Height</td>\n                    <td>{blockInfo.data.height}</td>\n                  </tr>\n                  <tr>\n                    <td>Chain Index</td>\n                    <td>\n                      {blockInfo.data.chainFrom} → {blockInfo.data.chainTo}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>Nb. of transactions</td>\n                    <td>{blockInfo.data.txNumber}</td>\n                  </tr>\n                  <tr>\n                    <td>Timestamp</td>\n                    <td>{dayjs(blockInfo.data.timestamp).format('MM/DD/YYYY HH:mm:ss')}</td>\n                  </tr>\n                </TableBody>\n              </Table>\n\n              {blockInfo?.data?.mainChain ? (\n                <>\n                  <SecondaryTitle>Transactions</SecondaryTitle>\n                  {!txLoading && txList && txList.data && txList.status === 200 ? (\n                    <>\n                      <Table main hasDetails scrollable>\n                        <TableHeader\n                          headerTitles={['', 'Hash', 'Inputs', '', 'Outputs', 'Total amount', '']}\n                          columnWidths={['35px', '150px', '120px', '50px', '120px', '90px', '30px']}\n                          textAlign={['left', 'left', 'left', 'left', 'left', 'right', 'left']}\n                        />\n                        <TableBody tdStyles={TXTableBodyCustomStyles}>\n                          {txList.data.map((t, i) => (\n                            <TransactionRow transaction={t} key={i} />\n                          ))}\n                        </TableBody>\n                      </Table>\n                    </>\n                  ) : (\n                    <LoadingSpinner />\n                  )}\n                </>\n              ) : (\n                <>\n                  <SecondaryTitle>Orphan block</SecondaryTitle>\n                  <div>It appears that this block is not part of the main chain.</div>\n                </>\n              )}\n            </>\n          ) : (\n            <InlineErrorMessage message={blockInfo?.detail} code={blockInfo?.status} />\n          )}\n          {txList && txList.data && blockInfo?.data?.txNumber !== undefined && blockInfo.data.txNumber > 0 && (\n            <PageSwitch totalNumberOfElements={blockInfo.data.txNumber} />\n          )}\n        </>\n      ) : (\n        <LoadingSpinner />\n      )}\n    </Section>\n  )\n}\n\ninterface TransactionRowProps {\n  transaction: Transaction\n}\n\nconst TransactionRow: FC<TransactionRowProps> = ({ transaction }) => {\n  const t = transaction\n  const { detailOpen, toggleDetail } = useTableDetailsState(false)\n\n  return (\n    <>\n      <Row key={t.hash} isActive={detailOpen} onClick={toggleDetail}>\n        <td>\n          <TransactionIcon />\n        </td>\n        <td>\n          <TightLink to={`/transactions/${t.hash}`} text={t.hash} maxWidth=\"150px\" />\n        </td>\n        <td>\n          {t.inputs.length} address{t.inputs.length > 1 ? 'es' : ''}\n        </td>\n        <td>\n          <ArrowRight size={15} />\n        </td>\n        <td>\n          {t.outputs.length} address{t.outputs.length > 1 ? 'es' : ''}\n        </td>\n        <td>\n          <Badge\n            type={'neutral'}\n            content={t.outputs.reduce<JSBI>((acc, o) => JSBI.add(acc, JSBI.BigInt(o.amount)), JSBI.BigInt(0))}\n            amount\n            floatRight\n          />\n        </td>\n        <DetailToggle isOpen={detailOpen} onClick={toggleDetail} />\n      </Row>\n      <DetailsRow openCondition={detailOpen}>\n        <td />\n        <td />\n        <AnimatedCell>\n          {t.inputs.map((input, i) => (\n            <AddressLink key={i} address={input.address} txHashRef={input.txHashRef} maxWidth=\"180px\" />\n          ))}\n        </AnimatedCell>\n        <td />\n        <AnimatedCell>\n          {t.outputs.map((o, i) => (\n            <AddressLink address={o.address} key={i} maxWidth=\"180px\" />\n          ))}\n        </AnimatedCell>\n        <AnimatedCell alignItems=\"right\">\n          {t.outputs.map((o, i) => (\n            <Amount value={JSBI.BigInt(o.amount)} key={i} />\n          ))}\n        </AnimatedCell>\n        <td />\n      </DetailsRow>\n    </>\n  )\n}\n\n// TODO: make expandlable elements generic (in Table.tsx)\n\nconst TransactionIcon = styled.div`\n  background-image: url(${transactionIcon});\n  background-position: center;\n  background-repeat: no-repeat;\n  height: 20px;\n  width: 20px;\n`\n\nconst BlockTableBodyCustomStyles: TDStyle[] = [\n  {\n    tdPos: 2,\n    style: css`\n      font-weight: 500;\n    `\n  }\n]\n\nconst TXTableBodyCustomStyles: TDStyle[] = [\n  {\n    tdPos: 1,\n    style: css`\n      text-align: center;\n      text-align: -webkit-center;\n    `\n  },\n  {\n    tdPos: 3,\n    style: css`\n      color: ${({ theme }) => theme.textAccent};\n    `\n  },\n  {\n    tdPos: 4,\n    style: css`\n      text-align: center;\n      color: ${({ theme }) => theme.textSecondary};\n    `\n  },\n  {\n    tdPos: 5,\n    style: css`\n      color: ${({ theme }) => theme.textAccent};\n    `\n  }\n]\n\nexport default BlockInfoSection\n","/*\nCopyright 2018 - 2022 The Alephium Authors\nThis file is part of the alephium project.\n\nThe library is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThe library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with the library. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { useEffect, useRef } from 'react'\n\nexport function useInterval(callback: () => void, delay: number, shouldPause = false) {\n  const savedCallback = useRef<() => void>(() => null)\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current()\n    }\n    if (delay !== null && !shouldPause) {\n      const id = setInterval(tick, delay)\n      return () => clearInterval(id)\n    }\n  }, [delay, shouldPause])\n}\n","/*\nCopyright 2018 - 2022 The Alephium Authors\nThis file is part of the alephium project.\n\nThe library is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThe library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with the library. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport dayjs from 'dayjs'\nimport relativeTime from 'dayjs/plugin/relativeTime'\nimport { motion } from 'framer-motion'\nimport { useCallback, useContext, useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport styled, { css } from 'styled-components'\n\nimport { GlobalContext } from '..'\nimport { TightLink } from '../components/Links'\nimport LoadingSpinner from '../components/LoadingSpinner'\nimport PageSwitch from '../components/PageSwitch'\nimport Section from '../components/Section'\nimport SectionTitle from '../components/SectionTitle'\nimport { Table, TableBody, TableHeader, TDStyle } from '../components/Table'\nimport usePageNumber from '../hooks/usePageNumber'\nimport blockIcon from '../images/block-icon.svg'\nimport { BlockList } from '../types/api'\nimport { APIResp } from '../utils/client'\nimport { useInterval } from '../utils/hooks'\n\ndayjs.extend(relativeTime)\n\nconst BlockSection = () => {\n  const [blockList, setBlockList] = useState<BlockList>()\n  const [loading, setLoading] = useState(false)\n  const [manualLoading, setManualLoading] = useState(false)\n  const history = useHistory()\n\n  const client = useContext(GlobalContext).client\n\n  // Default page\n  const currentPageNumber = usePageNumber()\n\n  const getBlocks = useCallback(\n    async (pageNumber: number, manualFetch?: boolean) => {\n      if (!client) return\n\n      console.log('Fetching blocks...')\n\n      manualFetch ? setManualLoading(true) : setLoading(true)\n      const fetchedBlocks: APIResp<BlockList> = await client.blocks(pageNumber)\n\n      // Check if manual fetching has been set in the meantime (overriding polling fetch)\n\n      if (currentPageNumber !== pageNumber) {\n        setLoading(false)\n        return\n      }\n\n      console.log('Number of block fetched: ' + fetchedBlocks.data?.blocks.length)\n      setBlockList(fetchedBlocks.data)\n\n      manualFetch ? setManualLoading(false) : setLoading(false)\n    },\n    [client, currentPageNumber]\n  )\n\n  // Fetching Data when page number changes or page loads initially\n  useEffect(() => {\n    getBlocks(currentPageNumber, true)\n  }, [getBlocks, currentPageNumber])\n\n  // Polling\n  useInterval(() => {\n    if (currentPageNumber === 1 && !loading && !manualLoading) getBlocks(currentPageNumber)\n  }, 10 * 1000)\n\n  return (\n    <Section>\n      <TitleAndLoader>\n        <SectionTitle title=\"Blocks\" />\n        {loading && !manualLoading && (\n          <PollingLoadingSpinner>\n            <LoadingSpinner size={12} /> Loading...\n          </PollingLoadingSpinner>\n        )}\n      </TitleAndLoader>\n      {!manualLoading ? (\n        <Content>\n          <Table main scrollable>\n            <TableHeader\n              headerTitles={['', 'Hash', 'Timestamp', 'Height', 'Txn', 'Chain index']}\n              columnWidths={['50px', '20%', '20%', '20%', '20%', '20%']}\n            />\n            <TableBody tdStyles={TableBodyCustomStyles}>\n              {blockList?.blocks.map((b) => (\n                <BlockRow\n                  key={b.hash}\n                  animate={{ opacity: 1 }}\n                  initial={{ opacity: 0 }}\n                  transition={{ duration: 0.8 }}\n                  onClick={() => {\n                    history.push(`blocks/${b.hash}`)\n                  }}\n                >\n                  <td>\n                    <BlockIcon src={blockIcon} alt=\"Block\" />\n                  </td>\n                  <td>\n                    <TightLink to={`blocks/${b.hash}`} text={b.hash} maxWidth=\"150px\" />\n                  </td>\n                  <td>{dayjs().to(b.timestamp)}</td>\n                  <td>{b.height}</td>\n                  <td>{b.txNumber}</td>\n                  <td>\n                    {b.chainFrom} → {b.chainTo}\n                  </td>\n                </BlockRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Content>\n      ) : (\n        <LoadingSpinner />\n      )}\n      <PageSwitch totalNumberOfElements={blockList?.total} />\n    </Section>\n  )\n}\n\nconst TitleAndLoader = styled.div`\n  position: relative;\n`\n\nconst Content = styled.div`\n  margin-top: 30px;\n`\n\nconst PollingLoadingSpinner = styled.div`\n  position: absolute;\n  bottom: -25px;\n  color: ${({ theme }) => theme.textSecondary};\n`\n\nconst TableBodyCustomStyles: TDStyle[] = [\n  {\n    tdPos: 1,\n    style: css`\n      text-align: center;\n      text-align: -webkit-center;\n    `\n  },\n  {\n    tdPos: 4,\n    style: css`\n      font-family: 'Roboto Mono', monospace;\n      color: ${({ theme }) => theme.textAccent};\n      font-weight: 400;\n    `\n  },\n  {\n    tdPos: 4,\n    style: css`\n      font-family: 'Roboto Mono', monospace;\n      font-weight: 400;\n    `\n  },\n  {\n    tdPos: 5,\n    style: css`\n      font-family: 'Roboto Mono', monospace;\n      font-weight: 400;\n    `\n  },\n  {\n    tdPos: 6,\n    style: css`\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n    `\n  }\n]\n\nconst BlockRow = styled(motion.tr)`\n  cursor: pointer;\n`\n\nconst BlockIcon = styled.img`\n  height: 20px;\n  width: 20px;\n`\n\nexport default BlockSection\n","/*\nCopyright 2018 - 2022 The Alephium Authors\nThis file is part of the alephium project.\n\nThe library is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThe library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with the library. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport dayjs from 'dayjs'\nimport JSBI from 'jsbi'\nimport { Check } from 'lucide-react'\nimport { useCallback, useContext, useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\n\nimport { GlobalContext } from '..'\nimport Amount from '../components/Amount'\nimport Badge from '../components/Badge'\nimport InlineErrorMessage from '../components/InlineErrorMessage'\nimport { AddressLink, TightLink } from '../components/Links'\nimport LoadingSpinner from '../components/LoadingSpinner'\nimport Section from '../components/Section'\nimport SectionTitle from '../components/SectionTitle'\nimport { HighlightedCell, Table, TableBody } from '../components/Table'\nimport { Transaction } from '../types/api'\nimport { APIResp } from '../utils/client'\nimport { useInterval } from '../utils/hooks'\n\ninterface ParamTypes {\n  id: string\n}\n\nconst TransactionInfoSection = () => {\n  const { id } = useParams<ParamTypes>()\n  const client = useContext(GlobalContext).client\n  const [txInfo, setTxInfo] = useState<APIResp<Transaction>>()\n  const [loading, setLoading] = useState(true)\n\n  const getTxInfo = useCallback(async () => {\n    if (!client) return\n    setLoading(true)\n\n    client\n      .transaction(id)\n      .catch((e) => {\n        console.log(e)\n        setLoading(false)\n      })\n      .then((r) => {\n        if (!r) return\n\n        setTxInfo(r)\n        setLoading(false)\n      })\n  }, [client, id])\n\n  // Initial fetch\n  useEffect(() => {\n    getTxInfo()\n  }, [getTxInfo])\n\n  // Polling when TX is unconfirmed\n  useInterval(() => {\n    if (txInfo && txInfo.data && txInfo.data.type === 'unconfirmed') getTxInfo()\n  }, 15 * 1000)\n\n  return (\n    <Section>\n      <SectionTitle title=\"Transaction\" />\n      {!loading ? (\n        <>\n          {txInfo && txInfo.status === 200 && txInfo.data ? (\n            <Table bodyOnly>\n              <TableBody>\n                <tr>\n                  <td>Hash</td>\n                  <HighlightedCell textToCopy={txInfo.data.hash}>{txInfo.data.hash}</HighlightedCell>\n                </tr>\n                <tr>\n                  <td>Status</td>\n                  {txInfo.data.type === 'confirmed' ? (\n                    <td>\n                      <Badge\n                        type=\"plus\"\n                        content={\n                          <span>\n                            <Check style={{ marginRight: 5 }} size={15} />\n                            Confirmed\n                          </span>\n                        }\n                      />\n                    </td>\n                  ) : (\n                    <td>\n                      <Badge\n                        type=\"neutral\"\n                        content={\n                          <>\n                            <LoadingSpinner style={{ marginRight: 5 }} size={15} />\n                            <span>Unconfirmed</span>\n                          </>\n                        }\n                      />\n                    </td>\n                  )}\n                </tr>\n                {txInfo.data.blockHash && (\n                  <tr>\n                    <td>Block Hash</td>\n                    <td>\n                      <TightLink\n                        to={`../blocks/${txInfo.data.blockHash || ''}`}\n                        text={txInfo.data.blockHash || ''}\n                        maxWidth=\"550px\"\n                      />\n                    </td>\n                  </tr>\n                )}\n                {txInfo.data.timestamp && (\n                  <tr>\n                    <td>Timestamp</td>\n                    <td>{dayjs(txInfo.data.timestamp).format('MM/DD/YYYY HH:mm:ss')}</td>\n                  </tr>\n                )}\n                {txInfo.data.type === 'confirmed' && (\n                  <tr>\n                    <td>Inputs</td>\n                    <td>\n                      {txInfo.data.inputs && txInfo.data.inputs.length > 0\n                        ? txInfo.data.inputs.map((v, i) => (\n                            <AddressLink\n                              address={v.address}\n                              txHashRef={v.txHashRef}\n                              key={i}\n                              amount={JSBI.BigInt(v.amount)}\n                            />\n                          ))\n                        : 'Block Rewards'}\n                    </td>\n                  </tr>\n                )}\n                <tr>\n                  <td>Outputs</td>\n                  <td>\n                    {txInfo.data.outputs.map((v, i) => (\n                      <AddressLink address={v.address} key={i} amount={JSBI.BigInt(v.amount)} txHashRef={v.spent} />\n                    ))}\n                  </td>\n                </tr>\n                <tr>\n                  <td>Gas Amount</td>\n                  <td>{txInfo.data.gasAmount || '-'} GAS</td>\n                </tr>\n                <tr>\n                  <td>Gas Price</td>\n                  <td>\n                    <Amount value={JSBI.BigInt(txInfo.data.gasPrice)} />\n                  </td>\n                </tr>\n                <tr>\n                  <td>Transaction Fee</td>\n                  <td>\n                    <Amount\n                      value={JSBI.multiply(JSBI.BigInt(txInfo.data.gasPrice), JSBI.BigInt(txInfo.data.gasAmount))}\n                      showFullPrecision\n                    />\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <b>Total value</b>\n                  </td>\n                  <td>\n                    <Badge\n                      type=\"neutralHighlight\"\n                      content={txInfo.data.outputs.reduce<JSBI>(\n                        (acc, o) => JSBI.add(acc, JSBI.BigInt(o.amount)),\n                        JSBI.BigInt(0)\n                      )}\n                      amount\n                    />\n                  </td>\n                </tr>\n              </TableBody>\n            </Table>\n          ) : (\n            <InlineErrorMessage message={txInfo?.detail} code={txInfo?.status} />\n          )}\n        </>\n      ) : (\n        <LoadingSpinner />\n      )}\n    </Section>\n  )\n}\n\nexport default TransactionInfoSection\n","/*\nCopyright 2018 - 2022 The Alephium Authors\nThis file is part of the alephium project.\n\nThe library is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThe library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with the library. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport styled from 'styled-components'\n\nimport ComingSoon from '../components/ComingSoon'\nimport Section from '../components/Section'\n\nconst TransactionsSection = () => {\n  return (\n    <StyledSection>\n      <ComingSoon text=\"Coming soon.\" />\n    </StyledSection>\n  )\n}\n\nconst StyledSection = styled(Section)`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n`\n\nexport default TransactionsSection\n","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","/*\nCopyright 2018 - 2022 The Alephium Authors\nThis file is part of the alephium project.\n\nThe library is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThe library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with the library. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { DefaultTheme } from 'styled-components'\n\nexport type ThemeType = 'light' | 'dark'\n\nexport const darkTheme: DefaultTheme = {\n  name: 'dark',\n  body: '#212126',\n\n  textPrimary: 'rgba(255, 255, 255, 0.8)',\n  textSecondary: 'rgba(255, 255, 255, 0.35)',\n  textAccent: '#FFD036',\n\n  link: '#53A9F5',\n  linkHighlight: '#0E82E7',\n\n  bgPrimary: '#212126',\n  bgSecondary: '#18191C',\n  bgHighlight: 'rgba(0, 0, 0, 0.1)',\n  bgHover: 'rgba(0, 0, 0, 0.05)',\n\n  borderPrimary: '#34353A',\n  borderSecondary: '#27282d',\n  borderHighlight: '#585962',\n\n  accentGradient: 'linear-gradient(200deg, #6510f7, #f76110) border-box',\n\n  tooltip: 'black'\n}\n\nexport const lightTheme: DefaultTheme = {\n  name: 'light',\n  body: 'white',\n\n  textPrimary: 'rgba(15, 15, 15, 0.95)',\n  textSecondary: 'rgba(15, 15, 15, 0.50)',\n  textAccent: '#e69100',\n\n  link: '#0E82E7',\n  linkHighlight: '#53A9F5',\n\n  bgPrimary: 'white',\n  bgSecondary: '#f7f7f7',\n  bgHighlight: 'rgba(0, 0, 0, 0.015)',\n  bgHover: 'rgba(0, 0, 0, 0.01)',\n\n  borderPrimary: '#e6e6e6',\n  borderSecondary: '#e8e8e8',\n  borderHighlight: '#D1D1D4',\n\n  accentGradient: 'linear-gradient(200deg, #6510f7, #f76110) border-box',\n\n  tooltip: 'black'\n}\n","/*\nCopyright 2018 - 2022 The Alephium Authors\nThis file is part of the alephium project.\n\nThe library is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThe library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with the library. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { Address, Block, BlockList, Transaction } from '../types/api'\n\nexport interface APIData<T> {\n  data: T\n  status: number\n  resource?: never\n  detail?: never\n}\n\nexport interface APIError {\n  status: number\n  detail: string\n  resource?: string\n  data?: never\n}\n\nexport type APIResp<T> = APIData<T> | APIError\n\nexport class AlephClient {\n  url: string\n  fetchAPI: <T>(path: string) => Promise<APIResp<T>>\n\n  constructor(url: string) {\n    this.url = url\n    this.fetchAPI = async function <T>(path: string) {\n      return fetch(url + path)\n        .then((resp) => {\n          return new Promise((resolve, reject) => {\n            if (resp.ok) {\n              resp.json().then((r) => resolve({ data: r as T, status: resp.status }))\n            } else {\n              resp.json().then((e) => {\n                return reject({ detail: e.detail, status: resp.status, resource: e.resource } as APIError)\n              })\n            }\n          }) as Promise<APIResp<T>>\n        })\n        .catch((e) => {\n          return e as APIError\n        })\n    }\n  }\n\n  async block(id: string) {\n    return await this.fetchAPI<Block>('/blocks/' + id)\n  }\n\n  async blockTransactions(id: string, page: number) {\n    return await this.fetchAPI<Transaction[]>('/blocks/' + id + '/transactions' + '?page=' + page)\n  }\n\n  async blocks(page: number) {\n    return await this.fetchAPI<BlockList>('/blocks?page=' + page)\n  }\n\n  async address(id: string) {\n    return await this.fetchAPI<Address>('/addresses/' + id)\n  }\n\n  async addressTransactions(id: string, page: number) {\n    return await this.fetchAPI<Transaction[]>('/addresses/' + id + '/transactions' + '?page=' + page)\n  }\n\n  async transaction(id: string) {\n    return await this.fetchAPI<Transaction>('/transactions/' + id)\n  }\n}\n\nexport const createClient = (url: string) => {\n  const client = new AlephClient(url)\n\n  console.log('Connecting to: ' + client.url)\n\n  return client\n}\n","/*\nCopyright 2018 - 2022 The Alephium Authors\nThis file is part of the alephium project.\n\nThe library is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThe library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with the library. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { FC, useEffect } from 'react'\nimport { useLocation } from 'react-router-dom'\n\ninterface ScrollToTopProps {\n  getScrollContainer: () => HTMLElement | null\n}\n\nexport const ScrollToTop: FC<ScrollToTopProps> = ({ getScrollContainer }) => {\n  const { pathname } = useLocation()\n\n  useEffect(() => {\n    getScrollContainer()?.scrollTo(0, 0)\n  }, [getScrollContainer, pathname])\n\n  return null\n}\n","/*\nCopyright 2018 - 2022 The Alephium Authors\nThis file is part of the alephium project.\n\nThe library is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThe library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with the library. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport './index.css'\n\nimport { ExplorerClient } from 'alephium-js'\nimport dayjs from 'dayjs'\nimport updateLocale from 'dayjs/plugin/updateLocale'\nimport { AnimatePresence, motion } from 'framer-motion'\nimport { Menu } from 'lucide-react'\nimport { ArrowLeft } from 'lucide-react'\nimport React, { useCallback, useEffect, useRef, useState } from 'react'\nimport ReactDOM from 'react-dom'\nimport { HashRouter as Router, Redirect, Route } from 'react-router-dom'\nimport { useHistory } from 'react-router-dom'\nimport styled, { ThemeProvider } from 'styled-components'\n\nimport SearchBar from './components/SearchBar'\nimport Sidebar, { SidebarState } from './components/Sidebar'\nimport { StyledThemeSwitcher } from './components/ThemeSwitcher'\nimport AddressInfoSection from './sections/AddressInfoSection'\nimport AddressesSection from './sections/AdressesSection'\nimport BlockInfoSection from './sections/BlockInfoSection'\nimport BlockSection from './sections/BlockSection'\nimport TransactionInfoSection from './sections/TransactionInfoSection'\nimport TransactionsSection from './sections/TransactionsSection'\nimport * as serviceWorker from './serviceWorker'\nimport GlobalStyle, { deviceBreakPoints } from './style/globalStyles'\nimport { darkTheme, lightTheme, ThemeType } from './style/themes'\nimport { AlephClient, createClient } from './utils/client'\nimport { isElectron } from './utils/misc'\nimport { ScrollToTop } from './utils/routing'\n\nconst networkTypes = ['testnet', 'mainnet'] as const\nexport type NetworkType = typeof networkTypes[number]\n\ninterface SnackbarMessage {\n  text: string\n  type: 'info' | 'alert' | 'success'\n  duration?: number\n}\n\ninterface GlobalContext {\n  client: AlephClient | undefined\n  explorerClient: ExplorerClient | undefined\n  networkType: NetworkType | undefined\n  currentTheme: ThemeType\n  sidebarState: 'open' | 'close'\n  setSidebarState: (state: SidebarState) => void\n  switchTheme: (arg0: ThemeType) => void\n  setSnackbarMessage: (message: SnackbarMessage) => void\n}\n\nexport const GlobalContext = React.createContext<GlobalContext>({\n  client: undefined,\n  explorerClient: undefined,\n  networkType: undefined,\n  currentTheme: 'dark',\n  sidebarState: 'open',\n  setSidebarState: () => null,\n  switchTheme: () => null,\n  setSnackbarMessage: () => null\n})\n\n/* Customize data format accross the app */\ndayjs.extend(updateLocale)\n\ndayjs.updateLocale('en', {\n  relativeTime: {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few secs',\n    m: 'a min',\n    mm: '%d mins',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years'\n  }\n})\n\nconst App = () => {\n  const [themeName, setThemeName] = useStateWithLocalStorage<ThemeType>('theme', 'light')\n  const [client, setClient] = useState<AlephClient>()\n  const [explorerClient, setExplorerClient] = useState<ExplorerClient>()\n  const [networkType, setNetworkType] = useState<NetworkType>()\n  const [snackbarMessage, setSnackbarMessage] = useState<SnackbarMessage | undefined>()\n  const [sidebarState, setSidebarState] = useState<SidebarState>('close')\n\n  const contentRef = useRef(null)\n\n  const getContentRef = useCallback(() => contentRef.current, [])\n  const history = useHistory()\n\n  useEffect(() => {\n    // Check and apply environment variables\n    const url: string | null | undefined = process.env.REACT_APP_BACKEND_URL\n    const networkType = process.env.REACT_APP_NETWORK_TYPE as NetworkType | undefined\n\n    if (!url) {\n      throw new Error('The REACT_APP_BACKEND_URL environment variable must be defined')\n    }\n\n    if (!networkType) {\n      throw new Error('The REACT_APP_NETWORK_TYPE environment variable must be defined')\n    } else if (!networkTypes.includes(networkType)) {\n      throw new Error('Value of the REACT_APP_NETWORK_TYPE environment variable is invalid')\n    }\n\n    try {\n      setExplorerClient(new ExplorerClient({ baseUrl: url }))\n    } catch (error) {\n      throw new Error('Could not create explorer client')\n    }\n\n    setClient(createClient(url))\n    setNetworkType(networkType)\n  }, [])\n\n  // Remove snackbar popup\n  useEffect(() => {\n    if (snackbarMessage) {\n      setTimeout(() => setSnackbarMessage(undefined), snackbarMessage.duration || 3000)\n    }\n  }, [snackbarMessage])\n\n  return (\n    <Router>\n      <ThemeProvider theme={themeName === 'light' ? lightTheme : darkTheme}>\n        <GlobalStyle />\n        <GlobalContext.Provider\n          value={{\n            client,\n            explorerClient,\n            networkType,\n            currentTheme: themeName as ThemeType,\n            switchTheme: setThemeName as (arg0: ThemeType) => void,\n            sidebarState: 'close',\n            setSidebarState: setSidebarState,\n            setSnackbarMessage\n          }}\n        >\n          <MainContainer>\n            <Sidebar sidebarState={sidebarState} />\n            <ContentContainer>\n              <ContentWrapper ref={contentRef}>\n                <ScrollToTop getScrollContainer={getContentRef} />\n                <Header>\n                  <HamburgerButton onClick={() => setSidebarState('open')}>\n                    <Menu />\n                  </HamburgerButton>\n                  {isElectron() && (\n                    <nav>\n                      <BackButton\n                        size={20}\n                        onClick={() => history.goBack()}\n                        color={themeName === 'light' ? 'black' : 'white'}\n                      />\n                    </nav>\n                  )}\n                  <SearchBar />\n                </Header>\n                <Content>\n                  <Route exact path=\"/\">\n                    <Redirect to=\"/blocks\" />\n                  </Route>\n                  <Route exact path=\"/blocks\">\n                    <BlockSection />\n                  </Route>\n                  <Route path=\"/blocks/:id\">\n                    <BlockInfoSection />\n                  </Route>\n                  <Route exact path=\"/addresses\">\n                    <AddressesSection />\n                  </Route>\n                  <Route path=\"/addresses/:id\">\n                    <AddressInfoSection />\n                  </Route>\n                  <Route exact path=\"/transactions\">\n                    <TransactionsSection />\n                  </Route>\n                  <Route path=\"/transactions/:id\">\n                    <TransactionInfoSection />\n                  </Route>\n                </Content>\n              </ContentWrapper>\n            </ContentContainer>\n            <SnackbarManager message={snackbarMessage} />\n          </MainContainer>\n        </GlobalContext.Provider>\n      </ThemeProvider>\n    </Router>\n  )\n}\n\nconst SnackbarManager = ({ message }: { message: SnackbarMessage | undefined }) => {\n  return (\n    <SnackbarManagerContainer>\n      <AnimatePresence>\n        {message && (\n          <SnackbarPopup\n            initial={{ y: 10, opacity: 0 }}\n            animate={{ y: 0, opacity: 1 }}\n            exit={{ opacity: 0 }}\n            className={message?.type}\n          >\n            {message?.text}\n          </SnackbarPopup>\n        )}\n      </AnimatePresence>\n    </SnackbarManagerContainer>\n  )\n}\n\n/* Custom hooks */\n// Local storage hook\n\nfunction useStateWithLocalStorage<T>(localStorageKey: string, defaultValue: T) {\n  const [value, setValue] = React.useState(localStorage.getItem(localStorageKey) || defaultValue)\n\n  React.useEffect(() => {\n    localStorage.setItem(localStorageKey, value as string)\n  }, [localStorageKey, value])\n\n  return [value, setValue]\n}\n\n/* Styles */\n\nconst MainContainer = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  display: flex;\n  overflow: hidden;\n`\n\nconst ContentContainer = styled.div`\n  flex: 1;\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  overflow-y: auto;\n  overflow-x: hidden;\n`\n\nconst ContentWrapper = styled.main`\n  min-height: 100%;\n  flex: 1 1 1200px;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  max-width: 1400px;\n\n  @media ${deviceBreakPoints.mobile} {\n    width: 100%;\n    justify-self: flex-start;\n  }\n`\n\nconst Content = styled.div`\n  flex: 1;\n  display: flex;\n  padding: 0 min(5vw, 50px);\n  margin-top: 20px;\n  margin-bottom: 40px;\n`\n\nconst Header = styled.header`\n  display: flex;\n  align-items: center;\n  margin: 25px 40px;\n  z-index: 1;\n\n  @media ${deviceBreakPoints.mobile} {\n    margin: 10px;\n  }\n\n  ${StyledThemeSwitcher} {\n    @media ${deviceBreakPoints.mobile} {\n      display: none;\n    }\n  }\n`\n\nconst HamburgerButton = styled.div`\n  width: 35px;\n  height: 35px;\n  display: none;\n  margin-right: 15px;\n\n  @media ${deviceBreakPoints.tablet} {\n    display: flex;\n    cursor: pointer;\n    align-items: center;\n    justify-content: center;\n  }\n\n  @media ${deviceBreakPoints.mobile} {\n    margin-right: 5px;\n  }\n`\n\nconst BackButton = styled(ArrowLeft)`\n  cursor: pointer;\n  margin-right: 25px;\n  margin-top: 2px;\n`\n\nconst SnackbarManagerContainer = styled.div`\n  position: fixed;\n  bottom: 0;\n  right: 0;\n  left: 0;\n  display: flex;\n  z-index: 10001;\n`\n\nconst SnackbarPopup = styled(motion.div)`\n  bottom: 10px;\n  left: 25px;\n  margin: 10px auto;\n  text-align: center;\n  min-width: 150px;\n  max-width: 50vw;\n  padding: 20px;\n  color: white;\n  border-radius: 14px;\n  z-index: 1000;\n\n  &.alert {\n    background-color: rgb(219, 99, 69);\n  }\n\n  &.info {\n    background-color: black;\n  }\n\n  &.success {\n    background-color: rgb(56, 168, 93);\n  }\n`\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n)\n\n//\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","/*\nCopyright 2018 - 2022 The Alephium Authors\nThis file is part of the alephium project.\n\nThe library is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThe library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with the library. If not, see <http://www.gnu.org/licenses/>.\n*/\n\n// For usage from electron wallet, some UI elements can change.\n\nexport const isElectron = () => {\n  const userAgent = navigator.userAgent.toLowerCase()\n  return userAgent.indexOf(' electron/') > -1\n}\n"],"sourceRoot":""}