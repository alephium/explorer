{"version":3,"sources":["style/themes.ts","style/globalStyles.ts","serviceWorker.js","components/ThemeSwitcher.tsx","images/explorer-logo-light.svg","images/explorer-logo-dark.svg","images/block-icon.svg","images/address-icon.svg","images/transaction-icon.svg","components/Sidebar.tsx","hooks/useWindowSize.ts","components/SearchBar.tsx","components/SectionTitle.tsx","utils/client.ts","utils/util.tsx","components/LoadingSpinner.tsx","components/Tooltip.tsx","components/Section.tsx","components/ClipboardButton.tsx","components/Table.tsx","components/Amount.tsx","components/Links.tsx","hooks/useQueryParams.ts","components/Buttons.tsx","components/PageSwitch.tsx","hooks/usePageNumber.ts","sections/BlockSection.tsx","components/Badge.tsx","hooks/useTableDetailsState.ts","images/alephium-not-found.svg","components/InlineErrorMessage.tsx","sections/BlockInfoSection.tsx","sections/TransactionInfoSection.tsx","sections/AddressInfoSection.tsx","images/alephium-logo-gradient-stroke.svg","components/ComingSoon.tsx","sections/AdressesSection.tsx","sections/TransactionsSection.tsx","index.tsx"],"names":["darkTheme","name","body","textPrimary","textSecondary","textAccent","link","linkHighlight","bgPrimary","bgSecondary","bgHighlight","bgHover","borderPrimary","borderSecondary","borderHighlight","tooltip","lightTheme","GlobalStyle","createGlobalStyle","normalize","theme","deviceSizes","deviceBreakPoints","mobile","tablet","desktop","Boolean","window","location","hostname","match","getButtonColor","buttonTheme","toggleVariants","light","left","backgroundColor","dark","toggleWidth","StyledThemeSwitcher","styled","div","ToggleContent","ToggleIcon","ToggleFloatingIndicator","motion","ThemeSwitcher","className","useContext","GlobalContext","currentTheme","switchTheme","onClick","color","size","variants","animate","transition","duration","type","Logo","img","CloseButton","Backdrop","SidebarContainer","open","Header","header","Tabs","Tab","NavLink","TabIcon","Sidebar","sidebarState","useTheme","windowWidth","useState","width","undefined","height","windowSize","setWindowSize","useEffect","handleResize","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","lastWindowWidth","useRef","setSidebarState","current","to","alt","src","logoLight","logoDark","blockIcon","addressIcon","transactionIcon","AnimatePresence","opacity","exit","initial","Container","SearchIcon","Search","SearchInput","input","SearchBar","active","setActive","search","setSearch","setSnackbarMessage","inputRef","history","useHistory","handleRemoveFocus","redirect","blur","push","searching","str","word","trim","addressMatch","length","slice","text","ref","onBlur","onChange","e","target","value","onKeyDown","key","placeholder","TitleWrapper","Title","h1","Surtitle","h2","Subtitle","SecondaryTitle","SectionTitle","title","surtitle","subtitle","AlephClient","url","fetchAPI","this","path","a","fetch","then","resp","Promise","resolve","reject","ok","json","r","data","status","detail","resource","catch","id","page","MONEY_SYMBOL","QUINTILLION","removeTrailingZeros","numString","numberArray","split","numberOfZeros","i","getNumberOfTrailingZeros","numberArrayWithoutTrailingZeros","join","replace","abbreviateAmount","baseNum","showFullPrecision","nbOfDecimalsToShow","minDigits","JSBI","lessThanOrEqual","BigInt","alephNum","Number","tier","Math","log10","numberOfDigitsToDisplay","toFixed","toString","suffix","scale","pow","scaled","ScrollToTop","getScrollContainer","pathname","useLocation","scrollTo","useInterval","callback","delay","shouldPause","savedCallback","setInterval","clearInterval","Spinner","Loader","LoadingSpinner","style","Tooltip","rebuildTooltips","ReactTooltip","rebuild","SectionContext","React","createContext","section","Section","children","Provider","StyledClipboardIcon","Clipboard","StyledCheckIcon","Check","ClipboardButton","textToCopy","hasBeenCopied","setHasBeenCopied","data-tip","navigator","clipboard","writeText","Table","props","TableWrapper","StyledTable","TableHeader","headerTitles","columnWidths","textAlign","compact","transparent","StyledTableHeader","map","v","Row","tr","isActive","OpenConditionContext","DetailsRow","openCondition","AnimatedCell","colSpan","alignItems","condition","AnimatedCellContainer","closed","rotate","DetailToggle","isOpen","padding","overflow","DetailToggleWrapper","HighlightedCell","StyledHighlightedCell","noBorder","table","scrollable","bodyOnly","hasDetails","thead","TableBody","tbody","tdStyles","s","css","tdPos","td","Amount","TightLink","maxWidth","display","StyledLink","stopPropagation","AddressLink","address","txHashRef","amount","AddressWrapper","OutputValue","TxLink","span","Link","useQueryParams","paramNames","params","URLSearchParams","get","forEach","p","TextButton","StyledTextButton","button","disabled","SwitchContainer","PageNumbers","TotalNumberOfPages","PageSwitch","elementsPerPage","totalNumberOfElements","numberOfElementsLoaded","currentPage","parseInt","locationSearch","useMemo","handlePageSwitch","direction","setPageNumber","useCallback","pageNumber","set","totalNumberOfPages","ceil","isNaN","usePageNumber","pageParam","delete","dayjs","extend","relativeTime","TitleAndLoader","Content","PollingLoadingSpinner","TableBodyCustomStyles","BlockRow","BlockIcon","BlockSection","blockList","setBlockList","loading","setLoading","manualLoading","setManualLoading","client","currentPageNumber","getBlocks","manualFetch","console","log","blocks","fetchedBlocks","main","b","hash","timestamp","txNumber","chainFrom","chainTo","total","Badge","content","prefix","floatRight","float","getBadgeColor","badgeType","useTableDetailsState","defaultState","detailOpen","setDetailOpen","toggleDetail","ErrorWrapper","ErrorLogo","logo","ErrorMessageContainer","ErrorCode","ErrorMessage","InlineErrorMessage","message","code","shownMessage","TransactionRow","t","transaction","TransactionIcon","inputs","outputs","reduce","acc","o","add","BlockTableBodyCustomStyles","TXTableBodyCustomStyles","BlockInfoSection","useParams","blockInfo","setBlockInfo","txList","setTxList","infoLoading","setInfoLoading","txLoading","setTxLoading","block","blockTransactions","res","format","TransactionInfoSection","txInfo","setTxInfo","getTxInfo","marginRight","blockHash","spent","gasAmount","gasPrice","multiply","AddressTransactionRow","addressId","amountDelta","inputAmount","outputAmount","output","subtract","calAmountDelta","isOut","lessThan","every","_","filter","uniq","inputAccounts","BlockRewardLabel","renderInputAccounts","AddressTableBodyCustomStyles","NoTxMessage","addressInfo","setAddressInfo","previousId","addressTransactions","balance","sort","t1","t2","ComingSoonWrapper","ComingSoonLogo","ComingSoonText","ComingSoon","StyledSection","AddressesSection","TransactionsSection","updateLocale","future","past","m","mm","h","hh","d","dd","M","MM","y","yy","App","localStorageKey","defaultValue","localStorage","getItem","setValue","setItem","useStateWithLocalStorage","setTheme","setClient","snackbarMessage","contentRef","getContentRef","process","REACT_APP_BACKEND_URL","xs","protocol","host","createClient","setTimeout","MainContainer","ContentContainer","ContentWrapper","HamburgerButton","userAgent","toLowerCase","indexOf","BackButton","goBack","exact","AddressInfoSection","SnackbarManager","SnackbarManagerContainer","SnackbarPopup","ArrowLeft","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.ea4bd7f6.chunk.js","sourcesContent":["import { DefaultTheme } from 'styled-components'\n\nexport type ThemeType = 'light' | 'dark'\n\nexport const darkTheme: DefaultTheme = {\n  name: 'dark',\n  body: '#212126',\n\n  textPrimary: 'rgba(255, 255, 255, 0.8)',\n  textSecondary: 'rgba(255, 255, 255, 0.35)',\n  textAccent: '#FFD036',\n\n  link: '#53A9F5',\n  linkHighlight: '#0E82E7',\n\n  bgPrimary: '#212126',\n  bgSecondary: '#18191C',\n  bgHighlight: 'rgba(0, 0, 0, 0.1)',\n  bgHover: 'rgba(0, 0, 0, 0.05)',\n\n  borderPrimary: '#34353A',\n  borderSecondary: '#27282d',\n  borderHighlight: '#585962',\n\n  tooltip: 'black'\n}\n\nexport const lightTheme: DefaultTheme = {\n  name: 'light',\n  body: 'white',\n\n  textPrimary: 'rgba(15, 15, 15, 0.95)',\n  textSecondary: 'rgba(15, 15, 15, 0.50)',\n  textAccent: '#FF7B03',\n\n  link: '#0E82E7',\n  linkHighlight: '#53A9F5',\n\n  bgPrimary: 'white',\n  bgSecondary: '#FAFAFA',\n  bgHighlight: 'rgba(0, 0, 0, 0.012)',\n  bgHover: 'rgba(0, 0, 0, 0.01)',\n\n  borderPrimary: '#ebebeb',\n  borderSecondary: '#f2f2f2',\n  borderHighlight: '#D1D1D4',\n\n  tooltip: 'black'\n}\n","import { createGlobalStyle } from 'styled-components'\nimport normalize from 'styled-normalize'\n\nconst GlobalStyle = createGlobalStyle`\n  ${normalize}\n\n  body {\n    background-color: ${({ theme }) => theme.body};\n    transition: background-color 0.2s ease;\n\n    color: ${({ theme }) => theme.textPrimary};\n  }\n\n  a {\n    color: ${({ theme }) => theme.link};\n    cursor: pointer;\n\n    &:hover {\n      color: ${({ theme }) => theme.linkHighlight};;\n    }\n  }\n\n  // Titles\n  h2 {\n    font-weight: 600;\n  }\n\n  // Animations\n  @keyframes spin {\n    from {\n        transform:rotate(0deg);\n    }\n    to {\n        transform:rotate(360deg);\n    }\n  }\n`\n\n// Breakpoints\n\nexport const deviceSizes = {\n  mobile: 800,\n  tablet: 1000,\n  desktop: 1600\n}\n\nexport const deviceBreakPoints = {\n  mobile: `(max-width: ${deviceSizes.mobile}px)`,\n  tablet: `(max-width: ${deviceSizes.tablet}px)`,\n  desktop: `(max-width: ${deviceSizes.desktop}px)`\n}\n\nexport default GlobalStyle\n","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useContext } from 'react'\nimport styled from 'styled-components'\nimport { Moon, Sun } from 'react-feather'\nimport { ThemeType } from '../style/themes'\nimport { motion } from 'framer-motion'\nimport { GlobalContext } from '..'\n\ninterface ThemeSwitcherProps {\n  className?: string\n}\n\nconst getButtonColor = (theme: ThemeType, buttonTheme: string) => {\n  return theme === buttonTheme ? (theme === 'dark' ? '#F6C76A' : 'white') : '#646775'\n}\n\nconst toggleWidth = 80\nconst toggleHeight = toggleWidth / 2\nconst toggleIndicatorSize = toggleWidth / 2\n\nconst toggleVariants = {\n  light: { left: 0, backgroundColor: '#F6C76A' },\n  dark: { left: toggleWidth - toggleIndicatorSize, backgroundColor: '#3A0595' }\n}\n\nconst ThemeSwitcher: React.FC<ThemeSwitcherProps> = ({ className }) => {\n  const { currentTheme, switchTheme } = useContext(GlobalContext)\n\n  return (\n    <StyledThemeSwitcher onClick={() => switchTheme(currentTheme === 'light' ? 'dark' : 'light')} className={className}>\n      <ToggleContent>\n        <ToggleIcon>\n          <Sun onClick={() => switchTheme('light')} color={getButtonColor(currentTheme, 'light')} size={18} />\n        </ToggleIcon>\n        <ToggleIcon>\n          <Moon onClick={() => switchTheme('dark')} color={getButtonColor(currentTheme, 'dark')} size={18} />\n        </ToggleIcon>\n      </ToggleContent>\n      <ToggleFloatingIndicator\n        variants={toggleVariants}\n        animate={currentTheme}\n        transition={{ duration: 0.5, type: 'spring' }}\n      />\n    </StyledThemeSwitcher>\n  )\n}\n\nexport const StyledThemeSwitcher = styled.div`\n  position: relative;\n  width: ${toggleWidth}px;\n  height: ${toggleHeight}px;\n  border: 1px solid ${({ theme }) => theme.borderPrimary};\n  border-radius: 60px;\n  background-color: ${({ theme }) => theme.bgHighlight};\n  cursor: pointer;\n  box-sizing: content-box;\n\n  svg {\n    cursor: pointer;\n  }\n`\n\nconst ToggleContent = styled.div`\n  position: absolute;\n  display: flex;\n  height: 100%;\n  width: 100%;\n  margin: 0;\n  z-index: 1;\n`\n\nconst ToggleIcon = styled.div`\n  display: flex;\n  flex: 1;\n\n  * {\n    margin: auto;\n  }\n`\n\nconst ToggleFloatingIndicator = styled(motion.div)`\n  position: absolute;\n  width: ${toggleIndicatorSize}px;\n  height: ${toggleIndicatorSize}px;\n  background-color: ${({ theme }) => theme.textPrimary};\n  border-radius: 60px;\n  z-index: 0;\n`\n\nexport default ThemeSwitcher\n","export default __webpack_public_path__ + \"static/media/explorer-logo-light.537f5ebc.svg\";","export default __webpack_public_path__ + \"static/media/explorer-logo-dark.a77a8d41.svg\";","export default __webpack_public_path__ + \"static/media/block-icon.a6a8f086.svg\";","export default __webpack_public_path__ + \"static/media/address-icon.143269ad.svg\";","export default __webpack_public_path__ + \"static/media/transaction-icon.964bc84e.svg\";","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useContext, useEffect, useRef } from 'react'\nimport { Link, NavLink } from 'react-router-dom'\nimport styled, { useTheme } from 'styled-components'\n\nimport logoLight from '../images/explorer-logo-light.svg'\nimport logoDark from '../images/explorer-logo-dark.svg'\nimport blockIcon from '../images/block-icon.svg'\nimport addressIcon from '../images/address-icon.svg'\nimport transactionIcon from '../images/transaction-icon.svg'\nimport { deviceBreakPoints, deviceSizes } from '../style/globalStyles'\nimport { X } from 'react-feather'\nimport { useWindowSize } from '../hooks/useWindowSize'\nimport { AnimatePresence, motion } from 'framer-motion'\nimport ThemeSwitcher, { StyledThemeSwitcher } from './ThemeSwitcher'\nimport { GlobalContext } from '..'\n\nexport type SidebarState = 'open' | 'close'\n\nconst Sidebar = ({ sidebarState }: { sidebarState: SidebarState }) => {\n  const theme = useTheme()\n  const windowWidth = useWindowSize().width\n  const lastWindowWidth = useRef(windowWidth)\n  const { setSidebarState } = useContext(GlobalContext)\n\n  useEffect(() => {\n    if (windowWidth) {\n      if (\n        lastWindowWidth.current &&\n        lastWindowWidth.current >= deviceSizes.tablet &&\n        windowWidth < deviceSizes.tablet &&\n        open\n      ) {\n        setSidebarState('close')\n      }\n\n      lastWindowWidth.current = windowWidth\n    }\n  }, [setSidebarState, windowWidth])\n\n  return (\n    <>\n      <SidebarContainer open={sidebarState === 'open'}>\n        <CloseButton onClick={() => setSidebarState('close')}>{<X />}</CloseButton>\n        <Header>\n          <Link to=\"/\">\n            <Logo alt=\"alephium\" src={theme.name === 'light' ? logoLight : logoDark} />\n          </Link>\n        </Header>\n        <Tabs>\n          <Tab to=\"/blocks\" onClick={() => setSidebarState('close')}>\n            <TabIcon src={blockIcon} alt=\"blocks\" /> Blocks\n          </Tab>\n          <Tab to=\"/addresses\" onClick={() => setSidebarState('close')}>\n            <TabIcon src={addressIcon} alt=\"addresses\" /> Addresses\n          </Tab>\n          <Tab to=\"/transactions\" onClick={() => setSidebarState('close')}>\n            <TabIcon src={transactionIcon} alt=\"transactions\" /> Transactions\n          </Tab>\n        </Tabs>\n        <ThemeSwitcher />\n      </SidebarContainer>\n      <AnimatePresence>\n        {sidebarState === 'open' && (\n          <Backdrop\n            onClick={() => setSidebarState('close')}\n            animate={{ opacity: 0.4 }}\n            exit={{ opacity: 0 }}\n            initial={{ opacity: 0 }}\n            transition={{ duration: 0.15 }}\n          />\n        )}\n      </AnimatePresence>\n    </>\n  )\n}\n\n/* STYLES */\n\nconst Logo = styled.img`\n  height: 100px;\n  width: 140px;\n  margin-top: 5px;\n  margin-left: 25px;\n\n  @media ${deviceBreakPoints.tablet} {\n    width: 150px;\n  }\n`\n\nconst CloseButton = styled.div`\n  position: absolute;\n  width: 35px;\n  height: 35px;\n  top: 16px;\n  left: 20px;\n  display: none;\n  z-index: 300;\n  padding: 5px;\n  border-radius: 100%;\n\n  @media ${deviceBreakPoints.tablet} {\n    display: block;\n    cursor: pointer;\n  }\n`\n\nconst Backdrop = styled(motion.div)`\n  display: none;\n\n  @media ${deviceBreakPoints.tablet} {\n    display: block;\n    position: fixed;\n    top: 0;\n    right: 0;\n    left: 0;\n    bottom: 0;\n    background-color: black;\n    z-index: 101;\n  }\n`\n\ninterface SidebarContainerProps {\n  open: boolean\n}\n\nconst SidebarContainer = styled.div<SidebarContainerProps>`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  max-width: 250px;\n\n  background-color: ${({ theme }) => theme.bgSecondary};\n  border-right: 1px solid ${({ theme }) => theme.borderPrimary};\n\n  ${StyledThemeSwitcher} {\n    display: block;\n    position: absolute;\n    bottom: 25px;\n    left: 25px;\n  }\n\n  @media ${deviceBreakPoints.tablet} {\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    z-index: 200;\n    width: 250px;\n\n    transition: all 0.15s ease-out;\n    transform: ${({ open }) => (!open ? 'translateX(-100%)' : '')};\n  }\n`\n\nconst Header = styled.header`\n  display: flex;\n  align-items: center;\n\n  @media ${deviceBreakPoints.tablet} {\n    margin-top: 50px;\n  }\n`\n\nconst Tabs = styled.div`\n  margin-top: 12px;\n  display: flex;\n  flex-direction: column;\n  border-top: 1px solid ${({ theme }) => theme.borderPrimary};\n\n  @media ${deviceBreakPoints.tablet} {\n    margin-top: 30px;\n  }\n`\n\nconst Tab = styled(NavLink)`\n  font-size: 0.9rem;\n  font-weight: 500;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  transition: all 0.15s ease;\n  position: relative;\n  border-bottom: 1px solid ${({ theme }) => theme.borderPrimary};\n  padding: 13px 20px;\n\n  color: ${({ theme }) => theme.textSecondary};\n  &.active {\n    color: ${({ theme }) => theme.textPrimary};\n    background-color: ${({ theme }) => theme.bgPrimary};\n\n    img {\n      filter: none;\n    }\n  }\n  &:hover {\n    color: ${({ theme }) => theme.textPrimary};\n  }\n`\n\nconst TabIcon = styled.img`\n  height: 20px;\n  width: 20px;\n  margin-right: 15px;\n  filter: grayscale(100%);\n`\n\nexport default Sidebar\n","import { useState, useEffect } from 'react'\n\nexport function useWindowSize() {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState<{ width: undefined | number; height: undefined | number }>({\n    width: undefined,\n    height: undefined\n  })\n\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      })\n    }\n\n    // Add event listener\n    window.addEventListener('resize', handleResize)\n\n    // Call handler right away so state gets updated with initial window size\n    handleResize()\n\n    // Remove event listener on cleanup\n    return () => window.removeEventListener('resize', handleResize)\n  }, []) // Empty array ensures that effect is only run on mount\n\n  return windowSize\n}\n","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\n\nimport { motion } from 'framer-motion'\nimport React, { useContext, useRef, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { Search } from 'react-feather'\nimport { deviceBreakPoints } from '../style/globalStyles'\nimport { GlobalContext } from '..'\n\nconst SearchBar = () => {\n  const [active, setActive] = useState(false)\n  const [search, setSearch] = useState('')\n  const { setSnackbarMessage } = useContext(GlobalContext)\n  const inputRef = useRef<HTMLInputElement>(null)\n\n  const history = useHistory()\n\n  const handleInputClick = () => setActive(true)\n\n  const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearch(e.target.value)\n  }\n\n  const handleSearchClick = () => searching(search)\n\n  const handleSearchKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter') {\n      searching(search)\n    }\n  }\n\n  const handleRemoveFocus = () => {\n    setActive(false)\n  }\n\n  const cleanSearch = () => {\n    setSearch('')\n    setActive(false)\n  }\n\n  const redirect = (to: string) => {\n    handleRemoveFocus()\n    cleanSearch()\n    inputRef.current?.blur()\n    history.push(to)\n  }\n\n  const searching = (str: string) => {\n    const word = str.trim()\n    const addressMatch = word.match(/^[1-9A-HJ-NP-Za-km-z]{44,45}/)\n\n    const isAddress = addressMatch && addressMatch[0] === word\n\n    //TODO This is a very dummy way do differentiate address and transaction, need improvement\n    if (isAddress) {\n      redirect(`/addresses/${word}`)\n    } else if (word.length === 64 && word.slice(0, 4) === '0000') {\n      redirect(`/blocks/${word}`)\n    } else if (word.length === 64) {\n      redirect(`/transactions/${word}`)\n    } else {\n      setSnackbarMessage({ text: 'Please look for a correct address, transaction or block hash', type: 'info' })\n    }\n  }\n\n  return (\n    <Container>\n      <SearchInput\n        ref={inputRef}\n        onBlur={handleRemoveFocus}\n        onChange={handleSearchChange}\n        value={search}\n        onClick={handleInputClick}\n        onKeyDown={handleSearchKeyDown}\n        placeholder=\"Search for an address or a tx...\"\n      />\n      {active && <Backdrop animate={{ opacity: 1 }} transition={{ duration: 0.15 }} />}\n      <SearchIcon onClick={handleSearchClick} />\n    </Container>\n  )\n}\n\nconst Container = styled.div`\n  flex: 1;\n  position: relative;\n  height: 45px;\n\n  @media ${deviceBreakPoints.mobile} {\n    right: 10px;\n    left: 10px;\n    margin-right: 10px;\n    z-index: 1;\n  }\n`\n\nconst SearchIcon = styled(Search)`\n  color: ${({ theme }) => theme.textPrimary};\n  position: absolute;\n  right: 20px;\n  top: 12px;\n  z-index: 11;\n  height: 21px;\n  cursor: pointer;\n`\n\nconst SearchInput = styled.input`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  border-radius: 30px;\n  padding: 0 20px;\n  color: ${({ theme }) => theme.textPrimary};\n  background: ${({ theme }) => theme.bgSecondary};\n  border: 1px solid ${({ theme }) => theme.borderPrimary};\n  transition: all 0.15s ease-out;\n  z-index: 10;\n\n  &:hover {\n    border: 1px solid ${({ theme }) => theme.borderHighlight};\n  }\n\n  &:focus,\n  &:active {\n    box-shadow: 0 15px 15px rgba(0, 0, 0, 0.15);\n    background: linear-gradient(${({ theme }) => `${theme.bgSecondary}, ${theme.bgSecondary}`}) padding-box,\n      /*this is your grey background*/ linear-gradient(to right, #6510f7, #f76110) border-box;\n    border: 1px solid transparent;\n    z-index: 10;\n  }\n`\n\nconst Backdrop = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  z-index: 9;\n  opacity: 0;\n`\n\nexport default SearchBar\n","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\n\nimport React from 'react'\nimport styled from 'styled-components'\nimport { deviceBreakPoints } from '../style/globalStyles'\n\ninterface PageTitleProps {\n  title: string\n  surtitle?: string | JSX.Element\n  subtitle?: string | JSX.Element\n}\n\nconst SectionTitle: React.FC<PageTitleProps> = ({ title, surtitle, subtitle }) => (\n  <TitleWrapper>\n    {surtitle && <Surtitle>{surtitle}</Surtitle>}\n    <Title>{title}</Title>\n    {subtitle && <Subtitle>{subtitle}</Subtitle>}\n  </TitleWrapper>\n)\n\nconst TitleWrapper = styled.div`\n  margin-bottom: 25px;\n`\n\nconst Title = styled.h1`\n  font-family: 'Inter';\n  font-weight: bold;\n  font-size: 2.2rem;\n  color: ${({ theme }) => theme.textPrimary};\n  margin: 0 0 5px 0;\n  font-weight: 600;\n\n  @media ${deviceBreakPoints.mobile} {\n    font-size: 2rem;\n    margin-top: 20px;\n  }\n`\n\nconst Surtitle = styled.h2`\n  font-family: 'Inter';\n  font-weight: 500;\n  font-size: 1.6rem;\n  color: ${({ theme }) => theme.textSecondary};\n  margin-bottom: 0;\n  overflow: hidden;\n`\n\nconst Subtitle = styled.h2`\n  font-family: 'Inter';\n  font-weight: 500;\n  font-size: 1.6rem;\n  color: ${({ theme }) => theme.textSecondary};\n  margin: 0;\n`\n\nexport const SecondaryTitle = styled.h2`\n  margin-top: 40px;\n`\n\nexport default SectionTitle\n","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\n\nimport { Block, Transaction, Address, BlockList } from '../types/api'\n\nexport interface APIData<T> {\n  data: T\n  status: number\n  resource?: never\n  detail?: never\n}\n\nexport interface APIError {\n  status: number\n  detail: string\n  resource?: string\n  data?: never\n}\n\nexport type APIResp<T> = APIData<T> | APIError\n\nexport class AlephClient {\n  url: string\n  fetchAPI: <T>(path: string) => Promise<APIResp<T>>\n\n  constructor(url: string) {\n    this.url = url\n    this.fetchAPI = async function <T>(path: string) {\n      return fetch(url + path)\n        .then((resp) => {\n          return new Promise((resolve, reject) => {\n            if (resp.ok) {\n              resp.json().then((r) => resolve({ data: r as T, status: resp.status }))\n            } else {\n              resp.json().then((e) => {\n                return reject({ detail: e.detail, status: resp.status, resource: e.resource } as APIError)\n              })\n            }\n          }) as Promise<APIResp<T>>\n        })\n        .catch((e) => {\n          return e as APIError\n        })\n    }\n  }\n\n  async block(id: string) {\n    return await this.fetchAPI<Block>('/blocks/' + id)\n  }\n\n  async blockTransactions(id: string, page: number) {\n    return await this.fetchAPI<Transaction[]>('/blocks/' + id + '/transactions' + '?page=' + page)\n  }\n\n  async blocks(page: number) {\n    return await this.fetchAPI<BlockList>('/blocks?page=' + page)\n  }\n\n  async address(id: string) {\n    return await this.fetchAPI<Address>('/addresses/' + id)\n  }\n\n  async addressTransactions(id: string, page: number) {\n    return await this.fetchAPI<Transaction[]>('/addresses/' + id + '/transactions' + '?page=' + page)\n  }\n\n  async transaction(id: string) {\n    return await this.fetchAPI<Transaction>('/transactions/' + id)\n  }\n}\n","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\n\nimport { AlephClient } from './client'\nimport { useEffect, useRef } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { FC } from 'react'\nimport { Transaction } from '../types/api'\nimport JSBI from 'jsbi'\n\n// ==== API\n\nexport const createClient = (url: string) => {\n  const client = new AlephClient(url)\n\n  console.log('Connecting to: ' + client.url)\n\n  return client\n}\n\n// ==== MATHS\n\nconst MONEY_SYMBOL = ['', 'K', 'M', 'B', 'T']\nconst QUINTILLION = 1000000000000000000\n\nexport const truncateToDecimals = (num: number, dec = 2) => {\n  const calcDec = Math.pow(10, dec)\n  return Math.trunc(num * calcDec) / calcDec\n}\n\nconst getNumberOfTrailingZeros = (numberArray: string[]) => {\n  let numberOfZeros = 0\n\n  for (let i = numberArray.length - 1; i >= 0; i--) {\n    if (numberArray[i] === '0') {\n      numberOfZeros++\n    } else {\n      break\n    }\n  }\n\n  return numberOfZeros\n}\n\nconst removeTrailingZeros = (numString: string) => {\n  const numberArray = numString.split('')\n\n  const numberOfZeros = getNumberOfTrailingZeros(numberArray)\n\n  const numberArrayWithoutTrailingZeros = [...numberArray.slice(0, numberArray.length - numberOfZeros)]\n\n  if (numberArrayWithoutTrailingZeros[numberArrayWithoutTrailingZeros.length - 1] === '.')\n    numberArrayWithoutTrailingZeros.push('0')\n\n  return numberArrayWithoutTrailingZeros.join().replace(/,/g, '')\n}\n\nexport const abbreviateAmount = (baseNum: JSBI, showFullPrecision = false, nbOfDecimalsToShow?: number) => {\n  const minDigits = 3\n\n  if (JSBI.lessThanOrEqual(baseNum, JSBI.BigInt(0))) return '0.00'\n\n  // For abbreviation, we don't need full precision and can work with number\n  const alephNum = Number(baseNum) / QUINTILLION\n\n  // what tier? (determines SI symbol)\n\n  let tier = (Math.log10(alephNum) / 3) | 0\n\n  const numberOfDigitsToDisplay = nbOfDecimalsToShow ? nbOfDecimalsToShow : minDigits\n\n  if (tier < 0 || showFullPrecision) {\n    return removeTrailingZeros(alephNum.toFixed(18)) // Keep full precision for very low numbers (gas etc.)\n  } else if (tier === 0) {\n    // Small number, low precision is ok\n    return removeTrailingZeros(alephNum.toFixed(numberOfDigitsToDisplay).toString())\n  } else if (tier >= MONEY_SYMBOL.length) {\n    tier = MONEY_SYMBOL.length - 1\n  }\n\n  // get suffix and determine scale\n  const suffix = MONEY_SYMBOL[tier]\n  const scale = Math.pow(10, tier * 3)\n\n  // Scale the bigNum\n  // Here we need to be careful of precision issues\n  const scaled = alephNum / scale\n\n  return scaled.toFixed(numberOfDigitsToDisplay) + suffix\n}\n\nexport const createRandomId = () => Math.random().toString(36).substring(7)\n\n// ==== ROUTING\n\ninterface ScrollToTopProps {\n  getScrollContainer: () => HTMLElement | null\n}\n\nexport const ScrollToTop: FC<ScrollToTopProps> = ({ getScrollContainer }) => {\n  const { pathname } = useLocation()\n\n  useEffect(() => {\n    getScrollContainer()?.scrollTo(0, 0)\n  }, [getScrollContainer, pathname])\n\n  return null\n}\n\n// ==== MISC\n\nexport function useInterval(callback: () => void, delay: number, shouldPause = false) {\n  const savedCallback = useRef<() => void>(() => null)\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current()\n    }\n    if (delay !== null && !shouldPause) {\n      const id = setInterval(tick, delay)\n      return () => clearInterval(id)\n    }\n  }, [delay, shouldPause])\n}\n\nexport function smartHash(hash: string) {\n  if (hash.length <= 16) return hash\n  else return hash.substring(0, 8) + '...' + hash.substring(hash.length - 8)\n}\n\nexport function calAmountDelta(t: Transaction, id: string) {\n  const inputAmount = t.inputs.reduce<JSBI>((acc, input) => {\n    const inputAmount = JSBI.BigInt(input.amount)\n    return input.address === id ? JSBI.add(acc, inputAmount) : acc\n  }, JSBI.BigInt(0))\n  const outputAmount = t.outputs.reduce<JSBI>((acc, output) => {\n    const outputAmount = JSBI.BigInt(output.amount)\n    return output.address === id ? JSBI.add(acc, outputAmount) : acc\n  }, JSBI.BigInt(0))\n\n  return JSBI.subtract(outputAmount, inputAmount)\n}\n\n// For usage from electron wallet, some UI elements can change.\n\nexport const isElectron = () => {\n  const userAgent = navigator.userAgent.toLowerCase()\n  return userAgent.indexOf(' electron/') > -1\n}\n","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\n\nimport React from 'react'\nimport { Loader } from 'react-feather'\nimport styled from 'styled-components'\n\ninterface LoadingSpinnerProps {\n  size?: number\n  style?: React.CSSProperties\n}\n\nconst LoadingSpinner: React.FC<LoadingSpinnerProps> = ({ size, style }) => <Spinner size={size} style={style} />\n\nconst Spinner = styled(Loader)`\n  animation: spin 1s infinite;\n`\n\nexport default LoadingSpinner\n","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { FC } from 'react'\nimport ReactTooltip from 'react-tooltip'\nimport { useTheme } from 'styled-components'\n\ninterface TooltipProps {\n  id?: string\n}\n\nconst Tooltip: FC<TooltipProps> = ({ id }) => {\n  const theme = useTheme()\n\n  return <ReactTooltip backgroundColor={theme.tooltip} id={id} />\n}\n\nexport default Tooltip\n","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect } from 'react'\nimport { FC } from 'react'\nimport ReactTooltip from 'react-tooltip'\nimport styled from 'styled-components'\nimport Tooltip from './Tooltip'\n\nconst rebuildTooltips = () => {\n  ReactTooltip.rebuild()\n}\n\ninterface SectionContextType {\n  rebuildTooltips: () => void\n}\n\nexport const SectionContext = React.createContext<SectionContextType>({ rebuildTooltips: rebuildTooltips })\n\nconst Section: FC<{ className?: string }> = ({ children, className }) => {\n  useEffect(() => {\n    rebuildTooltips()\n  })\n\n  return (\n    <Container className={className}>\n      <SectionContext.Provider value={{ rebuildTooltips }}>\n        <Tooltip />\n        {children}\n      </SectionContext.Provider>\n    </Container>\n  )\n}\n\nconst Container = styled.section`\n  width: 100%;\n`\n\nexport default Section\n","import { useEffect, useState, useContext } from 'react'\nimport { Clipboard, Check } from 'react-feather'\nimport ReactTooltip from 'react-tooltip'\nimport styled from 'styled-components'\nimport { GlobalContext } from '..'\n\nconst ClipboardButton = ({ textToCopy }: { textToCopy: string }) => {\n  const [hasBeenCopied, setHasBeenCopied] = useState(false)\n  const { setSnackbarMessage } = useContext(GlobalContext)\n\n  const handleClick = () => {\n    navigator.clipboard\n      .writeText(textToCopy)\n      .catch((e) => {\n        throw e\n      })\n      .then(() => {\n        setHasBeenCopied(true)\n      })\n  }\n\n  useEffect(() => {\n    // Reset icon after copy\n    if (hasBeenCopied) {\n      ReactTooltip.rebuild()\n      setSnackbarMessage({ text: 'Copied to clipboard!', type: 'info' })\n\n      setInterval(() => {\n        setHasBeenCopied(false)\n      }, 3000)\n    }\n  }, [hasBeenCopied, setSnackbarMessage])\n\n  if (!hasBeenCopied) {\n    return <StyledClipboardIcon size={15} data-tip={'Copy to clipboard'} onClick={handleClick} />\n  } else {\n    return <StyledCheckIcon size={15} />\n  }\n}\n\nconst StyledClipboardIcon = styled(Clipboard)`\n  margin-left: 5px;\n  cursor: pointer;\n  color: ${({ theme }) => theme.textSecondary};\n`\n\nconst StyledCheckIcon = styled(Check)`\n  margin-left: 5px;\n  color: ${({ theme }) => theme.textPrimary};\n`\n\nexport default ClipboardButton\n","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\n\nimport { AnimatePresence, motion } from 'framer-motion'\nimport React, { createContext, FC, useContext, useEffect } from 'react'\nimport { ChevronDown } from 'react-feather'\nimport styled, { css, DefaultTheme, FlattenInterpolation, ThemeProps } from 'styled-components'\nimport { SectionContext } from './Section'\nimport ClipboardButton from './ClipboardButton'\nimport { deviceBreakPoints } from '../style/globalStyles'\n\ninterface TableProps {\n  main?: boolean\n  hasDetails?: boolean\n  noBorder?: boolean\n  bodyOnly?: boolean\n  scrollable?: boolean\n}\n\nexport const Table: FC<TableProps> = ({ children, ...props }) => (\n  <TableWrapper {...props}>\n    <StyledTable {...props}>{children}</StyledTable>\n  </TableWrapper>\n)\n\ninterface TableHeaderProps {\n  headerTitles: string[]\n  columnWidths?: string[]\n  textAlign?: ('left' | 'right')[]\n  compact?: boolean\n  transparent?: boolean\n}\n\nexport const TableHeader: React.FC<TableHeaderProps> = ({\n  headerTitles,\n  columnWidths,\n  textAlign,\n  compact = false,\n  transparent = false\n}) => (\n  <StyledTableHeader compact={compact} transparent={transparent}>\n    <tr>\n      {headerTitles.map((v, i) => (\n        <th\n          key={i}\n          style={{\n            width: columnWidths ? columnWidths[i] || 'auto' : 'auto',\n            textAlign: textAlign ? textAlign[i] : 'left'\n          }}\n        >\n          {v}\n        </th>\n      ))}\n    </tr>\n  </StyledTableHeader>\n)\n\n// == Row\n\ninterface RowProps {\n  isActive?: boolean\n}\n\nexport const Row = styled.tr<RowProps>`\n  background-color: ${({ theme, isActive }) => (isActive ? theme.bgHighlight : '')};\n  border: none;\n  cursor: ${({ onClick }) => (onClick ? 'pointer' : 'auto')};\n`\n\n// == Details Row\n\ninterface DetailsRowProps {\n  openCondition: boolean\n}\n\nconst OpenConditionContext = createContext(false)\n\nexport const DetailsRow: FC<DetailsRowProps> = ({ children, openCondition }) => {\n  const rebuildTooltips = useContext(SectionContext).rebuildTooltips\n  useEffect(() => rebuildTooltips()) // Need to rebuild after lazy rendering\n\n  return (\n    <OpenConditionContext.Provider value={openCondition}>\n      <tr className=\"details\">{children}</tr>\n    </OpenConditionContext.Provider>\n  )\n}\n\ninterface AnimatedCellProps {\n  className?: string\n  colSpan?: number\n  alignItems?: 'left' | 'right'\n}\n\nexport const AnimatedCell: FC<AnimatedCellProps> = ({ children, className, colSpan, alignItems = 'left' }) => {\n  const condition = useContext(OpenConditionContext)\n\n  return (\n    <td colSpan={colSpan}>\n      <AnimatePresence>\n        {condition && (\n          <motion.div\n            initial={{ height: 0 }}\n            animate={{ height: 'auto' }}\n            exit={{ height: 0 }}\n            transition={{ duration: 0.15 }}\n            className={className}\n          >\n            <AnimatedCellContainer alignItems={alignItems}>{children}</AnimatedCellContainer>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </td>\n  )\n}\n\n// == Details Toggle\n\nconst variants = {\n  closed: { rotate: 0 },\n  open: { rotate: 180 }\n}\n\ninterface DetailToggleProps {\n  isOpen: boolean\n  onClick: () => void\n}\n\nexport const DetailToggle: FC<DetailToggleProps> = ({ isOpen, onClick }) => {\n  return (\n    <td style={{ padding: 0, textAlign: 'center', overflow: 'hidden' }}>\n      <DetailToggleWrapper animate={isOpen ? 'open' : 'closed'} variants={variants} onClick={onClick}>\n        <ChevronDown size={20} />\n      </DetailToggleWrapper>\n    </td>\n  )\n}\n\nconst DetailToggleWrapper = styled(motion.div)`\n  cursor: pointer;\n`\n\n// == Highlighted cell (address, hash...)\n\nexport const HighlightedCell: FC<{ textToCopy: string }> = ({ children, textToCopy }) => {\n  return (\n    <StyledHighlightedCell>\n      <span>{children}</span>\n      <ClipboardButton textToCopy={textToCopy} />\n    </StyledHighlightedCell>\n  )\n}\n\n// ===\n// === Styles ====\n// ===\n\nconst TableWrapper = styled.div<TableProps>`\n  border: ${({ noBorder, theme }) => !noBorder && `1px solid ${theme.borderPrimary}`};\n  overflow: hidden;\n  border-radius: 7px;\n`\n\nconst StyledTable = styled.table<TableProps>`\n  width: 100%;\n  text-align: left;\n  border-collapse: collapse;\n  table-layout: fixed;\n  white-space: nowrap;\n\n  @media ${deviceBreakPoints.mobile} {\n    ${({ scrollable }) => {\n      if (scrollable) {\n        return `\n\t\t\t\t\tdisplay: block;\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\toverflow-x: auto;\n\t\t\t\t`\n      }\n    }}\n  }\n\n  td:nth-child(1) {\n    width: ${({ bodyOnly }) => (bodyOnly ? '27%' : 'auto')};\n  }\n\n  tr td {\n    padding: 12px;\n  }\n\n  tr:not(.details) td {\n    height: 45px;\n  }\n\n  svg {\n    vertical-align: bottom;\n  }\n\n  tbody {\n    tr:not(:last-child) {\n      border-bottom: ${({ hasDetails, noBorder, theme }) =>\n        !hasDetails ? (noBorder ? 'none' : `1px solid ${theme.borderPrimary}`) : ''};\n    }\n\n    tr.details {\n      &:not(:last-child) {\n        border-bottom: 1px solid ${({ theme }) => theme.borderPrimary};\n      }\n      box-shadow: inset 0 1px 0 ${({ theme }) => theme.borderSecondary};\n      background-color: ${({ theme }) => theme.bgHighlight};\n\n      td {\n        padding-top: 0;\n        padding-bottom: 0;\n      }\n    }\n  }\n`\n\ninterface StyledTableHeaderProps {\n  compact: boolean\n  transparent: boolean\n}\n\nexport const StyledTableHeader = styled.thead<StyledTableHeaderProps>`\n  color: ${({ theme }) => theme.textSecondary};\n\n  th {\n    padding: 0px 12px 12px 12px;\n    font-weight: 500;\n    ${({ compact, theme }) => {\n      if (!compact) {\n        return `\n\t\t\t\t\tposition: sticky;\n\t\t\t\t\ttop: 0;\n\t\t\t\t\tbox-shadow: inset 0 -1px 0 ${theme.borderPrimary};\n\t\t\t\t\tpadding: 12px;\n\t\t\t\t`\n      }\n    }}\n    background-color: ${({ theme, transparent }) => (transparent ? 'transparent' : `${theme.bgSecondary}`)};\n  }\n\n  tr {\n    height: ${({ compact }) => (compact ? '30px' : '48px')};\n  }\n`\n\nexport interface TDStyle {\n  tdPos: number\n  style: FlattenInterpolation<ThemeProps<DefaultTheme>>\n}\n\nexport interface TableBopyProps {\n  tdStyles?: TDStyle[]\n}\n\nexport const TableBody = styled.tbody<TableBopyProps>`\n  color: ${({ theme }) => theme.textPrimary};\n\n  & > tr {\n    ${(props) =>\n      props.tdStyles\n        ? props.tdStyles.map(\n            (s) =>\n              css`\n                & > td:nth-child(${s.tdPos}) {\n                  ${s.style}\n                }\n              `\n          )\n        : ''}\n\n    &.details div {\n      overflow: hidden;\n    }\n\n    &:hover {\n      background-color: ${({ theme }) => theme.bgHover};\n    }\n  }\n`\n\nconst StyledHighlightedCell = styled.td`\n  font-weight: 600 !important;\n  color: ${({ theme }) => theme.textAccent};\n  word-wrap: break-word;\n  white-space: pre-wrap;\n  overflow: hidden;\n`\n\nexport const AnimatedCellContainer = styled(motion.div)<{ alignItems: 'left' | 'right' }>`\n  padding: 10px 0;\n  text-align: left;\n  overflow: hidden;\n\n  display: flex;\n  flex-direction: column;\n  align-items: ${({ alignItems }) => (alignItems === 'left' ? 'flex-start' : 'flex-end')};\n`\n","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\nimport React, { FC } from 'react'\nimport { abbreviateAmount } from '../utils/util'\nimport JSBI from 'jsbi'\n\ninterface AmountProps {\n  value: JSBI | undefined\n  className?: string\n}\n\nconst Amount: FC<AmountProps> = ({ value, className }) => {\n  if (value !== undefined) {\n    return <span className={className}>{abbreviateAmount(value).toString()} א</span>\n  } else {\n    return <span className={className}>- א</span>\n  }\n}\n\nexport default Amount\n","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { FC } from 'react'\nimport { ExternalLink } from 'react-feather'\nimport { Link, LinkProps } from 'react-router-dom'\nimport styled from 'styled-components'\nimport Amount from './Amount'\nimport { smartHash } from '../utils/util'\nimport JSBI from 'jsbi'\n\ninterface TightLinkProps extends LinkProps {\n  maxWidth: string\n  text: string\n}\n\nexport const TightLinkStrict: React.FC<TightLinkProps> = ({ maxWidth, text, ...props }) => {\n  return (\n    <div style={{ maxWidth: maxWidth, display: 'flex', overflow: 'hidden' }}>\n      <StyledLink {...props} data-tip={text}>\n        {smartHash(text)}\n      </StyledLink>\n    </div>\n  )\n}\n\nexport const TightLink: React.FC<TightLinkProps> = ({ maxWidth, text, ...props }) => {\n  return (\n    <div style={{ maxWidth: maxWidth, display: 'flex', overflow: 'hidden' }}>\n      <StyledLink\n        {...props}\n        data-tip={text}\n        onClick={(e) => {\n          e.stopPropagation()\n        }}\n      >\n        {text}\n      </StyledLink>\n    </div>\n  )\n}\n\ninterface AddressLinkProps {\n  maxWidth?: string\n  address: string\n  txHashRef?: string\n  amount?: JSBI\n}\n\nexport const AddressLink: FC<AddressLinkProps> = ({ maxWidth = 'auto', address, txHashRef, amount }) => {\n  return (\n    <AddressWrapper>\n      <TightLink to={`/addresses/${address}`} maxWidth={maxWidth} text={address} />\n      {amount !== undefined && (\n        <OutputValue>\n          (<Amount value={amount} />)\n        </OutputValue>\n      )}\n      {txHashRef && (\n        <TxLink to={`/transactions/${txHashRef}`} data-tip={txHashRef}>\n          <ExternalLink size={12} />\n        </TxLink>\n      )}\n    </AddressWrapper>\n  )\n}\n\nconst OutputValue = styled.span`\n  color: ${({ theme }) => theme.textSecondary};\n  margin-left: 8px;\n`\n\nconst TxLink = styled(Link)`\n  margin-left: 8px;\n`\nconst StyledLink = styled(Link)`\n  white-space: nowrap;\n  font-family: 'Roboto Mono';\n  font-size: 13.3px;\n  font-weight: 500;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`\n\nconst AddressWrapper = styled.div`\n  padding: 3px 0;\n  display: flex;\n  width: 100%;\n`\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n// https://github.com/microsoft/TypeScript/issues/24929\nimport { useLocation } from 'react-router-dom'\n\nconst useQueryParams = <T extends string[] | string>(\n  paramNames: T\n): T extends string ? string | null : Record<string, string | null> => {\n  const search = useLocation().search\n\n  const params: Record<string, string | null> = {}\n\n  if (typeof paramNames === 'string') {\n    return new URLSearchParams(search).get(paramNames) as any\n  } else {\n    paramNames.forEach((p) => {\n      params[p] = new URLSearchParams(search).get(p)\n    })\n    return params as any\n  }\n}\n\nexport default useQueryParams\n","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { FC } from 'react'\nimport styled from 'styled-components'\n\nexport const TextButton: FC<React.ButtonHTMLAttributes<HTMLButtonElement>> = ({ children, ...props }) => (\n  <StyledTextButton {...props}>{children}</StyledTextButton>\n)\n\nconst StyledTextButton = styled.button`\n  background: transparent;\n  font-size: inherit;\n  color: ${({ theme, disabled }) => {\n    if (disabled) return theme.textSecondary\n    else return theme.link\n  }};\n\n  display: flex;\n  align-items: center;\n  padding: 0;\n  border: 0;\n  cursor: ${({ disabled }) => (disabled ? 'default' : 'pointer')};\n\n  &:hover {\n    color: ${({ theme, disabled }) => {\n      if (disabled) return\n      return theme.linkHighlight\n    }};\n  }\n`\n","import React, { useCallback, useEffect, useMemo } from 'react'\nimport { ChevronRight, ChevronLeft } from 'react-feather'\nimport { useHistory } from 'react-router-dom'\nimport styled from 'styled-components'\nimport useQueryParams from '../hooks/useQueryParams'\nimport { TextButton } from './Buttons'\n\nconst PageSwitch = ({\n  elementsPerPage = 20,\n  totalNumberOfElements,\n  numberOfElementsLoaded\n}: {\n  elementsPerPage?: number\n  totalNumberOfElements?: number\n  numberOfElementsLoaded?: number\n}) => {\n  const currentPage = parseInt(useQueryParams('p') || '1')\n  const history = useHistory()\n  const location = history.location\n\n  const locationSearch = useMemo(() => new URLSearchParams(location.search), [location.search])\n\n  const handlePageSwitch = (direction: 'previous' | 'next') => {\n    setPageNumber(direction === 'previous' ? currentPage - 1 : currentPage + 1)\n  }\n\n  const setPageNumber = useCallback(\n    (pageNumber: number) => {\n      locationSearch.set('p', pageNumber.toString())\n      history.push({ search: locationSearch.toString() })\n    },\n    [history, locationSearch]\n  )\n\n  const totalNumberOfPages = totalNumberOfElements && Math.ceil(totalNumberOfElements / elementsPerPage)\n\n  // Redirect if page number is incorrect\n  useEffect(() => {\n    if (currentPage < 1) {\n      setPageNumber(1)\n    } else if (totalNumberOfPages && currentPage > totalNumberOfPages) {\n      setPageNumber(totalNumberOfPages)\n    } else if (isNaN(currentPage)) {\n      setPageNumber(1)\n    }\n  }, [currentPage, setPageNumber, totalNumberOfPages])\n\n  if (totalNumberOfElements === 0) return null\n\n  return (\n    <SwitchContainer>\n      <TextButton disabled={currentPage === 1} onClick={() => handlePageSwitch('previous')}>\n        <ChevronLeft />\n        <span>Previous</span>\n      </TextButton>\n      <PageNumbers>\n        {currentPage}\n        {totalNumberOfPages && <TotalNumberOfPages>{` / ${totalNumberOfPages}`}</TotalNumberOfPages>}\n      </PageNumbers>\n      <TextButton\n        disabled={\n          totalNumberOfPages\n            ? totalNumberOfPages === currentPage\n            : numberOfElementsLoaded\n            ? numberOfElementsLoaded < 20\n            : false\n        }\n        onClick={() => handlePageSwitch('next')}\n      >\n        <span>Next</span>\n        <ChevronRight />\n      </TextButton>\n    </SwitchContainer>\n  )\n}\n\nconst SwitchContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 35px;\n`\n\nconst PageNumbers = styled.div`\n  padding: 0 15px;\n  text-align: center;\n  font-weight: 600;\n`\n\nconst TotalNumberOfPages = styled.span`\n  color: ${({ theme }) => theme.textSecondary};\n`\n\nexport default PageSwitch\n","import { useMemo } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport useQueryParams from './useQueryParams'\n\nconst usePageNumber = () => {\n  const pageParam = useQueryParams('p')\n  const pageNumber = pageParam && parseInt(pageParam)\n  const history = useHistory()\n  const location = history.location\n\n  const locationSearch = useMemo(() => new URLSearchParams(location.search), [location.search])\n\n  if (pageNumber === 1) {\n    locationSearch.delete('p')\n    history.replace({ search: locationSearch.toString() })\n  }\n\n  return pageNumber || 1\n}\n\nexport default usePageNumber\n","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useCallback, useContext, useEffect, useState } from 'react'\nimport dayjs from 'dayjs'\nimport styled, { css } from 'styled-components'\nimport SectionTitle from '../components/SectionTitle'\nimport { BlockList } from '../types/api'\nimport { useInterval } from '../utils/util'\nimport blockIcon from '../images/block-icon.svg'\nimport relativeTime from 'dayjs/plugin/relativeTime'\nimport LoadingSpinner from '../components/LoadingSpinner'\nimport { GlobalContext } from '..'\nimport { Table, TableBody, TableHeader, TDStyle } from '../components/Table'\nimport { TightLink } from '../components/Links'\nimport Section from '../components/Section'\nimport { motion } from 'framer-motion'\nimport { APIResp } from '../utils/client'\nimport PageSwitch from '../components/PageSwitch'\nimport usePageNumber from '../hooks/usePageNumber'\nimport { useHistory } from 'react-router-dom'\n\ndayjs.extend(relativeTime)\n\nconst BlockSection = () => {\n  const [blockList, setBlockList] = useState<BlockList>()\n  const [loading, setLoading] = useState(false)\n  const [manualLoading, setManualLoading] = useState(false)\n  const history = useHistory()\n\n  const client = useContext(GlobalContext).client\n\n  // Default page\n  const currentPageNumber = usePageNumber()\n\n  const getBlocks = useCallback(\n    async (pageNumber: number, manualFetch?: boolean) => {\n      if (!client) return\n\n      console.log('Fetching blocks...')\n\n      manualFetch ? setManualLoading(true) : setLoading(true)\n      const fetchedBlocks: APIResp<BlockList> = await client.blocks(pageNumber)\n\n      // Check if manual fetching has been set in the meantime (overriding polling fetch)\n\n      if (currentPageNumber !== pageNumber) {\n        setLoading(false)\n        return\n      }\n\n      console.log('Number of block fetched: ' + fetchedBlocks.data?.blocks.length)\n      setBlockList(fetchedBlocks.data)\n\n      manualFetch ? setManualLoading(false) : setLoading(false)\n    },\n    [client, currentPageNumber]\n  )\n\n  // Fetching Data when page number changes or page loads initially\n  useEffect(() => {\n    getBlocks(currentPageNumber, true)\n  }, [getBlocks, currentPageNumber])\n\n  // Polling\n  useInterval(() => {\n    if (currentPageNumber === 1 && !loading && !manualLoading) getBlocks(currentPageNumber)\n  }, 10 * 1000)\n\n  return (\n    <Section>\n      <TitleAndLoader>\n        <SectionTitle title=\"Blocks\" />\n        {loading && !manualLoading && (\n          <PollingLoadingSpinner>\n            <LoadingSpinner size={12} /> Loading...\n          </PollingLoadingSpinner>\n        )}\n      </TitleAndLoader>\n      {!manualLoading ? (\n        <Content>\n          <Table main scrollable>\n            <TableHeader\n              headerTitles={['', 'Hash', 'Timestamp', 'Height', 'Txn', 'Chain index']}\n              columnWidths={['50px', '20%', '20%', '20%', '20%', '20%']}\n            />\n            <TableBody tdStyles={TableBodyCustomStyles}>\n              {blockList?.blocks.map((b) => (\n                <BlockRow\n                  key={b.hash}\n                  animate={{ opacity: 1 }}\n                  initial={{ opacity: 0 }}\n                  transition={{ duration: 0.8 }}\n                  onClick={() => {\n                    history.push(`blocks/${b.hash}`)\n                  }}\n                >\n                  <td>\n                    <BlockIcon src={blockIcon} alt=\"Block\" />\n                  </td>\n                  <td>\n                    <TightLink to={`blocks/${b.hash}`} text={b.hash} maxWidth=\"150px\" />\n                  </td>\n                  <td>{dayjs().to(b.timestamp)}</td>\n                  <td>{b.height}</td>\n                  <td>{b.txNumber}</td>\n                  <td>\n                    {b.chainFrom} → {b.chainTo}\n                  </td>\n                </BlockRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Content>\n      ) : (\n        <LoadingSpinner />\n      )}\n      <PageSwitch totalNumberOfElements={blockList?.total} />\n    </Section>\n  )\n}\n\nconst TitleAndLoader = styled.div`\n  position: relative;\n`\n\nconst Content = styled.div`\n  margin-top: 30px;\n`\n\nconst PollingLoadingSpinner = styled.div`\n  position: absolute;\n  bottom: -25px;\n  color: ${({ theme }) => theme.textSecondary};\n`\n\nconst TableBodyCustomStyles: TDStyle[] = [\n  {\n    tdPos: 1,\n    style: css`\n      text-align: center;\n      text-align: -webkit-center;\n    `\n  },\n  {\n    tdPos: 4,\n    style: css`\n      font-family: 'Roboto Mono', monospace;\n      color: ${({ theme }) => theme.textAccent};\n      font-weight: 400;\n    `\n  },\n  {\n    tdPos: 4,\n    style: css`\n      font-family: 'Roboto Mono', monospace;\n      font-weight: 400;\n    `\n  },\n  {\n    tdPos: 5,\n    style: css`\n      font-family: 'Roboto Mono', monospace;\n      font-weight: 400;\n    `\n  },\n  {\n    tdPos: 6,\n    style: css`\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n    `\n  }\n]\n\nconst BlockRow = styled(motion.tr)`\n  cursor: pointer;\n`\n\nconst BlockIcon = styled.img`\n  height: 20px;\n  width: 20px;\n`\n\nexport default BlockSection\n","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { FC } from 'react'\nimport styled, { DefaultTheme } from 'styled-components'\nimport { abbreviateAmount } from '../utils/util'\nimport Amount from './Amount'\nimport JSBI from 'jsbi'\n\ntype BadgeType = 'plus' | 'minus' | 'neutral' | 'neutralHighlight'\n\ninterface BadgeProps {\n  type: BadgeType\n  content: JSX.Element | string | JSBI | undefined\n  className?: string\n  amount?: boolean\n  prefix?: string\n  floatRight?: boolean\n}\n\nlet Badge: FC<BadgeProps> = ({ content, className, amount, prefix, floatRight = false }) => {\n  return (\n    <div\n      className={className}\n      data-tip={amount && content ? `${abbreviateAmount(JSBI.BigInt(content), true)} א` : null}\n      style={{ float: floatRight ? 'right' : 'left' }}\n    >\n      {prefix && <span>{prefix}</span>}\n      {amount && content ? <Amount value={JSBI.BigInt(content)} /> : content}\n    </div>\n  )\n}\n\nconst getBadgeColor = (badgeType: BadgeType, theme: DefaultTheme) => {\n  let backgroundColor\n  let color\n\n  switch (badgeType) {\n    case 'plus':\n      backgroundColor = 'rgba(93, 203, 126, 0.12)'\n      color = 'rgba(93, 203, 126, 1)'\n      break\n    case 'minus':\n      backgroundColor = 'rgba(243, 113, 93, 0.1)'\n      color = 'rgba(243, 113, 93, 1)'\n      break\n    case 'neutral':\n      backgroundColor = theme.name === 'dark' ? 'rgba(101, 16, 247, 0.28)' : 'rgba(101, 16, 247, 0.6)'\n      color = theme.name === 'dark' ? 'rgba(255, 255, 255, 0.8)' : 'rgba(255, 255, 255, 1)'\n      break\n    case 'neutralHighlight':\n      backgroundColor = 'rgba(101, 16, 247, 1)'\n      color = 'rgba(255, 255, 255, 1)'\n  }\n\n  return { backgroundColor, color }\n}\n\nBadge = styled(Badge)`\n  background-color: ${({ type, theme }) => getBadgeColor(type, theme).backgroundColor};\n  color: ${({ type, theme }) => getBadgeColor(type, theme).color};\n  text-align: center;\n  padding: 5px 10px;\n  border-radius: 3px;\n  font-weight: 600;\n  float: left;\n  white-space: nowrap;\n`\n\nexport default Badge\n","import { useCallback, useEffect, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\n\nconst useTableDetailsState = (defaultState: boolean) => {\n  const [detailOpen, setDetailOpen] = useState(defaultState)\n\n  const { pathname } = useLocation()\n\n  useEffect(() => {\n    // Close details when location is changing\n    // TODO: Store state in URL? Careful, can become complex when we'll have paging\n    setDetailOpen(false)\n  }, [pathname])\n\n  const toggleDetail = useCallback(() => setDetailOpen(!detailOpen), [detailOpen])\n\n  return { detailOpen, setDetailOpen, toggleDetail }\n}\n\nexport default useTableDetailsState\n","export default __webpack_public_path__ + \"static/media/alephium-not-found.356bba05.svg\";","import React from 'react'\nimport styled from 'styled-components'\nimport logo from '../images/alephium-not-found.svg'\n\nconst InlineErrorMessage = ({ message, code }: { message?: string; code?: number }) => {\n  let shownMessage = ''\n\n  if (!message) {\n    shownMessage = \"Something's wrong\"\n  } else {\n    shownMessage = message\n  }\n\n  return (\n    <ErrorWrapper>\n      <Container>\n        <ErrorLogo />\n        <ErrorMessageContainer>\n          <ErrorCode>{code}</ErrorCode>\n          <ErrorMessage>{shownMessage}</ErrorMessage>\n        </ErrorMessageContainer>\n      </Container>\n    </ErrorWrapper>\n  )\n}\n\nconst ErrorWrapper = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 100px;\n`\n\nconst Container = styled.div`\n  background-color: ${({ theme }) => theme.bgSecondary};\n  border-radius: 14px;\n  padding: 35px 25px;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`\n\nconst ErrorLogo = styled.div`\n  background-image: url(${logo});\n  background-repeat: no-repeat;\n  background-size: contain;\n  background-position: center;\n  min-height: 150px;\n  max-height: 300px;\n  height: 25%;\n  width: 100%;\n  margin-bottom: 25px;\n`\n\nconst ErrorMessageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 0 25px;\n  text-align: center;\n`\n\nconst ErrorCode = styled.span`\n  font-size: 1.5rem;\n  font-weight: 600;\n  margin-bottom: 20px;\n`\n\nconst ErrorMessage = styled.span`\n  max-width: 500px;\n  width: 100%;\n  color: ${({ theme }) => theme.textSecondary};\n  overflow: hidden;\n  text-overflow: ellipsis;\n`\n\nexport default InlineErrorMessage\n","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\n\nimport dayjs from 'dayjs'\nimport React, { FC, useContext, useEffect, useState } from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\nimport styled, { css } from 'styled-components'\nimport { GlobalContext } from '..'\nimport SectionTitle, { SecondaryTitle } from '../components/SectionTitle'\nimport {\n  Table,\n  TableHeader,\n  TDStyle,\n  TableBody,\n  HighlightedCell,\n  AnimatedCell,\n  DetailsRow,\n  Row,\n  DetailToggle\n} from '../components/Table'\nimport { Block, Transaction } from '../types/api'\nimport transactionIcon from '../images/transaction-icon.svg'\nimport { AddressLink, TightLink } from '../components/Links'\nimport { ArrowRight } from 'react-feather'\nimport Badge from '../components/Badge'\nimport { APIResp } from '../utils/client'\nimport Amount from '../components/Amount'\nimport Section from '../components/Section'\nimport useTableDetailsState from '../hooks/useTableDetailsState'\nimport LoadingSpinner from '../components/LoadingSpinner'\nimport InlineErrorMessage from '../components/InlineErrorMessage'\nimport JSBI from 'jsbi'\nimport PageSwitch from '../components/PageSwitch'\nimport usePageNumber from '../hooks/usePageNumber'\n\ninterface ParamTypes {\n  id: string\n}\n\nconst BlockInfoSection = () => {\n  const { id } = useParams<ParamTypes>()\n  const client = useContext(GlobalContext).client\n  const history = useHistory()\n\n  const [blockInfo, setBlockInfo] = useState<APIResp<Block>>()\n  const [txList, setTxList] = useState<APIResp<Transaction[]>>()\n\n  const [infoLoading, setInfoLoading] = useState(true)\n  const [txLoading, setTxLoading] = useState(true)\n\n  const currentPageNumber = usePageNumber()\n\n  // Block info\n  useEffect(() => {\n    if (!client) return\n    setInfoLoading(true)\n\n    client\n      .block(id)\n      .catch((e) => {\n        console.log(e)\n        setInfoLoading(false)\n      })\n      .then((r) => {\n        if (!r) return\n        setBlockInfo(r)\n        setInfoLoading(false)\n      })\n  }, [client, id])\n\n  // Block transactions\n  useEffect(() => {\n    if (!client) return\n\n    setTxLoading(true)\n\n    client\n      .blockTransactions(id, currentPageNumber)\n      .catch((e) => {\n        console.log(e)\n        setTxLoading(false)\n      })\n      .then((r) => {\n        if (!r) return\n        setTxList(r)\n        setTxLoading(false)\n      })\n  }, [client, id, currentPageNumber])\n\n  // If user entered an incorrect url (or did an incorrect search, try to see if a transaction exists with this hash)\n\n  useEffect(() => {\n    if (!client) return\n    ;(async () => {\n      if (blockInfo?.detail) {\n        const res = await client.transaction(id)\n        if (!res?.detail) {\n          // A transaction exists, redirect automatically\n          history.push(`/transactions/${id}`)\n        }\n      }\n    })()\n  }, [blockInfo, id, client, history])\n\n  return (\n    <Section>\n      <SectionTitle title=\"Block\" />\n      {!infoLoading ? (\n        <>\n          {blockInfo && blockInfo.status === 200 && blockInfo.data ? (\n            <>\n              <Table bodyOnly>\n                <TableBody tdStyles={BlockTableBodyCustomStyles}>\n                  <tr>\n                    <td>Hash</td>\n                    <HighlightedCell textToCopy={blockInfo.data.hash}>{blockInfo.data.hash}</HighlightedCell>\n                  </tr>\n                  <tr>\n                    <td>Height</td>\n                    <td>{blockInfo.data.height}</td>\n                  </tr>\n                  <tr>\n                    <td>Chain Index</td>\n                    <td>\n                      {blockInfo.data.chainFrom} → {blockInfo.data.chainTo}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>Nb. of transactions</td>\n                    <td>{blockInfo.data.txNumber}</td>\n                  </tr>\n                  <tr>\n                    <td>Timestamp</td>\n                    <td>{dayjs(blockInfo.data.timestamp).format('MM/DD/YYYY HH:mm:ss')}</td>\n                  </tr>\n                </TableBody>\n              </Table>\n\n              <SecondaryTitle>Transactions</SecondaryTitle>\n              {!txLoading && txList && txList.data && txList.status === 200 ? (\n                <>\n                  <Table main hasDetails scrollable>\n                    <TableHeader\n                      headerTitles={['', 'Hash', 'Inputs', '', 'Outputs', 'Amount', '']}\n                      columnWidths={['35px', '150px', '120px', '50px', '120px', '90px', '30px']}\n                      textAlign={['left', 'left', 'left', 'left', 'left', 'right', 'left']}\n                    />\n                    <TableBody tdStyles={TXTableBodyCustomStyles}>\n                      {txList.data.map((t, i) => (\n                        <TransactionRow transaction={t} key={i} />\n                      ))}\n                    </TableBody>\n                  </Table>\n                </>\n              ) : (\n                <LoadingSpinner />\n              )}\n            </>\n          ) : (\n            <InlineErrorMessage message={blockInfo?.detail} code={blockInfo?.status} />\n          )}\n          {txList && txList.data && blockInfo?.data?.txNumber && (\n            <PageSwitch totalNumberOfElements={blockInfo.data.txNumber} />\n          )}\n        </>\n      ) : (\n        <LoadingSpinner />\n      )}\n    </Section>\n  )\n}\n\ninterface TransactionRowProps {\n  transaction: Transaction\n}\n\nconst TransactionRow: FC<TransactionRowProps> = ({ transaction }) => {\n  const t = transaction\n  const { detailOpen, toggleDetail } = useTableDetailsState(false)\n\n  return (\n    <>\n      <Row key={t.hash} isActive={detailOpen} onClick={toggleDetail}>\n        <td>\n          <TransactionIcon />\n        </td>\n        <td>\n          <TightLink to={`/transactions/${t.hash}`} text={t.hash} maxWidth=\"150px\" />\n        </td>\n        <td>\n          {t.inputs.length} address{t.inputs.length > 1 ? 'es' : ''}\n        </td>\n        <td>\n          <ArrowRight size={15} />\n        </td>\n        <td>\n          {t.outputs.length} address{t.outputs.length > 1 ? 'es' : ''}\n        </td>\n        <td>\n          <Badge\n            type={'neutral'}\n            content={t.outputs.reduce<JSBI>((acc, o) => JSBI.add(acc, JSBI.BigInt(o.amount)), JSBI.BigInt(0))}\n            amount\n            floatRight\n          />\n        </td>\n        <DetailToggle isOpen={detailOpen} onClick={toggleDetail} />\n      </Row>\n      <DetailsRow openCondition={detailOpen}>\n        <td />\n        <td />\n        <AnimatedCell>\n          {t.inputs.map((input, i) => (\n            <AddressLink key={i} address={input.address} txHashRef={input.txHashRef} maxWidth=\"180px\" />\n          ))}\n        </AnimatedCell>\n        <td />\n        <AnimatedCell>\n          {t.outputs.map((o, i) => (\n            <AddressLink address={o.address} key={i} maxWidth=\"180px\" />\n          ))}\n        </AnimatedCell>\n        <AnimatedCell alignItems=\"right\">\n          {t.outputs.map((o, i) => (\n            <Amount value={JSBI.BigInt(o.amount)} key={i} />\n          ))}\n        </AnimatedCell>\n        <td />\n      </DetailsRow>\n    </>\n  )\n}\n\n// TODO: make expandlable elements generic (in Table.tsx)\n\nconst TransactionIcon = styled.div`\n  background-image: url(${transactionIcon});\n  background-position: center;\n  background-repeat: no-repeat;\n  height: 20px;\n  width: 20px;\n`\n\nconst BlockTableBodyCustomStyles: TDStyle[] = [\n  {\n    tdPos: 2,\n    style: css`\n      font-weight: 600;\n    `\n  }\n]\n\nconst TXTableBodyCustomStyles: TDStyle[] = [\n  {\n    tdPos: 1,\n    style: css`\n      text-align: center;\n      text-align: -webkit-center;\n    `\n  },\n  {\n    tdPos: 3,\n    style: css`\n      color: ${({ theme }) => theme.textAccent};\n    `\n  },\n  {\n    tdPos: 4,\n    style: css`\n      text-align: center;\n      color: ${({ theme }) => theme.textSecondary};\n    `\n  },\n  {\n    tdPos: 5,\n    style: css`\n      color: ${({ theme }) => theme.textAccent};\n    `\n  }\n]\n\nexport default BlockInfoSection\n","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\n\nimport dayjs from 'dayjs'\nimport React, { useCallback, useContext, useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { GlobalContext } from '..'\nimport SectionTitle from '../components/SectionTitle'\nimport { Transaction } from '../types/api'\nimport { APIResp } from '../utils/client'\nimport Badge from '../components/Badge'\nimport { Table, TableBody, HighlightedCell } from '../components/Table'\nimport { AddressLink, TightLink } from '../components/Links'\nimport Section from '../components/Section'\nimport LoadingSpinner from '../components/LoadingSpinner'\nimport InlineErrorMessage from '../components/InlineErrorMessage'\nimport JSBI from 'jsbi'\nimport Amount from '../components/Amount'\nimport { Check } from 'react-feather'\nimport { useInterval } from '../utils/util'\n\ninterface ParamTypes {\n  id: string\n}\n\nconst TransactionInfoSection = () => {\n  const { id } = useParams<ParamTypes>()\n  const client = useContext(GlobalContext).client\n  const [txInfo, setTxInfo] = useState<APIResp<Transaction>>()\n  const [loading, setLoading] = useState(true)\n\n  const getTxInfo = useCallback(async () => {\n    if (!client) return\n    setLoading(true)\n\n    client\n      .transaction(id)\n      .catch((e) => {\n        console.log(e)\n        setLoading(false)\n      })\n      .then((r) => {\n        if (!r) return\n\n        setTxInfo(r)\n        setLoading(false)\n      })\n  }, [client, id])\n\n  // Initial fetch\n  useEffect(() => {\n    getTxInfo()\n  }, [getTxInfo])\n\n  // Polling when TX is unconfirmed\n  useInterval(() => {\n    if (txInfo && txInfo.data && txInfo.data.type === 'unconfirmed') getTxInfo()\n  }, 15 * 1000)\n\n  return (\n    <Section>\n      <SectionTitle title=\"Transaction\" />\n      {!loading ? (\n        <>\n          {txInfo && txInfo.status === 200 && txInfo.data ? (\n            <Table bodyOnly>\n              <TableBody>\n                <tr>\n                  <td>Hash</td>\n                  <HighlightedCell textToCopy={txInfo.data.hash}>{txInfo.data.hash}</HighlightedCell>\n                </tr>\n                <tr>\n                  <td>Status</td>\n                  {txInfo.data.type === 'confirmed' ? (\n                    <td>\n                      <Badge\n                        type=\"plus\"\n                        content={\n                          <span>\n                            <Check style={{ marginRight: 5 }} size={15} />\n                            Confirmed\n                          </span>\n                        }\n                      />\n                    </td>\n                  ) : (\n                    <td>\n                      <Badge\n                        type=\"neutral\"\n                        content={\n                          <>\n                            <LoadingSpinner style={{ marginRight: 5 }} size={15} />\n                            <span>Unconfirmed</span>\n                          </>\n                        }\n                      />\n                    </td>\n                  )}\n                </tr>\n                {txInfo.data.blockHash && (\n                  <tr>\n                    <td>Block Hash</td>\n                    <td>\n                      <TightLink\n                        to={`../blocks/${txInfo.data.blockHash || ''}`}\n                        text={txInfo.data.blockHash || ''}\n                        maxWidth=\"550px\"\n                      />\n                    </td>\n                  </tr>\n                )}\n                {txInfo.data.timestamp && (\n                  <tr>\n                    <td>Timestamp</td>\n                    <td>{dayjs(txInfo.data.timestamp).format('MM/DD/YYYY HH:mm:ss')}</td>\n                  </tr>\n                )}\n                {txInfo.data.type === 'confirmed' && (\n                  <tr>\n                    <td>Inputs</td>\n                    <td>\n                      {txInfo.data.inputs && txInfo.data.inputs.length > 0\n                        ? txInfo.data.inputs.map((v, i) => (\n                            <AddressLink\n                              address={v.address}\n                              txHashRef={v.txHashRef}\n                              key={i}\n                              amount={JSBI.BigInt(v.amount)}\n                            />\n                          ))\n                        : 'Block Rewards'}\n                    </td>\n                  </tr>\n                )}\n                <tr>\n                  <td>Outputs</td>\n                  <td>\n                    {txInfo.data.outputs.map((v, i) => (\n                      <AddressLink address={v.address} key={i} amount={JSBI.BigInt(v.amount)} txHashRef={v.spent} />\n                    ))}\n                  </td>\n                </tr>\n                <tr>\n                  <td>Gas Amount</td>\n                  <td>{txInfo.data.gasAmount || '-'} GAS</td>\n                </tr>\n                <tr>\n                  <td>Gas Price</td>\n                  <td>\n                    <Amount value={JSBI.BigInt(txInfo.data.gasPrice)} />\n                  </td>\n                </tr>\n                <tr>\n                  <td>Transaction Fee</td>\n                  <td>\n                    <Amount\n                      value={JSBI.multiply(JSBI.BigInt(txInfo.data.gasPrice), JSBI.BigInt(txInfo.data.gasAmount))}\n                    />\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <b>Total value</b>\n                  </td>\n                  <td>\n                    <Badge\n                      type=\"neutralHighlight\"\n                      content={txInfo.data.outputs.reduce<JSBI>(\n                        (acc, o) => JSBI.add(acc, JSBI.BigInt(o.amount)),\n                        JSBI.BigInt(0)\n                      )}\n                      amount\n                    />\n                  </td>\n                </tr>\n              </TableBody>\n            </Table>\n          ) : (\n            <InlineErrorMessage message={txInfo?.detail} code={txInfo?.status} />\n          )}\n        </>\n      ) : (\n        <LoadingSpinner />\n      )}\n    </Section>\n  )\n}\n\nexport default TransactionInfoSection\n","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { FC, useContext, useEffect, useRef, useState } from 'react'\nimport dayjs from 'dayjs'\nimport relativeTime from 'dayjs/plugin/relativeTime'\nimport { useParams } from 'react-router-dom'\nimport { GlobalContext } from '..'\nimport SectionTitle, { SecondaryTitle } from '../components/SectionTitle'\nimport { Address, Transaction } from '../types/api'\nimport { APIResp } from '../utils/client'\nimport { calAmountDelta } from '../utils/util'\nimport Badge from '../components/Badge'\nimport {\n  Table,\n  TableBody,\n  HighlightedCell,\n  TableHeader,\n  AnimatedCell,\n  DetailsRow,\n  Row,\n  DetailToggle,\n  TDStyle\n} from '../components/Table'\nimport { AddressLink, TightLink } from '../components/Links'\nimport { ArrowRight } from 'react-feather'\nimport Section from '../components/Section'\nimport styled, { css } from 'styled-components'\nimport _ from 'lodash'\nimport useTableDetailsState from '../hooks/useTableDetailsState'\nimport LoadingSpinner from '../components/LoadingSpinner'\nimport InlineErrorMessage from '../components/InlineErrorMessage'\nimport JSBI from 'jsbi'\nimport usePageNumber from '../hooks/usePageNumber'\nimport PageSwitch from '../components/PageSwitch'\n\ndayjs.extend(relativeTime)\n\ninterface ParamTypes {\n  id: string\n}\n\nconst TransactionInfoSection = () => {\n  const { id } = useParams<ParamTypes>()\n  const client = useContext(GlobalContext).client\n  const [addressInfo, setAddressInfo] = useState<APIResp<Address>>()\n  const [txList, setTxList] = useState<APIResp<Transaction[]>>()\n\n  const [infoLoading, setInfoLoading] = useState(true)\n  const [txLoading, setTxLoading] = useState(true)\n  const previousId = useRef(id)\n\n  // Default page\n  const pageNumber = usePageNumber()\n\n  // Address info\n  useEffect(() => {\n    if (!client) return\n\n    previousId.current = id\n\n    setInfoLoading(true)\n\n    client\n      .address(id)\n      .catch((e) => {\n        console.log(e)\n        setInfoLoading(false)\n      })\n      .then((r) => {\n        if (!r) return\n        setAddressInfo(r)\n        setInfoLoading(false)\n      })\n  }, [client, id])\n\n  // Address transactions\n  useEffect(() => {\n    if (!client) return\n\n    setTxLoading(true)\n\n    client\n      .addressTransactions(id, pageNumber)\n      .catch((e) => {\n        console.log(e)\n        setTxLoading(false)\n      })\n      .then((r) => {\n        if (!r) return\n        setTxList(r)\n        setTxLoading(false)\n      })\n  }, [client, id, pageNumber])\n\n  return (\n    <Section>\n      <SectionTitle title=\"Address\" />\n      {!infoLoading && previousId.current === id ? (\n        <>\n          {addressInfo && addressInfo.status === 200 && addressInfo.data ? (\n            <>\n              <Table bodyOnly>\n                <TableBody tdStyles={AddressTableBodyCustomStyles}>\n                  <tr>\n                    <td>Address</td>\n                    <HighlightedCell textToCopy={id}>{id}</HighlightedCell>\n                  </tr>\n                  <tr>\n                    <td>Number of Transactions</td>\n                    <td>{addressInfo.data.txNumber}</td>\n                  </tr>\n                  <tr>\n                    <td>Balance</td>\n                    <td>\n                      <Badge type={'neutralHighlight'} content={addressInfo.data.balance.toString()} amount />\n                    </td>\n                  </tr>\n                </TableBody>\n              </Table>\n\n              <SecondaryTitle>History</SecondaryTitle>\n              {!txLoading && txList && txList.data && txList.status === 200 ? (\n                <>\n                  {txList.data.length > 0 ? (\n                    <Table hasDetails main scrollable>\n                      <TableHeader\n                        headerTitles={['Hash', 'Timestamp', '', 'Account(s)', 'Amount', '']}\n                        columnWidths={['15%', '100px', '80px', '25%', '120px', '30px']}\n                        textAlign={['left', 'left', 'left', 'left', 'right', 'left']}\n                      />\n                      <TableBody>\n                        {txList.data\n                          .sort((t1, t2) => (t2.timestamp && t1.timestamp ? t2.timestamp - t1.timestamp : 1))\n                          .map((t, i) => (\n                            <AddressTransactionRow transaction={t} addressId={id} key={i} />\n                          ))}\n                      </TableBody>\n                    </Table>\n                  ) : (\n                    <NoTxMessage>No transactions yet</NoTxMessage>\n                  )}\n                </>\n              ) : (\n                <LoadingSpinner />\n              )}\n            </>\n          ) : (\n            <InlineErrorMessage message={addressInfo?.detail} code={addressInfo?.status} />\n          )}\n          {txList && txList.data && <PageSwitch totalNumberOfElements={addressInfo?.data?.txNumber} />}\n        </>\n      ) : (\n        <LoadingSpinner />\n      )}\n    </Section>\n  )\n}\n\ninterface AddressTransactionRowProps {\n  transaction: Transaction\n  addressId: string\n}\n\nconst AddressTransactionRow: FC<AddressTransactionRowProps> = ({ transaction, addressId }) => {\n  const t = transaction\n  const { detailOpen, toggleDetail } = useTableDetailsState(false)\n\n  const amountDelta = calAmountDelta(t, addressId)\n  const isOut = JSBI.lessThan(amountDelta, JSBI.BigInt(0))\n\n  const renderOutputAccounts = () => {\n    // Check for auto-sent tx\n    if (t.outputs.every((o) => o.address === addressId)) {\n      return <AddressLink key={addressId} address={addressId} maxWidth=\"250px\" />\n    } else {\n      return _(t.outputs.filter((o) => o.address !== addressId))\n        .map((v) => v.address)\n        .uniq()\n        .value()\n        .map((v, i) => <AddressLink key={i} address={v} maxWidth=\"250px\" />)\n    }\n  }\n\n  const renderInputAccounts = () => {\n    const inputAccounts = _(t.inputs.filter((o) => o.address !== addressId))\n      .map((v) => v.address)\n      .uniq()\n      .value()\n      .map((v, i) => <AddressLink key={i} address={v} maxWidth=\"250px\" />)\n\n    if (inputAccounts.length > 0) {\n      return inputAccounts\n    } else {\n      return <BlockRewardLabel>Block rewards</BlockRewardLabel>\n    }\n  }\n\n  return (\n    <>\n      <Row key={t.hash} isActive={detailOpen} onClick={toggleDetail}>\n        <td>\n          <TightLink to={`/transactions/${t.hash}`} text={t.hash} maxWidth=\"120px\" />\n        </td>\n        <td>{(t.timestamp && dayjs().to(t.timestamp)) || '-'}</td>\n        <td>\n          <Badge type={isOut ? 'minus' : 'plus'} content={isOut ? 'To' : 'From'} />\n        </td>\n        <td>{isOut ? renderOutputAccounts() : renderInputAccounts()}</td>\n        <td>\n          <Badge\n            type={isOut ? 'minus' : 'plus'}\n            amount\n            prefix={isOut ? '- ' : '+ '}\n            floatRight\n            content={\n              JSBI.lessThan(amountDelta, JSBI.BigInt(0))\n                ? JSBI.multiply(amountDelta, JSBI.BigInt(-1)).toString()\n                : amountDelta.toString()\n            }\n          />\n        </td>\n        <DetailToggle isOpen={detailOpen} onClick={toggleDetail} />\n      </Row>\n      <DetailsRow openCondition={detailOpen}>\n        <td />\n        <td />\n        <AnimatedCell colSpan={4}>\n          <Table noBorder>\n            <TableHeader headerTitles={['Inputs', '', 'Outputs']} columnWidths={['', '50px', '']} compact transparent />\n            <TableBody>\n              <Row>\n                <td>\n                  {t.inputs.length > 0 ? (\n                    t.inputs.map((input, i) => (\n                      <AddressLink\n                        key={i}\n                        address={input.address}\n                        txHashRef={input.txHashRef}\n                        amount={JSBI.BigInt(input.amount)}\n                        maxWidth=\"180px\"\n                      />\n                    ))\n                  ) : (\n                    <BlockRewardLabel>Block rewards</BlockRewardLabel>\n                  )}\n                </td>\n                <td style={{ textAlign: 'center' }}>\n                  <ArrowRight size={12} />\n                </td>\n                <td>\n                  {t.outputs.map((output, i) => (\n                    <AddressLink\n                      key={i}\n                      address={output.address}\n                      amount={JSBI.BigInt(output.amount)}\n                      maxWidth=\"180px\"\n                    />\n                  ))}\n                </td>\n              </Row>\n            </TableBody>\n          </Table>\n        </AnimatedCell>\n      </DetailsRow>\n    </>\n  )\n}\n\nconst AddressTableBodyCustomStyles: TDStyle[] = [\n  {\n    tdPos: 2,\n    style: css`\n      font-weight: 500;\n    `\n  }\n]\n\nconst BlockRewardLabel = styled.span`\n  color: ${({ theme }) => theme.textSecondary};\n  font-style: italic;\n`\n\nconst NoTxMessage = styled.span`\n  color: ${({ theme }) => theme.textSecondary};\n`\n\nexport default TransactionInfoSection\n","export default __webpack_public_path__ + \"static/media/alephium-logo-gradient-stroke.be7cb67e.svg\";","import React from 'react'\nimport styled from 'styled-components'\nimport logo from '../images/alephium-logo-gradient-stroke.svg'\n\nconst ComingSoon = ({ text }: { text: string }) => {\n  return (\n    <ComingSoonWrapper>\n      <ComingSoonLogo />\n      <ComingSoonText>{text}</ComingSoonText>\n    </ComingSoonWrapper>\n  )\n}\n\nconst ComingSoonWrapper = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 100px;\n`\n\nconst ComingSoonLogo = styled.div`\n  background-image: url(${logo});\n  background-repeat: no-repeat;\n  background-size: contain;\n  background-position: center;\n  min-height: 150px;\n  max-height: 300px;\n  height: 25%;\n  width: 100%;\n  margin-bottom: 25px;\n`\n\nconst ComingSoonText = styled.p`\n  text-align: center;\n`\n\nexport default ComingSoon\n","import React from 'react'\nimport Section from '../components/Section'\nimport ComingSoon from '../components/ComingSoon'\nimport styled from 'styled-components'\n\nconst AddressesSection = () => {\n  return (\n    <StyledSection>\n      <ComingSoon text=\"Coming soon.\" />\n    </StyledSection>\n  )\n}\n\nconst StyledSection = styled(Section)`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n`\n\nexport default AddressesSection\n","import React from 'react'\nimport styled from 'styled-components'\nimport ComingSoon from '../components/ComingSoon'\nimport Section from '../components/Section'\n\nconst TransactionsSection = () => {\n  return (\n    <StyledSection>\n      <ComingSoon text=\"Coming soon.\" />\n    </StyledSection>\n  )\n}\n\nconst StyledSection = styled(Section)`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n`\n\nexport default TransactionsSection\n","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState, useEffect, useRef, useCallback } from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { HashRouter as Router, Redirect, Route } from 'react-router-dom'\nimport styled, { ThemeProvider } from 'styled-components'\nimport { darkTheme, lightTheme, ThemeType } from './style/themes'\nimport GlobalStyle, { deviceBreakPoints } from './style/globalStyles'\nimport * as serviceWorker from './serviceWorker'\n\nimport { StyledThemeSwitcher } from './components/ThemeSwitcher'\nimport Sidebar, { SidebarState } from './components/Sidebar'\nimport SearchBar from './components/SearchBar'\nimport BlockSection from './sections/BlockSection'\nimport { createClient, isElectron, ScrollToTop } from './utils/util'\nimport { AlephClient } from './utils/client'\nimport BlockInfoSection from './sections/BlockInfoSection'\nimport TransactionInfoSection from './sections/TransactionInfoSection'\nimport AddressInfoSection from './sections/AddressInfoSection'\nimport AddressesSection from './sections/AdressesSection'\nimport TransactionsSection from './sections/TransactionsSection'\nimport { AnimatePresence, motion } from 'framer-motion'\nimport dayjs from 'dayjs'\nimport updateLocale from 'dayjs/plugin/updateLocale'\nimport { Menu } from 'react-feather'\nimport { ArrowLeft } from 'react-feather'\nimport { useHistory } from 'react-router-dom'\n\ninterface GlobalContext {\n  client: AlephClient | undefined\n  currentTheme: ThemeType\n  sidebarState: 'open' | 'close'\n  setSidebarState: (state: SidebarState) => void\n  switchTheme: (arg0: ThemeType) => void\n  setSnackbarMessage: (message: SnackbarMessage) => void\n}\n\nexport const GlobalContext = React.createContext<GlobalContext>({\n  client: undefined,\n  currentTheme: 'dark',\n  sidebarState: 'open',\n  setSidebarState: () => null,\n  switchTheme: () => null,\n  setSnackbarMessage: () => null\n})\n\ninterface SnackbarMessage {\n  text: string\n  type: 'info' | 'alert' | 'success'\n  duration?: number\n}\n\n/* Customize data format accross the app */\ndayjs.extend(updateLocale)\n\ndayjs.updateLocale('en', {\n  relativeTime: {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few secs',\n    m: 'a min',\n    mm: '%d mins',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years'\n  }\n})\n\nconst App = () => {\n  const [theme, setTheme] = useStateWithLocalStorage<ThemeType>('theme', 'light')\n  const [client, setClient] = useState<AlephClient>()\n  const [snackbarMessage, setSnackbarMessage] = useState<SnackbarMessage | undefined>()\n  const [sidebarState, setSidebarState] = useState<SidebarState>('close')\n\n  const contentRef = useRef(null)\n\n  const getContentRef = useCallback(() => contentRef.current, [])\n  const history = useHistory()\n\n  useEffect(() => {\n    let url: string | null | undefined = process.env.REACT_APP_BACKEND_URL\n\n    if (!url) {\n      if (window.location.hostname === 'localhost') {\n        url = 'http://localhost:9090'\n      } else {\n        const xs = window.location.hostname.split('.')\n        if (xs.length === 3 && xs[1] === 'alephium' && xs[2] === 'org') {\n          url = `${window.location.protocol}//${xs[0]}-backend.${xs[1]}.${xs[2]}`\n        } else {\n          url = `${window.location.protocol}//${window.location.host}`\n        }\n      }\n    }\n\n    setClient(createClient(url))\n  }, [])\n\n  // Remove snackbar popup\n  useEffect(() => {\n    if (snackbarMessage) {\n      setTimeout(() => setSnackbarMessage(undefined), snackbarMessage.duration || 3000)\n    }\n  }, [snackbarMessage])\n\n  return (\n    <Router>\n      <ThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\n        <GlobalStyle />\n        <GlobalContext.Provider\n          value={{\n            client,\n            currentTheme: theme as ThemeType,\n            switchTheme: setTheme as (arg0: ThemeType) => void,\n            sidebarState: 'close',\n            setSidebarState: setSidebarState,\n            setSnackbarMessage\n          }}\n        >\n          <MainContainer>\n            <Sidebar sidebarState={sidebarState} />\n            <ContentContainer>\n              <ContentWrapper ref={contentRef}>\n                <ScrollToTop getScrollContainer={getContentRef} />\n                <Header>\n                  <HamburgerButton onClick={() => setSidebarState('open')}>\n                    <Menu />\n                  </HamburgerButton>\n                  {isElectron() && (\n                    <nav>\n                      <BackButton size={20} onClick={() => history.goBack()} color={'black'} />\n                    </nav>\n                  )}\n                  <SearchBar />\n                </Header>\n                <Content>\n                  <Route exact path=\"/\">\n                    <Redirect to=\"/blocks\" />\n                  </Route>\n                  <Route exact path=\"/blocks\">\n                    <BlockSection />\n                  </Route>\n                  <Route path=\"/blocks/:id\">\n                    <BlockInfoSection />\n                  </Route>\n                  <Route exact path=\"/addresses\">\n                    <AddressesSection />\n                  </Route>\n                  <Route path=\"/addresses/:id\">\n                    <AddressInfoSection />\n                  </Route>\n                  <Route exact path=\"/transactions\">\n                    <TransactionsSection />\n                  </Route>\n                  <Route path=\"/transactions/:id\">\n                    <TransactionInfoSection />\n                  </Route>\n                </Content>\n              </ContentWrapper>\n            </ContentContainer>\n            <SnackbarManager message={snackbarMessage} />\n          </MainContainer>\n        </GlobalContext.Provider>\n      </ThemeProvider>\n    </Router>\n  )\n}\n\nconst SnackbarManager = ({ message }: { message: SnackbarMessage | undefined }) => {\n  return (\n    <SnackbarManagerContainer>\n      <AnimatePresence>\n        {message && (\n          <SnackbarPopup\n            initial={{ y: 10, opacity: 0 }}\n            animate={{ y: 0, opacity: 1 }}\n            exit={{ opacity: 0 }}\n            className={message?.type}\n          >\n            {message?.text}\n          </SnackbarPopup>\n        )}\n      </AnimatePresence>\n    </SnackbarManagerContainer>\n  )\n}\n\n/* Custom hooks */\n// Local storage hook\n\nfunction useStateWithLocalStorage<T>(localStorageKey: string, defaultValue: T) {\n  const [value, setValue] = React.useState(localStorage.getItem(localStorageKey) || defaultValue)\n\n  React.useEffect(() => {\n    localStorage.setItem(localStorageKey, value as string)\n  }, [localStorageKey, value])\n\n  return [value, setValue]\n}\n\n/* Styles */\n\nconst MainContainer = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  display: flex;\n  overflow: hidden;\n`\n\nconst ContentContainer = styled.div`\n  flex: 1;\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  overflow-y: auto;\n  overflow-x: hidden;\n`\n\nconst ContentWrapper = styled.main`\n  min-height: 100%;\n  flex: 1 1 1200px;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  max-width: 1400px;\n\n  @media ${deviceBreakPoints.mobile} {\n    width: 100%;\n    justify-self: flex-start;\n  }\n`\n\nconst Content = styled.div`\n  flex: 1;\n  display: flex;\n  padding: 0 min(5vw, 50px);\n  margin-top: 20px;\n  margin-bottom: 40px;\n`\n\nconst Header = styled.header`\n  display: flex;\n  align-items: center;\n  margin: 25px 40px;\n  z-index: 1;\n\n  @media ${deviceBreakPoints.mobile} {\n    margin: 10px;\n  }\n\n  ${StyledThemeSwitcher} {\n    @media ${deviceBreakPoints.mobile} {\n      display: none;\n    }\n  }\n`\n\nconst HamburgerButton = styled.div`\n  width: 35px;\n  height: 35px;\n  display: none;\n  margin-right: 15px;\n\n  @media ${deviceBreakPoints.tablet} {\n    display: flex;\n    cursor: pointer;\n    align-items: center;\n    justify-content: center;\n  }\n\n  @media ${deviceBreakPoints.mobile} {\n    margin-right: 5px;\n  }\n`\n\nconst BackButton = styled(ArrowLeft)`\n  cursor: pointer;\n  margin-right: 25px;\n  margin-top: 2px;\n`\n\nconst SnackbarManagerContainer = styled.div`\n  position: fixed;\n  bottom: 0;\n  right: 0;\n  left: 0;\n  display: flex;\n  z-index: 10001;\n`\n\nconst SnackbarPopup = styled(motion.div)`\n  bottom: 10px;\n  left: 25px;\n  margin: 10px auto;\n  text-align: center;\n  min-width: 150px;\n  max-width: 50vw;\n  padding: 20px;\n  color: white;\n  border-radius: 14px;\n  z-index: 1000;\n\n  &.alert {\n    background-color: rgb(219, 99, 69);\n  }\n\n  &.info {\n    background-color: black;\n  }\n\n  &.success {\n    background-color: rgb(56, 168, 93);\n  }\n`\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n)\n\n//\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}