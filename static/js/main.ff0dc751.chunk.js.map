{"version":3,"sources":["style/themes.ts","style/globalStyles.ts","serviceWorker.js","components/ThemeSwitcher.tsx","images/explorer-logo-light.svg","images/explorer-logo-dark.svg","images/block-icon.svg","images/address-icon.svg","images/transaction-icon.svg","components/Menu.tsx","webpack:///./src/images/alephium-logo-gradient-stroke.svg?248f","components/Sidebar.tsx","hooks/useWindowSize.ts","components/SearchBar.tsx","utils/strings.ts","components/SectionTitle.tsx","components/LoadingSpinner.tsx","components/Tooltip.tsx","components/Section.tsx","components/Buttons/ClipboardButton.tsx","components/Buttons/QRCodeButton.tsx","components/Table.tsx","utils/amounts.ts","components/Amount.tsx","components/Links.tsx","hooks/useQueryParams.ts","components/Buttons/TextButton.tsx","components/PageSwitch.tsx","hooks/usePageNumber.ts","utils/hooks.ts","sections/BlockSection.tsx","utils/client.ts","components/Badge.tsx","hooks/useTableDetailsState.ts","images/alephium-not-found.svg","components/InlineErrorMessage.tsx","sections/BlockInfoSection.tsx","sections/TransactionInfoSection.tsx","sections/AddressInfoSection.tsx","images/alephium-logo-gradient-stroke.svg","components/ComingSoon.tsx","sections/AdressesSection.tsx","sections/TransactionsSection.tsx","utils/routing.ts","index.tsx","utils/misc.ts"],"names":["darkTheme","name","body","textPrimary","textSecondary","textAccent","link","linkHighlight","bgPrimary","bgSecondary","bgHighlight","bgHover","borderPrimary","borderSecondary","borderHighlight","tooltip","lightTheme","GlobalStyle","createGlobalStyle","normalize","theme","deviceSizes","deviceBreakPoints","mobile","tablet","desktop","Boolean","window","location","hostname","match","getButtonColor","buttonTheme","toggleVariants","light","left","backgroundColor","dark","toggleWidth","StyledThemeSwitcher","styled","div","ToggleContent","ToggleIcon","ToggleFloatingIndicator","motion","ThemeSwitcher","className","useContext","GlobalContext","currentTheme","switchTheme","onClick","color","size","variants","animate","transition","duration","type","MenuContainer","MenuCurrentContent","Label","span","IconContainer","MenuItemsContainer","MenuItemsList","ItemIcon","MenuItem","ItemText","Divider","Menu","label","icon","items","direction","useState","visible","setVisible","directionSign","onMouseEnter","onMouseLeave","id","onBlur","tabIndex","AnimatePresence","initial","y","opacity","exit","style","marginBottom","marginTop","map","item","i","text","length","_excluded","_extends","Object","assign","target","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgAlephiumLogoGradientStroke","_ref","svgRef","title","titleId","props","width","height","viewBox","xmlns","xmlnsXlink","xmlSpace","fillRule","clipRule","strokeLinejoin","strokeMiterlimit","ref","x","fill","d","stroke","strokeWidth","x1","y1","x2","y2","gradientUnits","gradientTransform","offset","stopColor","stopOpacity","ForwardRef","Logo","img","CloseButton","Backdrop","SidebarContainer","open","Header","header","Tabs","Tab","NavLink","TabIcon","NetworkMenu","AlephiumLogoMainnet","AlephiumLogo","AlephiumLogoTestnet","Sidebar","sidebarState","useTheme","windowWidth","undefined","windowSize","setWindowSize","useEffect","handleResize","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","lastWindowWidth","useRef","setSidebarState","networkType","current","to","alt","src","logoLight","logoDark","blockIcon","addressIcon","transactionIcon","Container","SearchIcon","Search","SearchInput","input","SearchBar","active","setActive","search","setSearch","setSnackbarMessage","inputRef","history","useHistory","handleRemoveFocus","redirect","blur","push","searching","str","word","trim","test","slice","onChange","e","value","onKeyDown","placeholder","TitleWrapper","Title","h1","Surtitle","h2","Subtitle","SecondaryTitle","SectionTitle","surtitle","subtitle","Spinner","Loader","LoadingSpinner","Tooltip","rebuildTooltips","ReactTooltip","rebuild","SectionContext","createContext","section","Section","children","Provider","StyledClipboardIcon","Clipboard","StyledCheckIcon","Check","ClipboardButton","textToCopy","hasBeenCopied","setHasBeenCopied","setInterval","navigator","clipboard","writeText","catch","then","QrCode","QRCodeButton","textToEncode","globalEventOff","bgColor","fgColor","Table","TableWrapper","StyledTable","TableHeader","headerTitles","columnWidths","textAlign","compact","transparent","StyledTableHeader","v","Row","tr","isActive","OpenConditionContext","DetailsRow","openCondition","AnimatedCell","colSpan","alignItems","condition","AnimatedCellContainer","closed","rotate","DetailToggle","isOpen","padding","overflow","DetailToggleWrapper","HighlightedCell","qrCodeContent","StyledHighlightedCell","noBorder","table","scrollable","bodyOnly","css","hasDetails","thead","TableBody","tbody","tdStyles","s","tdPos","td","MONEY_SYMBOL","QUINTILLION","removeTrailingZeros","numString","numberArray","split","numberOfZeros","getNumberOfTrailingZeros","numberArrayWithoutTrailingZeros","join","replace","abbreviateAmount","baseNum","showFullPrecision","nbOfDecimalsToShow","minDigits","JSBI","lessThanOrEqual","BigInt","alephNum","Number","tier","Math","log10","numberOfDigitsToDisplay","toFixed","toString","suffix","scale","pow","scaled","Amount","TightLink","maxWidth","display","StyledLink","stopPropagation","AddressLink","address","txHashRef","amount","AddressWrapper","OutputValue","TxLink","Link","useQueryParams","paramNames","useLocation","params","URLSearchParams","get","forEach","p","StyledTextButton","button","disabled","TextButton","SwitchContainer","PageNumbers","TotalNumberOfPages","PageSwitch","elementsPerPage","totalNumberOfElements","numberOfElementsLoaded","currentPage","parseInt","locationSearch","useMemo","handlePageSwitch","setPageNumber","useCallback","pageNumber","set","totalNumberOfPages","ceil","isNaN","usePageNumber","pageParam","delete","useInterval","callback","delay","shouldPause","savedCallback","clearInterval","dayjs","extend","relativeTime","TitleAndLoader","Content","PollingLoadingSpinner","TableBodyCustomStyles","BlockRow","BlockIcon","BlockSection","blockList","setBlockList","loading","setLoading","manualLoading","setManualLoading","client","currentPageNumber","getBlocks","manualFetch","a","console","log","blocks","fetchedBlocks","data","main","b","hash","timestamp","txNumber","chainFrom","chainTo","total","AlephClient","url","fetchAPI","path","fetch","resp","Promise","resolve","reject","ok","json","r","status","detail","resource","page","Badge","content","prefix","floatRight","float","getBadgeColor","badgeType","useTableDetailsState","defaultState","detailOpen","setDetailOpen","pathname","toggleDetail","ErrorWrapper","ErrorLogo","logo","ErrorMessageContainer","ErrorCode","ErrorMessage","InlineErrorMessage","message","code","shownMessage","TransactionRow","t","transaction","TransactionIcon","inputs","outputs","reduce","acc","o","add","BlockTableBodyCustomStyles","TXTableBodyCustomStyles","BlockInfoSection","useParams","blockInfo","setBlockInfo","txList","setTxList","infoLoading","setInfoLoading","txLoading","setTxLoading","block","blockTransactions","res","format","TransactionInfoSection","txInfo","setTxInfo","getTxInfo","marginRight","blockHash","spent","gasAmount","gasPrice","multiply","AddressTransactionRow","addressId","amountDelta","inputAmount","outputAmount","output","subtract","calAmountDelta","isOut","lessThan","every","_","filter","uniq","inputAccounts","BlockRewardLabel","renderInputAccounts","AddressTableBodyCustomStyles","NoTxMessage","addressInfo","setAddressInfo","previousId","addressTransactions","balance","sort","t1","t2","ComingSoonWrapper","ComingSoonLogo","ComingSoonText","ComingSoon","StyledSection","AddressesSection","TransactionsSection","ScrollToTop","getScrollContainer","scrollTo","networkTypes","React","updateLocale","future","past","m","mm","h","hh","dd","M","MM","yy","App","localStorageKey","defaultValue","localStorage","getItem","setValue","setItem","useStateWithLocalStorage","themeName","setThemeName","setClient","setNetworkType","snackbarMessage","contentRef","getContentRef","process","REACT_APP_BACKEND_URL","REACT_APP_NETWORK_TYPE","Error","includes","createClient","setTimeout","MainContainer","ContentContainer","ContentWrapper","HamburgerButton","userAgent","toLowerCase","BackButton","goBack","exact","AddressInfoSection","SnackbarManager","SnackbarManagerContainer","SnackbarPopup","ArrowLeft","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.ff0dc751.chunk.js","sourcesContent":["import { DefaultTheme } from 'styled-components'\n\nexport type ThemeType = 'light' | 'dark'\n\nexport const darkTheme: DefaultTheme = {\n  name: 'dark',\n  body: '#212126',\n\n  textPrimary: 'rgba(255, 255, 255, 0.8)',\n  textSecondary: 'rgba(255, 255, 255, 0.35)',\n  textAccent: '#FFD036',\n\n  link: '#53A9F5',\n  linkHighlight: '#0E82E7',\n\n  bgPrimary: '#212126',\n  bgSecondary: '#18191C',\n  bgHighlight: 'rgba(0, 0, 0, 0.1)',\n  bgHover: 'rgba(0, 0, 0, 0.05)',\n\n  borderPrimary: '#34353A',\n  borderSecondary: '#27282d',\n  borderHighlight: '#585962',\n\n  tooltip: 'black'\n}\n\nexport const lightTheme: DefaultTheme = {\n  name: 'light',\n  body: 'white',\n\n  textPrimary: 'rgba(15, 15, 15, 0.95)',\n  textSecondary: 'rgba(15, 15, 15, 0.50)',\n  textAccent: '#e69100',\n\n  link: '#0E82E7',\n  linkHighlight: '#53A9F5',\n\n  bgPrimary: 'white',\n  bgSecondary: '#f7f7f7',\n  bgHighlight: 'rgba(0, 0, 0, 0.012)',\n  bgHover: 'rgba(0, 0, 0, 0.01)',\n\n  borderPrimary: '#e6e6e6',\n  borderSecondary: '#f2f2f2',\n  borderHighlight: '#D1D1D4',\n\n  tooltip: 'black'\n}\n","import { createGlobalStyle } from 'styled-components'\nimport normalize from 'styled-normalize'\n\nconst GlobalStyle = createGlobalStyle`\n  ${normalize}\n\n  body {\n    background-color: ${({ theme }) => theme.body};\n    transition: background-color 0.2s ease;\n\n    color: ${({ theme }) => theme.textPrimary};\n  }\n\n  a {\n    color: ${({ theme }) => theme.link};\n    cursor: pointer;\n\n    &:hover {\n      color: ${({ theme }) => theme.linkHighlight};;\n    }\n  }\n\n  // Titles\n  h2 {\n    font-weight: 600;\n  }\n\n  // Animations\n  @keyframes spin {\n    from {\n        transform:rotate(0deg);\n    }\n    to {\n        transform:rotate(360deg);\n    }\n  }\n`\n\n// Breakpoints\n\nexport const deviceSizes = {\n  mobile: 800,\n  tablet: 1000,\n  desktop: 1600\n}\n\nexport const deviceBreakPoints = {\n  mobile: `(max-width: ${deviceSizes.mobile}px)`,\n  tablet: `(max-width: ${deviceSizes.tablet}px)`,\n  desktop: `(max-width: ${deviceSizes.desktop}px)`\n}\n\nexport default GlobalStyle\n","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useContext } from 'react'\nimport styled from 'styled-components'\nimport { Moon, Sun } from 'lucide-react'\nimport { ThemeType } from '../style/themes'\nimport { motion } from 'framer-motion'\nimport { GlobalContext } from '..'\n\ninterface ThemeSwitcherProps {\n  className?: string\n}\n\nconst getButtonColor = (theme: ThemeType, buttonTheme: string) => {\n  return theme === buttonTheme ? (theme === 'dark' ? '#F6C76A' : 'white') : '#646775'\n}\n\nconst toggleWidth = 80\nconst toggleHeight = toggleWidth / 2\nconst toggleIndicatorSize = toggleWidth / 2\n\nconst toggleVariants = {\n  light: { left: 0, backgroundColor: '#F6C76A' },\n  dark: { left: toggleWidth - toggleIndicatorSize, backgroundColor: '#3A0595' }\n}\n\nconst ThemeSwitcher: React.FC<ThemeSwitcherProps> = ({ className }) => {\n  const { currentTheme, switchTheme } = useContext(GlobalContext)\n\n  return (\n    <StyledThemeSwitcher onClick={() => switchTheme(currentTheme === 'light' ? 'dark' : 'light')} className={className}>\n      <ToggleContent>\n        <ToggleIcon>\n          <Sun onClick={() => switchTheme('light')} color={getButtonColor(currentTheme, 'light')} size={18} />\n        </ToggleIcon>\n        <ToggleIcon>\n          <Moon onClick={() => switchTheme('dark')} color={getButtonColor(currentTheme, 'dark')} size={18} />\n        </ToggleIcon>\n      </ToggleContent>\n      <ToggleFloatingIndicator\n        variants={toggleVariants}\n        animate={currentTheme}\n        transition={{ duration: 0.5, type: 'spring' }}\n      />\n    </StyledThemeSwitcher>\n  )\n}\n\nexport const StyledThemeSwitcher = styled.div`\n  position: relative;\n  width: ${toggleWidth}px;\n  height: ${toggleHeight}px;\n  border: 1px solid ${({ theme }) => theme.borderPrimary};\n  border-radius: 60px;\n  background-color: ${({ theme }) => theme.bgHighlight};\n  cursor: pointer;\n  box-sizing: content-box;\n\n  svg {\n    cursor: pointer;\n  }\n`\n\nconst ToggleContent = styled.div`\n  position: absolute;\n  display: flex;\n  height: 100%;\n  width: 100%;\n  margin: 0;\n  z-index: 1;\n`\n\nconst ToggleIcon = styled.div`\n  display: flex;\n  flex: 1;\n\n  * {\n    margin: auto;\n  }\n`\n\nconst ToggleFloatingIndicator = styled(motion.div)`\n  position: absolute;\n  width: ${toggleIndicatorSize}px;\n  height: ${toggleIndicatorSize}px;\n  background-color: ${({ theme }) => theme.textPrimary};\n  border-radius: 60px;\n  z-index: 0;\n`\n\nexport default ThemeSwitcher\n","export default __webpack_public_path__ + \"static/media/explorer-logo-light.7b97902d.svg\";","export default __webpack_public_path__ + \"static/media/explorer-logo-dark.3d0d2623.svg\";","export default __webpack_public_path__ + \"static/media/block-icon.a6a8f086.svg\";","export default __webpack_public_path__ + \"static/media/address-icon.143269ad.svg\";","export default __webpack_public_path__ + \"static/media/transaction-icon.964bc84e.svg\";","import { AnimatePresence, motion } from 'framer-motion'\nimport { useState } from 'react'\nimport { MoreVertical } from 'lucide-react'\nimport styled from 'styled-components'\n\ninterface MenuItem {\n  text: string\n  icon?: React.ReactNode\n  onClick: () => void\n}\n\ntype Direction = 'up' | 'down'\n\nconst Menu = ({\n  label,\n  icon,\n  items,\n  direction,\n  className\n}: {\n  label: string\n  icon?: React.ReactNode\n  items: MenuItem[]\n  direction: Direction\n  className?: string\n}) => {\n  const [visible, setVisible] = useState(false)\n\n  const directionSign = direction === 'up' ? '-' : '+'\n\n  const handleBlur = () => {\n    setVisible(false)\n  }\n\n  return (\n    <MenuContainer\n      onClick={() => setVisible(true)}\n      onMouseEnter={() => setVisible(true)}\n      onMouseLeave={() => setVisible(false)}\n      className={className}\n      id=\"menu-container\"\n      onBlur={handleBlur}\n      tabIndex={0}\n    >\n      <MenuCurrentContent>\n        {icon && <IconContainer>{icon}</IconContainer>}\n        <Label>{label}</Label>\n        <MoreVertical size={15} />\n      </MenuCurrentContent>\n      <AnimatePresence>\n        {visible && (\n          <MenuItemsContainer\n            initial={{ y: `${directionSign}95%`, opacity: 0 }}\n            animate={{ y: `${directionSign}100%`, opacity: 1 }}\n            exit={{ y: `${directionSign}95%`, opacity: 0 }}\n            transition={{ duration: 0.15 }}\n          >\n            <MenuItemsList\n              style={{ marginBottom: direction === 'up' ? '8px' : 0, marginTop: direction === 'down' ? '8px' : 0 }}\n            >\n              {items.map((item, i) => (\n                <div key={i}>\n                  <MenuItem onClick={item.onClick}>\n                    {item.icon && <ItemIcon>{item.icon}</ItemIcon>}\n                    <ItemText>{item.text}</ItemText>\n                  </MenuItem>\n                  {i !== items.length - 1 && <Divider />}\n                </div>\n              ))}\n            </MenuItemsList>\n          </MenuItemsContainer>\n        )}\n      </AnimatePresence>\n    </MenuContainer>\n  )\n}\n\nconst MenuContainer = styled.div`\n  position: relative;\n  height: 47px;\n  border-top: 1px solid ${({ theme }) => theme.borderSecondary};\n  display: flex;\n`\n\nconst MenuCurrentContent = styled.div`\n  flex: 1;\n  display: flex;\n  align-items: center;\n  padding: 0 20px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.borderSecondary};\n  }\n`\n\nconst Label = styled.span`\n  color: ${({ theme }) => theme.textPrimary};\n  flex: 1;\n`\n\nconst IconContainer = styled.div`\n  width: 23px;\n  height: 23px;\n  margin-right: 20px;\n`\n\nconst MenuItemsContainer = styled(motion.div)`\n  position: absolute;\n  width: calc(100% - 10px);\n  margin-left: 5px;\n  z-index: 10000;\n  overflow: hidden;\n  border-radius: 7px;\n`\n\nconst MenuItemsList = styled.div`\n  overflow: hidden;\n  border-radius: 7px;\n  background-color: ${({ theme }) => theme.bgPrimary};\n  border: 1px solid ${({ theme }) => theme.borderPrimary};\n`\n\nconst ItemIcon = styled.div`\n  width: 23px;\n  height: 23px;\n\n  margin-right: 20px;\n  opacity: 0.8;\n`\n\nconst MenuItem = styled.div`\n  height: 47px;\n  display: flex;\n  align-items: center;\n  padding: 0 20px;\n  cursor: pointer;\n  color: ${({ theme }) => theme.textPrimary};\n\n  &:hover {\n    background-color: ${({ theme }) => theme.bgHover};\n    color: ${({ theme }) => theme.link};\n\n    ${ItemIcon} {\n      opacity: 1;\n    }\n  }\n`\n\nconst ItemText = styled.div``\n\nconst Divider = styled.div`\n  height: 1px;\n  background-color: ${({ theme }) => theme.borderSecondary};\n`\n\nexport default Menu\n","var _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgAlephiumLogoGradientStroke(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"100%\",\n    height: \"100%\",\n    viewBox: \"0 0 262 427\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    xmlSpace: \"preserve\",\n    style: {\n      fillRule: \"evenodd\",\n      clipRule: \"evenodd\",\n      strokeLinejoin: \"round\",\n      strokeMiterlimit: 2\n    },\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"rect\", {\n    id: \"Artboard1\",\n    x: 0,\n    y: 0,\n    width: 261.981,\n    height: 426.889,\n    style: {\n      fill: \"none\"\n    }\n  }), /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M89.976,279.988c-0,-5.404 -4.254,-9.04 -9.495,-8.117l-63.038,11.114c-5.24,0.924 -9.495,6.061 -9.495,11.464l-0,119.062c-0,5.403 4.255,9.04 9.495,8.116l63.038,-11.114c5.241,-0.924 9.495,-6.061 9.495,-11.464l-0,-119.061Z\",\n    style: {\n      fill: \"none\",\n      stroke: \"url(#_Linear1)\",\n      strokeWidth: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M254.033,13.379c-0,-5.403 -4.255,-9.04 -9.495,-8.116l-63.038,11.113c-5.241,0.924 -9.495,6.061 -9.495,11.465l-0,119.061c-0,5.403 4.254,9.04 9.495,8.116l63.038,-11.113c5.24,-0.924 9.495,-6.061 9.495,-11.465l-0,-119.061Z\",\n    style: {\n      fill: \"none\",\n      stroke: \"url(#_Linear2)\",\n      strokeWidth: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M100.245,41.191c-2.434,-5.36 -8.968,-8.908 -14.583,-7.918l-67.541,11.907c-5.614,0.99 -8.197,6.146 -5.763,11.506l149.378,328.999c2.434,5.36 8.968,8.908 14.583,7.918l67.541,-11.907c5.614,-0.99 8.197,-6.146 5.763,-11.506l-149.378,-328.999Z\",\n    style: {\n      fill: \"none\",\n      stroke: \"url(#_Linear3)\",\n      strokeWidth: 5\n    }\n  }))), /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"_Linear1\",\n    x1: 0,\n    y1: 0,\n    x2: 1,\n    y2: 0,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"matrix(239.098,-324.036,324.036,239.098,11.4418,335.554)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    style: {\n      stopColor: \"#f76110\",\n      stopOpacity: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    style: {\n      stopColor: \"#6510f7\",\n      stopOpacity: 1\n    }\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"_Linear2\",\n    x1: 0,\n    y1: 0,\n    x2: 1,\n    y2: 0,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"matrix(239.098,-324.036,324.036,239.098,11.4418,335.554)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    style: {\n      stopColor: \"#f76110\",\n      stopOpacity: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    style: {\n      stopColor: \"#6510f7\",\n      stopOpacity: 1\n    }\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"_Linear3\",\n    x1: 0,\n    y1: 0,\n    x2: 1,\n    y2: 0,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"matrix(239.098,-324.036,324.036,239.098,11.4418,335.554)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    style: {\n      stopColor: \"#f76110\",\n      stopOpacity: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    style: {\n      stopColor: \"#6510f7\",\n      stopOpacity: 1\n    }\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgAlephiumLogoGradientStroke);\nexport default __webpack_public_path__ + \"static/media/alephium-logo-gradient-stroke.2922636d.svg\";\nexport { ForwardRef as ReactComponent };","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\n\nimport { useContext, useEffect, useRef } from 'react'\nimport { Link, NavLink } from 'react-router-dom'\nimport styled, { useTheme } from 'styled-components'\n\nimport logoLight from '../images/explorer-logo-light.svg'\nimport logoDark from '../images/explorer-logo-dark.svg'\nimport blockIcon from '../images/block-icon.svg'\nimport addressIcon from '../images/address-icon.svg'\nimport transactionIcon from '../images/transaction-icon.svg'\nimport { deviceBreakPoints, deviceSizes } from '../style/globalStyles'\nimport { X } from 'lucide-react'\nimport { useWindowSize } from '../hooks/useWindowSize'\nimport { AnimatePresence, motion } from 'framer-motion'\nimport ThemeSwitcher, { StyledThemeSwitcher } from './ThemeSwitcher'\nimport { GlobalContext } from '..'\nimport Menu from './Menu'\n\nimport { ReactComponent as AlephiumLogo } from '../images/alephium-logo-gradient-stroke.svg'\n\nexport type SidebarState = 'open' | 'close'\n\nconst Sidebar = ({ sidebarState }: { sidebarState: SidebarState }) => {\n  const theme = useTheme()\n  const windowWidth = useWindowSize().width\n  const lastWindowWidth = useRef(windowWidth)\n  const { setSidebarState, networkType } = useContext(GlobalContext)\n\n  useEffect(() => {\n    if (windowWidth) {\n      if (\n        lastWindowWidth.current &&\n        lastWindowWidth.current >= deviceSizes.tablet &&\n        windowWidth < deviceSizes.tablet &&\n        open\n      ) {\n        setSidebarState('close')\n      }\n\n      lastWindowWidth.current = windowWidth\n    }\n  }, [setSidebarState, windowWidth])\n\n  return (\n    <>\n      <SidebarContainer open={sidebarState === 'open'}>\n        <CloseButton onClick={() => setSidebarState('close')}>{<X />}</CloseButton>\n        <Header>\n          <Link to=\"/\">\n            <Logo alt=\"alephium\" src={theme.name === 'light' ? logoLight : logoDark} />\n          </Link>\n        </Header>\n        <Tabs>\n          <Tab to=\"/blocks\" onClick={() => setSidebarState('close')}>\n            <TabIcon src={blockIcon} alt=\"blocks\" /> Blocks\n          </Tab>\n          <Tab to=\"/addresses\" onClick={() => setSidebarState('close')}>\n            <TabIcon src={addressIcon} alt=\"addresses\" /> Addresses\n          </Tab>\n          <Tab to=\"/transactions\" onClick={() => setSidebarState('close')}>\n            <TabIcon src={transactionIcon} alt=\"transactions\" /> Transactions\n          </Tab>\n        </Tabs>\n        <ThemeSwitcher />\n        <NetworkMenu\n          label={networkType === 'mainnet' ? 'Mainnet' : 'Testnet'}\n          icon={networkType === 'mainnet' ? <AlephiumLogoMainnet /> : <AlephiumLogoTestnet />}\n          items={[\n            {\n              text: 'Mainnet',\n              onClick: () => {\n                window.location.assign('https://explorer.alephium.org')\n              },\n              icon: <AlephiumLogoMainnet />\n            },\n            {\n              text: 'Testnet',\n              onClick: () => {\n                window.location.assign('https://testnet.alephium.org')\n              },\n              icon: <AlephiumLogoTestnet />\n            }\n          ]}\n          direction={'up'}\n        />\n      </SidebarContainer>\n      <AnimatePresence>\n        {sidebarState === 'open' && (\n          <Backdrop\n            onClick={() => setSidebarState('close')}\n            animate={{ opacity: 0.4 }}\n            exit={{ opacity: 0 }}\n            initial={{ opacity: 0 }}\n            transition={{ duration: 0.15 }}\n          />\n        )}\n      </AnimatePresence>\n    </>\n  )\n}\n\n/* STYLES */\n\nconst Logo = styled.img`\n  height: 100px;\n  width: 140px;\n  margin-top: 5px;\n  margin-left: 25px;\n\n  @media ${deviceBreakPoints.tablet} {\n    width: 150px;\n  }\n`\n\nconst CloseButton = styled.div`\n  position: absolute;\n  width: 35px;\n  height: 35px;\n  top: 16px;\n  left: 20px;\n  display: none;\n  z-index: 300;\n  padding: 5px;\n  border-radius: 100%;\n\n  @media ${deviceBreakPoints.tablet} {\n    display: block;\n    cursor: pointer;\n  }\n`\n\nconst Backdrop = styled(motion.div)`\n  display: none;\n\n  @media ${deviceBreakPoints.tablet} {\n    display: block;\n    position: fixed;\n    top: 0;\n    right: 0;\n    left: 0;\n    bottom: 0;\n    background-color: black;\n    z-index: 101;\n  }\n`\n\ninterface SidebarContainerProps {\n  open: boolean\n}\n\nconst SidebarContainer = styled.div<SidebarContainerProps>`\n  position: relative;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  max-width: 250px;\n\n  background-color: ${({ theme }) => theme.bgSecondary};\n  border-right: 1px solid ${({ theme }) => theme.borderPrimary};\n\n  ${StyledThemeSwitcher} {\n    display: block;\n    position: absolute;\n    bottom: 70px;\n    left: 25px;\n  }\n\n  @media ${deviceBreakPoints.tablet} {\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    z-index: 200;\n    width: 250px;\n\n    transition: all 0.15s ease-out;\n    transform: ${({ open }) => (!open ? 'translateX(-100%)' : '')};\n  }\n`\n\nconst Header = styled.header`\n  display: flex;\n  align-items: center;\n\n  @media ${deviceBreakPoints.tablet} {\n    margin-top: 50px;\n  }\n`\n\nconst Tabs = styled.div`\n  margin-top: 12px;\n  display: flex;\n  flex-direction: column;\n  border-top: 1px solid ${({ theme }) => theme.borderPrimary};\n\n  @media ${deviceBreakPoints.tablet} {\n    margin-top: 30px;\n  }\n`\n\nconst Tab = styled(NavLink)`\n  font-size: 0.9rem;\n  font-weight: 500;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  transition: all 0.15s ease;\n  position: relative;\n  border-bottom: 1px solid ${({ theme }) => theme.borderPrimary};\n  padding: 13px 20px;\n\n  color: ${({ theme }) => theme.textSecondary};\n  &.active {\n    color: ${({ theme }) => theme.textPrimary};\n    background-color: ${({ theme }) => theme.bgPrimary};\n\n    img {\n      filter: none;\n    }\n  }\n  &:hover {\n    color: ${({ theme }) => theme.textPrimary};\n  }\n`\n\nconst TabIcon = styled.img`\n  height: 20px;\n  width: 20px;\n  margin-right: 15px;\n  filter: grayscale(100%);\n`\n\n// Network switch\n\nconst NetworkMenu = styled(Menu)`\n  position: absolute !important;\n  bottom: 0;\n  right: 0;\n  left: 0;\n`\n\nconst AlephiumLogoMainnet = styled(AlephiumLogo)`\n  path {\n    stroke-width: 18 !important;\n  }\n`\n\nconst AlephiumLogoTestnet = styled(AlephiumLogo)`\n  path {\n    stroke-width: 18 !important;\n    stroke: ${({ theme }) => theme.textSecondary} !important;\n  }\n`\n\nexport default Sidebar\n","import { useState, useEffect } from 'react'\n\nexport function useWindowSize() {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState<{ width: undefined | number; height: undefined | number }>({\n    width: undefined,\n    height: undefined\n  })\n\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      })\n    }\n\n    // Add event listener\n    window.addEventListener('resize', handleResize)\n\n    // Call handler right away so state gets updated with initial window size\n    handleResize()\n\n    // Remove event listener on cleanup\n    return () => window.removeEventListener('resize', handleResize)\n  }, []) // Empty array ensures that effect is only run on mount\n\n  return windowSize\n}\n","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\n\nimport { motion } from 'framer-motion'\nimport React, { useContext, useRef, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { Search } from 'lucide-react'\nimport { deviceBreakPoints } from '../style/globalStyles'\nimport { GlobalContext } from '..'\nimport { checkAddressValidity, checkHexStringValidity } from '../utils/strings'\n\nconst SearchBar = () => {\n  const [active, setActive] = useState(false)\n  const [search, setSearch] = useState('')\n  const { setSnackbarMessage } = useContext(GlobalContext)\n  const inputRef = useRef<HTMLInputElement>(null)\n\n  const history = useHistory()\n\n  const handleInputClick = () => setActive(true)\n\n  const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearch(e.target.value)\n  }\n\n  const handleSearchClick = () => searching(search)\n\n  const handleSearchKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter') {\n      searching(search)\n    }\n  }\n\n  const handleRemoveFocus = () => {\n    setActive(false)\n  }\n\n  const cleanSearch = () => {\n    setSearch('')\n    setActive(false)\n  }\n\n  const redirect = (to: string) => {\n    handleRemoveFocus()\n    cleanSearch()\n    inputRef.current?.blur()\n    history.push(to)\n  }\n\n  const searching = (str: string) => {\n    const word = str.trim()\n\n    const isHexString = checkHexStringValidity(word)\n\n    //TODO This is a very dummy way do differentiate address and transaction, need improvement\n    if (isHexString) {\n      // Is probably not an address, as an address usually contains at least one non-hex character.\n      if (word.length === 64) {\n        if (word.slice(0, 4) === '0000') {\n          redirect(`/blocks/${word}`)\n        } else {\n          redirect(`/transactions/${word}`)\n        }\n      } else {\n        setSnackbarMessage({ text: 'There seems to be an error in the hash format.', type: 'info' })\n      }\n    } else {\n      if (checkAddressValidity(word)) {\n        redirect(`/addresses/${word}`)\n      } else {\n        setSnackbarMessage({ text: 'There seems to be an error in the address format.', type: 'info' })\n      }\n    }\n  }\n\n  return (\n    <Container>\n      <SearchInput\n        ref={inputRef}\n        onBlur={handleRemoveFocus}\n        onChange={handleSearchChange}\n        value={search}\n        onClick={handleInputClick}\n        onKeyDown={handleSearchKeyDown}\n        placeholder=\"Search for an address or a tx...\"\n      />\n      {active && <Backdrop animate={{ opacity: 1 }} transition={{ duration: 0.15 }} />}\n      <SearchIcon onClick={handleSearchClick} />\n    </Container>\n  )\n}\n\nconst Container = styled.div`\n  flex: 1;\n  position: relative;\n  height: 45px;\n\n  @media ${deviceBreakPoints.mobile} {\n    right: 10px;\n    left: 10px;\n    margin-right: 10px;\n    z-index: 1;\n  }\n`\n\nconst SearchIcon = styled(Search)`\n  color: ${({ theme }) => theme.textPrimary};\n  position: absolute;\n  right: 20px;\n  top: 12px;\n  z-index: 11;\n  height: 21px;\n  cursor: pointer;\n`\n\nconst SearchInput = styled.input`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  border-radius: 30px;\n  padding: 0 20px;\n  color: ${({ theme }) => theme.textPrimary};\n  background: ${({ theme }) => theme.bgSecondary};\n  border: 1px solid ${({ theme }) => theme.borderPrimary};\n  transition: all 0.15s ease-out;\n  z-index: 10;\n\n  &:hover {\n    border: 1px solid ${({ theme }) => theme.borderHighlight};\n  }\n\n  &:focus,\n  &:active {\n    box-shadow: 0 15px 15px rgba(0, 0, 0, 0.15);\n    background: linear-gradient(${({ theme }) => `${theme.bgSecondary}, ${theme.bgSecondary}`}) padding-box,\n      /*this is your grey background*/ linear-gradient(to right, #6510f7, #f76110) border-box;\n    border: 1px solid transparent;\n    z-index: 10;\n  }\n`\n\nconst Backdrop = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  z-index: 9;\n  opacity: 0;\n`\n\nexport default SearchBar\n","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\n\nexport const smartHash = (hash: string) => {\n  if (hash.length <= 16) return hash\n  else return hash.substring(0, 8) + '...' + hash.substring(hash.length - 8)\n}\n\nexport const checkAddressValidity = (addressToTest: string) => {\n  return /^[1-9A-HJ-NP-Za-km-z]+$/.test(addressToTest)\n}\n\nexport const checkHexStringValidity = (stringToTest: string) => {\n  return /^[a-fA-F0-9]+$/.test(stringToTest)\n}\n","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\n\nimport React from 'react'\nimport styled from 'styled-components'\nimport { deviceBreakPoints } from '../style/globalStyles'\n\ninterface PageTitleProps {\n  title: string\n  surtitle?: string | JSX.Element\n  subtitle?: string | JSX.Element\n}\n\nconst SectionTitle: React.FC<PageTitleProps> = ({ title, surtitle, subtitle }) => (\n  <TitleWrapper>\n    {surtitle && <Surtitle>{surtitle}</Surtitle>}\n    <Title>{title}</Title>\n    {subtitle && <Subtitle>{subtitle}</Subtitle>}\n  </TitleWrapper>\n)\n\nconst TitleWrapper = styled.div`\n  margin-bottom: 25px;\n`\n\nconst Title = styled.h1`\n  font-family: 'Inter';\n  font-weight: bold;\n  font-size: 2.2rem;\n  color: ${({ theme }) => theme.textPrimary};\n  margin: 0 0 5px 0;\n  font-weight: 600;\n\n  @media ${deviceBreakPoints.mobile} {\n    font-size: 2rem;\n    margin-top: 20px;\n  }\n`\n\nconst Surtitle = styled.h2`\n  font-family: 'Inter';\n  font-weight: 500;\n  font-size: 1.6rem;\n  color: ${({ theme }) => theme.textSecondary};\n  margin-bottom: 0;\n  overflow: hidden;\n`\n\nconst Subtitle = styled.h2`\n  font-family: 'Inter';\n  font-weight: 500;\n  font-size: 1.6rem;\n  color: ${({ theme }) => theme.textSecondary};\n  margin: 0;\n`\n\nexport const SecondaryTitle = styled.h2`\n  margin-top: 40px;\n`\n\nexport default SectionTitle\n","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\n\nimport { CSSProperties, FC } from 'react'\nimport { Loader } from 'lucide-react'\nimport styled from 'styled-components'\n\ninterface LoadingSpinnerProps {\n  size?: number\n  style?: CSSProperties\n}\n\nconst LoadingSpinner: FC<LoadingSpinnerProps> = ({ size, style }) => <Spinner size={size} style={style} />\n\nconst Spinner = styled(Loader)`\n  animation: spin 1s infinite;\n`\n\nexport default LoadingSpinner\n","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\n\nimport { FC } from 'react'\nimport ReactTooltip from 'react-tooltip'\nimport { useTheme } from 'styled-components'\n\ninterface TooltipProps {\n  id?: string\n}\n\nconst Tooltip: FC<TooltipProps> = ({ id }) => {\n  const theme = useTheme()\n\n  return <ReactTooltip backgroundColor={theme.tooltip} id={id} />\n}\n\nexport default Tooltip\n","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\n\nimport { createContext, useEffect } from 'react'\nimport { FC } from 'react'\nimport ReactTooltip from 'react-tooltip'\nimport styled from 'styled-components'\nimport Tooltip from './Tooltip'\n\nconst rebuildTooltips = () => {\n  ReactTooltip.rebuild()\n}\n\ninterface SectionContextType {\n  rebuildTooltips: () => void\n}\n\nexport const SectionContext = createContext<SectionContextType>({ rebuildTooltips: rebuildTooltips })\n\nconst Section: FC<{ className?: string }> = ({ children, className }) => {\n  useEffect(() => {\n    rebuildTooltips()\n  })\n\n  return (\n    <Container className={className}>\n      <SectionContext.Provider value={{ rebuildTooltips }}>\n        <Tooltip />\n        {children}\n      </SectionContext.Provider>\n    </Container>\n  )\n}\n\nconst Container = styled.section`\n  width: 100%;\n`\n\nexport default Section\n","import { useEffect, useState, useContext } from 'react'\nimport { Clipboard, Check } from 'lucide-react'\nimport ReactTooltip from 'react-tooltip'\nimport styled from 'styled-components'\nimport { GlobalContext } from '../..'\n\nconst ClipboardButton = ({ textToCopy }: { textToCopy: string }) => {\n  const [hasBeenCopied, setHasBeenCopied] = useState(false)\n  const { setSnackbarMessage } = useContext(GlobalContext)\n\n  const handleClick = () => {\n    navigator.clipboard\n      .writeText(textToCopy)\n      .catch((e) => {\n        throw e\n      })\n      .then(() => {\n        setHasBeenCopied(true)\n      })\n  }\n\n  useEffect(() => {\n    // Reset icon after copy\n    if (hasBeenCopied) {\n      ReactTooltip.rebuild()\n      setSnackbarMessage({ text: 'Copied to clipboard!', type: 'info' })\n\n      setInterval(() => {\n        setHasBeenCopied(false)\n      }, 3000)\n    }\n  }, [hasBeenCopied, setSnackbarMessage])\n\n  if (!hasBeenCopied) {\n    return <StyledClipboardIcon size={15} data-tip={'Copy to clipboard'} onClick={handleClick} />\n  } else {\n    return <StyledCheckIcon size={15} />\n  }\n}\n\nconst StyledClipboardIcon = styled(Clipboard)`\n  margin-left: 10px;\n  cursor: pointer;\n  color: ${({ theme }) => theme.textSecondary};\n`\n\nconst StyledCheckIcon = styled(Check)`\n  margin-left: 10px;\n  color: ${({ theme }) => theme.textPrimary};\n`\n\nexport default ClipboardButton\n","import { QrCode } from 'lucide-react'\nimport styled from 'styled-components'\nimport ReactTooltip from 'react-tooltip'\nimport QRCode from 'qrcode.react'\n\nconst QRCodeButton = ({ textToEncode }: { textToEncode: string }) => {\n  return (\n    <>\n      <StyledClipboardIcon data-tip data-for=\"qr-code-tooltip\" data-event=\"click\" size={15} />\n      <Tooltip id=\"qr-code-tooltip\" backgroundColor=\"black\" globalEventOff=\"click\">\n        <QRCode size={150} value={textToEncode} bgColor=\"black\" fgColor=\"white\" />\n      </Tooltip>\n    </>\n  )\n}\n\nconst StyledClipboardIcon = styled(QrCode)`\n  margin-left: 10px;\n  cursor: pointer;\n  color: ${({ theme }) => theme.textSecondary};\n`\n\nconst Tooltip = styled(ReactTooltip)`\n  opacity: 1 !important;\n`\n\nexport default QRCodeButton\n","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\n\nimport { AnimatePresence, motion } from 'framer-motion'\nimport { createContext, FC, useContext, useEffect } from 'react'\nimport { ChevronDown } from 'lucide-react'\nimport styled, { css, DefaultTheme, FlattenInterpolation, ThemeProps } from 'styled-components'\nimport { SectionContext } from './Section'\nimport ClipboardButton from './Buttons/ClipboardButton'\nimport { deviceBreakPoints } from '../style/globalStyles'\nimport QRCodeButton from './Buttons/QRCodeButton'\n\ninterface TableProps {\n  main?: boolean\n  hasDetails?: boolean\n  noBorder?: boolean\n  bodyOnly?: boolean\n  scrollable?: boolean\n}\n\nexport const Table: FC<TableProps> = ({ children, ...props }) => (\n  <TableWrapper {...props}>\n    <StyledTable {...props}>{children}</StyledTable>\n  </TableWrapper>\n)\n\ninterface TableHeaderProps {\n  headerTitles: string[]\n  columnWidths?: string[]\n  textAlign?: ('left' | 'right')[]\n  compact?: boolean\n  transparent?: boolean\n}\n\nexport const TableHeader: React.FC<TableHeaderProps> = ({\n  headerTitles,\n  columnWidths,\n  textAlign,\n  compact = false,\n  transparent = false\n}) => (\n  <StyledTableHeader compact={compact} transparent={transparent}>\n    <tr>\n      {headerTitles.map((v, i) => (\n        <th\n          key={i}\n          style={{\n            width: columnWidths ? columnWidths[i] || 'auto' : 'auto',\n            textAlign: textAlign ? textAlign[i] : 'left'\n          }}\n        >\n          {v}\n        </th>\n      ))}\n    </tr>\n  </StyledTableHeader>\n)\n\n// == Row\n\ninterface RowProps {\n  isActive?: boolean\n}\n\nexport const Row = styled.tr<RowProps>`\n  background-color: ${({ theme, isActive }) => (isActive ? theme.bgHighlight : '')};\n  border: none;\n  cursor: ${({ onClick }) => (onClick ? 'pointer' : 'auto')};\n`\n\n// == Details Row\n\ninterface DetailsRowProps {\n  openCondition: boolean\n}\n\nconst OpenConditionContext = createContext(false)\n\nexport const DetailsRow: FC<DetailsRowProps> = ({ children, openCondition }) => {\n  const rebuildTooltips = useContext(SectionContext).rebuildTooltips\n  useEffect(() => rebuildTooltips()) // Need to rebuild after lazy rendering\n\n  return (\n    <OpenConditionContext.Provider value={openCondition}>\n      <tr className=\"details\">{children}</tr>\n    </OpenConditionContext.Provider>\n  )\n}\n\ninterface AnimatedCellProps {\n  className?: string\n  colSpan?: number\n  alignItems?: 'left' | 'right'\n}\n\nexport const AnimatedCell: FC<AnimatedCellProps> = ({ children, className, colSpan, alignItems = 'left' }) => {\n  const condition = useContext(OpenConditionContext)\n\n  return (\n    <td colSpan={colSpan}>\n      <AnimatePresence>\n        {condition && (\n          <motion.div\n            initial={{ height: 0 }}\n            animate={{ height: 'auto' }}\n            exit={{ height: 0 }}\n            transition={{ duration: 0.15 }}\n            className={className}\n          >\n            <AnimatedCellContainer alignItems={alignItems}>{children}</AnimatedCellContainer>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </td>\n  )\n}\n\n// == Details Toggle\n\nconst variants = {\n  closed: { rotate: 0 },\n  open: { rotate: 180 }\n}\n\ninterface DetailToggleProps {\n  isOpen: boolean\n  onClick: () => void\n}\n\nexport const DetailToggle: FC<DetailToggleProps> = ({ isOpen, onClick }) => {\n  return (\n    <td style={{ padding: 0, textAlign: 'center', overflow: 'hidden' }}>\n      <DetailToggleWrapper animate={isOpen ? 'open' : 'closed'} variants={variants} onClick={onClick}>\n        <ChevronDown size={20} />\n      </DetailToggleWrapper>\n    </td>\n  )\n}\n\nconst DetailToggleWrapper = styled(motion.div)`\n  cursor: pointer;\n`\n\n// == Highlighted cell (address, hash...)\n\nexport const HighlightedCell: FC<{ textToCopy?: string; qrCodeContent?: string }> = ({\n  children,\n  textToCopy,\n  qrCodeContent\n}) => {\n  return (\n    <StyledHighlightedCell>\n      <span>{children}</span>\n      {textToCopy && <ClipboardButton textToCopy={textToCopy} />}\n      {qrCodeContent && <QRCodeButton textToEncode={qrCodeContent} />}\n    </StyledHighlightedCell>\n  )\n}\n\n// ===\n// === Styles ====\n// ===\n\nconst TableWrapper = styled.div<TableProps>`\n  border: ${({ noBorder, theme }) => !noBorder && `1px solid ${theme.borderPrimary}`};\n  overflow: hidden;\n  border-radius: 7px;\n`\n\nconst StyledTable = styled.table<TableProps>`\n  width: 100%;\n  text-align: left;\n  border-collapse: collapse;\n  table-layout: fixed;\n  white-space: nowrap;\n\n  @media ${deviceBreakPoints.mobile} {\n    ${({ scrollable, bodyOnly }) => {\n      if (scrollable) {\n        return `\n\t\t\t\t\tdisplay: block;\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\toverflow-x: auto;\n\t\t\t\t`\n      } else if (bodyOnly) {\n        /* Change table structure, stack td vertically */\n        return css`\n          tr {\n            display: flex;\n            flex-direction: column;\n\n            td:first-child {\n              height: 25px !important;\n              font-weight: 600;\n            }\n\n            td:not(:first-child) {\n              height: initial !important;\n              font-weight: 500 !important;\n            }\n          }\n        `\n      }\n    }}\n  }\n\n  td:nth-child(1) {\n    width: ${({ bodyOnly }) => (bodyOnly ? '27%' : 'auto')};\n  }\n\n  tr td {\n    padding: 12px;\n  }\n\n  tr:not(.details) td {\n    height: 45px;\n  }\n\n  svg {\n    vertical-align: bottom;\n  }\n\n  tbody {\n    tr:not(:last-child) {\n      border-bottom: ${({ hasDetails, noBorder, theme }) =>\n        !hasDetails ? (noBorder ? 'none' : `1px solid ${theme.borderPrimary}`) : ''};\n    }\n\n    tr.details {\n      &:not(:last-child) {\n        border-bottom: 1px solid ${({ theme }) => theme.borderPrimary};\n      }\n      box-shadow: inset 0 1px 0 ${({ theme }) => theme.borderSecondary};\n      background-color: ${({ theme }) => theme.bgHighlight};\n\n      td {\n        padding-top: 0;\n        padding-bottom: 0;\n      }\n    }\n  }\n`\n\ninterface StyledTableHeaderProps {\n  compact: boolean\n  transparent: boolean\n}\n\nexport const StyledTableHeader = styled.thead<StyledTableHeaderProps>`\n  color: ${({ theme }) => theme.textSecondary};\n\n  th {\n    padding: 0px 12px 12px 12px;\n    font-weight: 500;\n    ${({ compact, theme }) => {\n      if (!compact) {\n        return `\n\t\t\t\t\tposition: sticky;\n\t\t\t\t\ttop: 0;\n\t\t\t\t\tbox-shadow: inset 0 -1px 0 ${theme.borderPrimary};\n\t\t\t\t\tpadding: 12px;\n\t\t\t\t`\n      }\n    }}\n    background-color: ${({ theme, transparent }) => (transparent ? 'transparent' : `${theme.bgSecondary}`)};\n  }\n\n  tr {\n    height: ${({ compact }) => (compact ? '30px' : '48px')};\n  }\n`\n\nexport interface TDStyle {\n  tdPos: number\n  style: FlattenInterpolation<ThemeProps<DefaultTheme>>\n}\n\nexport interface TableBopyProps {\n  tdStyles?: TDStyle[]\n}\n\nexport const TableBody = styled.tbody<TableBopyProps>`\n  color: ${({ theme }) => theme.textPrimary};\n\n  & > tr {\n    ${(props) =>\n      props.tdStyles\n        ? props.tdStyles.map(\n            (s) =>\n              css`\n                & > td:nth-child(${s.tdPos}) {\n                  ${s.style}\n                }\n              `\n          )\n        : ''}\n\n    &.details div {\n      overflow: hidden;\n    }\n\n    &:hover {\n      background-color: ${({ theme }) => theme.bgHover};\n    }\n  }\n`\n\nconst StyledHighlightedCell = styled.td`\n  font-weight: 600 !important;\n  color: ${({ theme }) => theme.textAccent};\n  word-wrap: break-word;\n  white-space: pre-wrap;\n  overflow: hidden;\n`\n\nexport const AnimatedCellContainer = styled(motion.div)<{ alignItems: 'left' | 'right' }>`\n  padding: 10px 0;\n  text-align: left;\n  overflow: hidden;\n\n  display: flex;\n  flex-direction: column;\n  align-items: ${({ alignItems }) => (alignItems === 'left' ? 'flex-start' : 'flex-end')};\n\n  > * {\n    padding: 3px 0 !important;\n  }\n`\n","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\n\nimport JSBI from 'jsbi'\nimport { Transaction } from '../types/api'\n\nconst MONEY_SYMBOL = ['', 'K', 'M', 'B', 'T']\nconst QUINTILLION = 1000000000000000000\n\nexport const truncateToDecimals = (num: number, dec = 2) => {\n  const calcDec = Math.pow(10, dec)\n  return Math.trunc(num * calcDec) / calcDec\n}\n\nconst getNumberOfTrailingZeros = (numberArray: string[]) => {\n  let numberOfZeros = 0\n\n  for (let i = numberArray.length - 1; i >= 0; i--) {\n    if (numberArray[i] === '0') {\n      numberOfZeros++\n    } else {\n      break\n    }\n  }\n\n  return numberOfZeros\n}\n\nexport const removeTrailingZeros = (numString: string) => {\n  const numberArray = numString.split('')\n\n  const numberOfZeros = getNumberOfTrailingZeros(numberArray)\n\n  const numberArrayWithoutTrailingZeros = [...numberArray.slice(0, numberArray.length - numberOfZeros)]\n\n  if (numberArrayWithoutTrailingZeros[numberArrayWithoutTrailingZeros.length - 1] === '.')\n    numberArrayWithoutTrailingZeros.push('00')\n\n  return numberArrayWithoutTrailingZeros.join().replace(/,/g, '')\n}\n\nexport const abbreviateAmount = (baseNum: JSBI, showFullPrecision = false, nbOfDecimalsToShow?: number) => {\n  const minDigits = 3\n\n  if (JSBI.lessThanOrEqual(baseNum, JSBI.BigInt(0))) return '0.00'\n\n  // For abbreviation, we don't need full precision and can work with number\n  const alephNum = Number(baseNum) / QUINTILLION\n\n  // what tier? (determines SI symbol)\n\n  let tier = (Math.log10(alephNum) / 3) | 0\n\n  const numberOfDigitsToDisplay = nbOfDecimalsToShow ? nbOfDecimalsToShow : minDigits\n\n  if (tier < 0 || showFullPrecision) {\n    return removeTrailingZeros(alephNum.toFixed(18)) // Keep full precision for very low numbers (gas etc.)\n  } else if (tier === 0) {\n    // Small number, low precision is ok\n    return removeTrailingZeros(alephNum.toFixed(numberOfDigitsToDisplay).toString())\n  } else if (tier >= MONEY_SYMBOL.length) {\n    tier = MONEY_SYMBOL.length - 1\n  }\n\n  // get suffix and determine scale\n  const suffix = MONEY_SYMBOL[tier]\n  const scale = Math.pow(10, tier * 3)\n\n  // Scale the bigNum\n  // Here we need to be careful of precision issues\n  const scaled = alephNum / scale\n\n  return scaled.toFixed(numberOfDigitsToDisplay) + suffix\n}\n\nexport function calAmountDelta(t: Transaction, id: string) {\n  const inputAmount = t.inputs.reduce<JSBI>((acc, input) => {\n    const inputAmount = JSBI.BigInt(input.amount)\n    return input.address === id ? JSBI.add(acc, inputAmount) : acc\n  }, JSBI.BigInt(0))\n  const outputAmount = t.outputs.reduce<JSBI>((acc, output) => {\n    const outputAmount = JSBI.BigInt(output.amount)\n    return output.address === id ? JSBI.add(acc, outputAmount) : acc\n  }, JSBI.BigInt(0))\n\n  return JSBI.subtract(outputAmount, inputAmount)\n}\n","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\nimport { FC } from 'react'\nimport JSBI from 'jsbi'\nimport { abbreviateAmount } from '../utils/amounts'\n\ninterface AmountProps {\n  value: JSBI | undefined\n  className?: string\n  showFullPrecision?: boolean\n}\n\nconst Amount: FC<AmountProps> = ({ value, className, showFullPrecision = false }) => {\n  if (value !== undefined) {\n    return <span className={className}>{abbreviateAmount(value, showFullPrecision).toString()} א</span>\n  } else {\n    return <span className={className}>- א</span>\n  }\n}\n\nexport default Amount\n","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { FC } from 'react'\nimport { ExternalLink } from 'lucide-react'\nimport { Link, LinkProps } from 'react-router-dom'\nimport styled from 'styled-components'\nimport Amount from './Amount'\nimport { smartHash } from '../utils/strings'\nimport JSBI from 'jsbi'\n\ninterface TightLinkProps extends LinkProps {\n  maxWidth: string\n  text: string\n}\n\nexport const TightLinkStrict: React.FC<TightLinkProps> = ({ maxWidth, text, ...props }) => {\n  return (\n    <div style={{ maxWidth: maxWidth, display: 'flex', overflow: 'hidden' }}>\n      <StyledLink {...props} data-tip={text}>\n        {smartHash(text)}\n      </StyledLink>\n    </div>\n  )\n}\n\nexport const TightLink: React.FC<TightLinkProps> = ({ maxWidth, text, ...props }) => {\n  return (\n    <div style={{ maxWidth: maxWidth, display: 'flex', overflow: 'hidden' }}>\n      <StyledLink\n        {...props}\n        data-tip={text}\n        onClick={(e) => {\n          e.stopPropagation()\n        }}\n      >\n        {text}\n      </StyledLink>\n    </div>\n  )\n}\n\ninterface AddressLinkProps {\n  maxWidth?: string\n  address: string\n  txHashRef?: string\n  amount?: JSBI\n}\n\nexport const AddressLink: FC<AddressLinkProps> = ({ maxWidth = 'auto', address, txHashRef, amount }) => {\n  return (\n    <AddressWrapper>\n      <TightLink to={`/addresses/${address}`} maxWidth={maxWidth} text={address} />\n      {amount !== undefined && (\n        <OutputValue>\n          (<Amount value={amount} />)\n        </OutputValue>\n      )}\n      {txHashRef && (\n        <TxLink to={`/transactions/${txHashRef}`} data-tip={txHashRef}>\n          <ExternalLink size={12} />\n        </TxLink>\n      )}\n    </AddressWrapper>\n  )\n}\n\nconst OutputValue = styled.span`\n  color: ${({ theme }) => theme.textSecondary};\n  margin-left: 8px;\n`\n\nconst TxLink = styled(Link)`\n  margin-left: 8px;\n`\nconst StyledLink = styled(Link)`\n  white-space: nowrap;\n  font-family: 'Roboto Mono';\n  font-size: 13.3px;\n  font-weight: 500;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`\n\nconst AddressWrapper = styled.div`\n  padding: 3px 0;\n  display: flex;\n  width: 100%;\n`\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n// https://github.com/microsoft/TypeScript/issues/24929\nimport { useLocation } from 'react-router-dom'\n\nconst useQueryParams = <T extends string[] | string>(\n  paramNames: T\n): T extends string ? string | null : Record<string, string | null> => {\n  const search = useLocation().search\n\n  const params: Record<string, string | null> = {}\n\n  if (typeof paramNames === 'string') {\n    return new URLSearchParams(search).get(paramNames) as any\n  } else {\n    paramNames.forEach((p) => {\n      params[p] = new URLSearchParams(search).get(p)\n    })\n    return params as any\n  }\n}\n\nexport default useQueryParams\n","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { FC } from 'react'\nimport styled from 'styled-components'\n\nconst TextButton: FC<React.ButtonHTMLAttributes<HTMLButtonElement>> = ({ children, ...props }) => (\n  <StyledTextButton {...props}>{children}</StyledTextButton>\n)\n\nconst StyledTextButton = styled.button`\n  background: transparent;\n  font-size: inherit;\n  color: ${({ theme, disabled }) => {\n    if (disabled) return theme.textSecondary\n    else return theme.link\n  }};\n\n  display: flex;\n  align-items: center;\n  padding: 0;\n  border: 0;\n  cursor: ${({ disabled }) => (disabled ? 'default' : 'pointer')};\n\n  &:hover {\n    color: ${({ theme, disabled }) => {\n      if (disabled) return\n      return theme.linkHighlight\n    }};\n  }\n`\n\nexport default TextButton\n","import { useCallback, useEffect, useMemo } from 'react'\nimport { ChevronRight, ChevronLeft } from 'lucide-react'\nimport { useHistory } from 'react-router-dom'\nimport styled from 'styled-components'\nimport useQueryParams from '../hooks/useQueryParams'\nimport TextButton from './Buttons/TextButton'\n\nconst PageSwitch = ({\n  elementsPerPage = 20,\n  totalNumberOfElements,\n  numberOfElementsLoaded\n}: {\n  elementsPerPage?: number\n  totalNumberOfElements?: number\n  numberOfElementsLoaded?: number\n}) => {\n  const currentPage = parseInt(useQueryParams('p') || '1')\n  const history = useHistory()\n  const location = history.location\n\n  const locationSearch = useMemo(() => new URLSearchParams(location.search), [location.search])\n\n  const handlePageSwitch = (direction: 'previous' | 'next') => {\n    setPageNumber(direction === 'previous' ? currentPage - 1 : currentPage + 1)\n  }\n\n  const setPageNumber = useCallback(\n    (pageNumber: number) => {\n      locationSearch.set('p', pageNumber.toString())\n      history.push({ search: locationSearch.toString() })\n    },\n    [history, locationSearch]\n  )\n\n  const totalNumberOfPages = totalNumberOfElements && Math.ceil(totalNumberOfElements / elementsPerPage)\n\n  // Redirect if page number is incorrect\n  useEffect(() => {\n    if (currentPage < 1) {\n      setPageNumber(1)\n    } else if (totalNumberOfPages && currentPage > totalNumberOfPages) {\n      setPageNumber(totalNumberOfPages)\n    } else if (isNaN(currentPage)) {\n      setPageNumber(1)\n    }\n  }, [currentPage, setPageNumber, totalNumberOfPages])\n\n  if (totalNumberOfElements === 0) return null\n\n  return (\n    <SwitchContainer>\n      <TextButton disabled={currentPage === 1} onClick={() => handlePageSwitch('previous')}>\n        <ChevronLeft />\n        <span>Previous</span>\n      </TextButton>\n      <PageNumbers>\n        {currentPage}\n        {totalNumberOfPages && <TotalNumberOfPages>{` / ${totalNumberOfPages}`}</TotalNumberOfPages>}\n      </PageNumbers>\n      <TextButton\n        disabled={\n          totalNumberOfPages\n            ? totalNumberOfPages === currentPage\n            : numberOfElementsLoaded\n            ? numberOfElementsLoaded < 20\n            : false\n        }\n        onClick={() => handlePageSwitch('next')}\n      >\n        <span>Next</span>\n        <ChevronRight />\n      </TextButton>\n    </SwitchContainer>\n  )\n}\n\nconst SwitchContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 35px;\n`\n\nconst PageNumbers = styled.div`\n  padding: 0 15px;\n  text-align: center;\n  font-weight: 600;\n`\n\nconst TotalNumberOfPages = styled.span`\n  color: ${({ theme }) => theme.textSecondary};\n`\n\nexport default PageSwitch\n","import { useMemo } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport useQueryParams from './useQueryParams'\n\nconst usePageNumber = () => {\n  const pageParam = useQueryParams('p')\n  const pageNumber = pageParam && parseInt(pageParam)\n  const history = useHistory()\n  const location = history.location\n\n  const locationSearch = useMemo(() => new URLSearchParams(location.search), [location.search])\n\n  if (pageNumber === 1) {\n    locationSearch.delete('p')\n    history.replace({ search: locationSearch.toString() })\n  }\n\n  return pageNumber || 1\n}\n\nexport default usePageNumber\n","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\n\nimport { useEffect, useRef } from 'react'\n\nexport function useInterval(callback: () => void, delay: number, shouldPause = false) {\n  const savedCallback = useRef<() => void>(() => null)\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current()\n    }\n    if (delay !== null && !shouldPause) {\n      const id = setInterval(tick, delay)\n      return () => clearInterval(id)\n    }\n  }, [delay, shouldPause])\n}\n","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\n\nimport { useCallback, useContext, useEffect, useState } from 'react'\nimport dayjs from 'dayjs'\nimport styled, { css } from 'styled-components'\nimport SectionTitle from '../components/SectionTitle'\nimport { BlockList } from '../types/api'\nimport blockIcon from '../images/block-icon.svg'\nimport relativeTime from 'dayjs/plugin/relativeTime'\nimport LoadingSpinner from '../components/LoadingSpinner'\nimport { GlobalContext } from '..'\nimport { Table, TableBody, TableHeader, TDStyle } from '../components/Table'\nimport { TightLink } from '../components/Links'\nimport Section from '../components/Section'\nimport { motion } from 'framer-motion'\nimport { APIResp } from '../utils/client'\nimport PageSwitch from '../components/PageSwitch'\nimport usePageNumber from '../hooks/usePageNumber'\nimport { useHistory } from 'react-router-dom'\nimport { useInterval } from '../utils/hooks'\n\ndayjs.extend(relativeTime)\n\nconst BlockSection = () => {\n  const [blockList, setBlockList] = useState<BlockList>()\n  const [loading, setLoading] = useState(false)\n  const [manualLoading, setManualLoading] = useState(false)\n  const history = useHistory()\n\n  const client = useContext(GlobalContext).client\n\n  // Default page\n  const currentPageNumber = usePageNumber()\n\n  const getBlocks = useCallback(\n    async (pageNumber: number, manualFetch?: boolean) => {\n      if (!client) return\n\n      console.log('Fetching blocks...')\n\n      manualFetch ? setManualLoading(true) : setLoading(true)\n      const fetchedBlocks: APIResp<BlockList> = await client.blocks(pageNumber)\n\n      // Check if manual fetching has been set in the meantime (overriding polling fetch)\n\n      if (currentPageNumber !== pageNumber) {\n        setLoading(false)\n        return\n      }\n\n      console.log('Number of block fetched: ' + fetchedBlocks.data?.blocks.length)\n      setBlockList(fetchedBlocks.data)\n\n      manualFetch ? setManualLoading(false) : setLoading(false)\n    },\n    [client, currentPageNumber]\n  )\n\n  // Fetching Data when page number changes or page loads initially\n  useEffect(() => {\n    getBlocks(currentPageNumber, true)\n  }, [getBlocks, currentPageNumber])\n\n  // Polling\n  useInterval(() => {\n    if (currentPageNumber === 1 && !loading && !manualLoading) getBlocks(currentPageNumber)\n  }, 10 * 1000)\n\n  return (\n    <Section>\n      <TitleAndLoader>\n        <SectionTitle title=\"Blocks\" />\n        {loading && !manualLoading && (\n          <PollingLoadingSpinner>\n            <LoadingSpinner size={12} /> Loading...\n          </PollingLoadingSpinner>\n        )}\n      </TitleAndLoader>\n      {!manualLoading ? (\n        <Content>\n          <Table main scrollable>\n            <TableHeader\n              headerTitles={['', 'Hash', 'Timestamp', 'Height', 'Txn', 'Chain index']}\n              columnWidths={['50px', '20%', '20%', '20%', '20%', '20%']}\n            />\n            <TableBody tdStyles={TableBodyCustomStyles}>\n              {blockList?.blocks.map((b) => (\n                <BlockRow\n                  key={b.hash}\n                  animate={{ opacity: 1 }}\n                  initial={{ opacity: 0 }}\n                  transition={{ duration: 0.8 }}\n                  onClick={() => {\n                    history.push(`blocks/${b.hash}`)\n                  }}\n                >\n                  <td>\n                    <BlockIcon src={blockIcon} alt=\"Block\" />\n                  </td>\n                  <td>\n                    <TightLink to={`blocks/${b.hash}`} text={b.hash} maxWidth=\"150px\" />\n                  </td>\n                  <td>{dayjs().to(b.timestamp)}</td>\n                  <td>{b.height}</td>\n                  <td>{b.txNumber}</td>\n                  <td>\n                    {b.chainFrom} → {b.chainTo}\n                  </td>\n                </BlockRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Content>\n      ) : (\n        <LoadingSpinner />\n      )}\n      <PageSwitch totalNumberOfElements={blockList?.total} />\n    </Section>\n  )\n}\n\nconst TitleAndLoader = styled.div`\n  position: relative;\n`\n\nconst Content = styled.div`\n  margin-top: 30px;\n`\n\nconst PollingLoadingSpinner = styled.div`\n  position: absolute;\n  bottom: -25px;\n  color: ${({ theme }) => theme.textSecondary};\n`\n\nconst TableBodyCustomStyles: TDStyle[] = [\n  {\n    tdPos: 1,\n    style: css`\n      text-align: center;\n      text-align: -webkit-center;\n    `\n  },\n  {\n    tdPos: 4,\n    style: css`\n      font-family: 'Roboto Mono', monospace;\n      color: ${({ theme }) => theme.textAccent};\n      font-weight: 400;\n    `\n  },\n  {\n    tdPos: 4,\n    style: css`\n      font-family: 'Roboto Mono', monospace;\n      font-weight: 400;\n    `\n  },\n  {\n    tdPos: 5,\n    style: css`\n      font-family: 'Roboto Mono', monospace;\n      font-weight: 400;\n    `\n  },\n  {\n    tdPos: 6,\n    style: css`\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n    `\n  }\n]\n\nconst BlockRow = styled(motion.tr)`\n  cursor: pointer;\n`\n\nconst BlockIcon = styled.img`\n  height: 20px;\n  width: 20px;\n`\n\nexport default BlockSection\n","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\n\nimport { Block, Transaction, Address, BlockList } from '../types/api'\n\nexport interface APIData<T> {\n  data: T\n  status: number\n  resource?: never\n  detail?: never\n}\n\nexport interface APIError {\n  status: number\n  detail: string\n  resource?: string\n  data?: never\n}\n\nexport type APIResp<T> = APIData<T> | APIError\n\nexport class AlephClient {\n  url: string\n  fetchAPI: <T>(path: string) => Promise<APIResp<T>>\n\n  constructor(url: string) {\n    this.url = url\n    this.fetchAPI = async function <T>(path: string) {\n      return fetch(url + path)\n        .then((resp) => {\n          return new Promise((resolve, reject) => {\n            if (resp.ok) {\n              resp.json().then((r) => resolve({ data: r as T, status: resp.status }))\n            } else {\n              resp.json().then((e) => {\n                return reject({ detail: e.detail, status: resp.status, resource: e.resource } as APIError)\n              })\n            }\n          }) as Promise<APIResp<T>>\n        })\n        .catch((e) => {\n          return e as APIError\n        })\n    }\n  }\n\n  async block(id: string) {\n    return await this.fetchAPI<Block>('/blocks/' + id)\n  }\n\n  async blockTransactions(id: string, page: number) {\n    return await this.fetchAPI<Transaction[]>('/blocks/' + id + '/transactions' + '?page=' + page)\n  }\n\n  async blocks(page: number) {\n    return await this.fetchAPI<BlockList>('/blocks?page=' + page)\n  }\n\n  async address(id: string) {\n    return await this.fetchAPI<Address>('/addresses/' + id)\n  }\n\n  async addressTransactions(id: string, page: number) {\n    return await this.fetchAPI<Transaction[]>('/addresses/' + id + '/transactions' + '?page=' + page)\n  }\n\n  async transaction(id: string) {\n    return await this.fetchAPI<Transaction>('/transactions/' + id)\n  }\n}\n\nexport const createClient = (url: string) => {\n  const client = new AlephClient(url)\n\n  console.log('Connecting to: ' + client.url)\n\n  return client\n}\n","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\n\nimport { FC } from 'react'\nimport styled, { DefaultTheme } from 'styled-components'\nimport Amount from './Amount'\nimport JSBI from 'jsbi'\nimport { abbreviateAmount } from '../utils/amounts'\n\ntype BadgeType = 'plus' | 'minus' | 'neutral' | 'neutralHighlight'\n\ninterface BadgeProps {\n  type: BadgeType\n  content: JSX.Element | string | JSBI | undefined\n  className?: string\n  amount?: boolean\n  prefix?: string\n  floatRight?: boolean\n}\n\nlet Badge: FC<BadgeProps> = ({ content, className, amount, prefix, floatRight = false }) => {\n  return (\n    <div\n      className={className}\n      data-tip={amount && content ? `${abbreviateAmount(JSBI.BigInt(content), true)} א` : null}\n      style={{ float: floatRight ? 'right' : 'left' }}\n    >\n      {prefix && <span>{prefix}</span>}\n      {amount && content ? <Amount value={JSBI.BigInt(content)} /> : content}\n    </div>\n  )\n}\n\nconst getBadgeColor = (badgeType: BadgeType, theme: DefaultTheme) => {\n  let backgroundColor\n  let color\n\n  switch (badgeType) {\n    case 'plus':\n      backgroundColor = 'rgba(93, 203, 126, 0.12)'\n      color = 'rgba(93, 203, 126, 1)'\n      break\n    case 'minus':\n      backgroundColor = 'rgba(243, 113, 93, 0.1)'\n      color = 'rgba(243, 113, 93, 1)'\n      break\n    case 'neutral':\n      backgroundColor = theme.name === 'dark' ? 'rgba(101, 16, 247, 0.28)' : 'rgba(101, 16, 247, 0.6)'\n      color = theme.name === 'dark' ? 'rgba(255, 255, 255, 0.8)' : 'rgba(255, 255, 255, 1)'\n      break\n    case 'neutralHighlight':\n      backgroundColor = 'rgba(101, 16, 247, 1)'\n      color = 'rgba(255, 255, 255, 1)'\n  }\n\n  return { backgroundColor, color }\n}\n\nBadge = styled(Badge)`\n  background-color: ${({ type, theme }) => getBadgeColor(type, theme).backgroundColor};\n  color: ${({ type, theme }) => getBadgeColor(type, theme).color};\n  text-align: center;\n  padding: 5px 10px;\n  border-radius: 3px;\n  font-weight: 600;\n  float: left;\n  white-space: nowrap;\n`\n\nexport default Badge\n","import { useCallback, useEffect, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\n\nconst useTableDetailsState = (defaultState: boolean) => {\n  const [detailOpen, setDetailOpen] = useState(defaultState)\n\n  const { pathname } = useLocation()\n\n  useEffect(() => {\n    // Close details when location is changing\n    // TODO: Store state in URL? Careful, can become complex when we'll have paging\n    setDetailOpen(false)\n  }, [pathname])\n\n  const toggleDetail = useCallback(() => setDetailOpen(!detailOpen), [detailOpen])\n\n  return { detailOpen, setDetailOpen, toggleDetail }\n}\n\nexport default useTableDetailsState\n","export default __webpack_public_path__ + \"static/media/alephium-not-found.356bba05.svg\";","import styled from 'styled-components'\nimport logo from '../images/alephium-not-found.svg'\n\nconst InlineErrorMessage = ({ message, code }: { message?: string; code?: number }) => {\n  let shownMessage = ''\n\n  if (!message) {\n    shownMessage = \"Something's wrong\"\n  } else {\n    shownMessage = message\n  }\n\n  return (\n    <ErrorWrapper>\n      <Container>\n        <ErrorLogo />\n        <ErrorMessageContainer>\n          <ErrorCode>{code}</ErrorCode>\n          <ErrorMessage>{shownMessage}</ErrorMessage>\n        </ErrorMessageContainer>\n      </Container>\n    </ErrorWrapper>\n  )\n}\n\nconst ErrorWrapper = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 100px;\n`\n\nconst Container = styled.div`\n  background-color: ${({ theme }) => theme.bgSecondary};\n  border-radius: 14px;\n  padding: 35px 25px;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`\n\nconst ErrorLogo = styled.div`\n  background-image: url(${logo});\n  background-repeat: no-repeat;\n  background-size: contain;\n  background-position: center;\n  min-height: 150px;\n  max-height: 300px;\n  height: 25%;\n  width: 100%;\n  margin-bottom: 25px;\n`\n\nconst ErrorMessageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 0 25px;\n  text-align: center;\n`\n\nconst ErrorCode = styled.span`\n  font-size: 1.5rem;\n  font-weight: 600;\n  margin-bottom: 20px;\n`\n\nconst ErrorMessage = styled.span`\n  max-width: 500px;\n  width: 100%;\n  color: ${({ theme }) => theme.textSecondary};\n  overflow: hidden;\n  text-overflow: ellipsis;\n`\n\nexport default InlineErrorMessage\n","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\n\nimport dayjs from 'dayjs'\nimport { FC, useContext, useEffect, useState } from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\nimport styled, { css } from 'styled-components'\nimport { GlobalContext } from '..'\nimport SectionTitle, { SecondaryTitle } from '../components/SectionTitle'\nimport {\n  Table,\n  TableHeader,\n  TDStyle,\n  TableBody,\n  HighlightedCell,\n  AnimatedCell,\n  DetailsRow,\n  Row,\n  DetailToggle\n} from '../components/Table'\nimport { Block, Transaction } from '../types/api'\nimport transactionIcon from '../images/transaction-icon.svg'\nimport { AddressLink, TightLink } from '../components/Links'\nimport { ArrowRight } from 'lucide-react'\nimport Badge from '../components/Badge'\nimport { APIResp } from '../utils/client'\nimport Amount from '../components/Amount'\nimport Section from '../components/Section'\nimport useTableDetailsState from '../hooks/useTableDetailsState'\nimport LoadingSpinner from '../components/LoadingSpinner'\nimport InlineErrorMessage from '../components/InlineErrorMessage'\nimport JSBI from 'jsbi'\nimport PageSwitch from '../components/PageSwitch'\nimport usePageNumber from '../hooks/usePageNumber'\n\ninterface ParamTypes {\n  id: string\n}\n\nconst BlockInfoSection = () => {\n  const { id } = useParams<ParamTypes>()\n  const client = useContext(GlobalContext).client\n  const history = useHistory()\n\n  const [blockInfo, setBlockInfo] = useState<APIResp<Block>>()\n  const [txList, setTxList] = useState<APIResp<Transaction[]>>()\n\n  const [infoLoading, setInfoLoading] = useState(true)\n  const [txLoading, setTxLoading] = useState(true)\n\n  const currentPageNumber = usePageNumber()\n\n  // Block info\n  useEffect(() => {\n    if (!client) return\n    setInfoLoading(true)\n\n    client\n      .block(id)\n      .catch((e) => {\n        console.log(e)\n        setInfoLoading(false)\n      })\n      .then((r) => {\n        if (!r) return\n        setBlockInfo(r)\n        setInfoLoading(false)\n      })\n  }, [client, id])\n\n  // Block transactions\n  useEffect(() => {\n    if (!client) return\n\n    setTxLoading(true)\n\n    client\n      .blockTransactions(id, currentPageNumber)\n      .catch((e) => {\n        console.log(e)\n        setTxLoading(false)\n      })\n      .then((r) => {\n        if (!r) return\n        setTxList(r)\n        setTxLoading(false)\n      })\n  }, [client, id, currentPageNumber])\n\n  // If user entered an incorrect url (or did an incorrect search, try to see if a transaction exists with this hash)\n\n  useEffect(() => {\n    if (!client) return\n    ;(async () => {\n      if (blockInfo?.detail) {\n        const res = await client.transaction(id)\n        if (!res?.detail) {\n          // A transaction exists, redirect automatically\n          history.push(`/transactions/${id}`)\n        }\n      }\n    })()\n  }, [blockInfo, id, client, history])\n\n  return (\n    <Section>\n      <SectionTitle title=\"Block\" />\n      {!infoLoading ? (\n        <>\n          {blockInfo && blockInfo.status === 200 && blockInfo.data ? (\n            <>\n              <Table bodyOnly>\n                <TableBody tdStyles={BlockTableBodyCustomStyles}>\n                  <tr>\n                    <td>Hash</td>\n                    <HighlightedCell textToCopy={blockInfo.data.hash}>{blockInfo.data.hash}</HighlightedCell>\n                  </tr>\n                  <tr>\n                    <td>Height</td>\n                    <td>{blockInfo.data.height}</td>\n                  </tr>\n                  <tr>\n                    <td>Chain Index</td>\n                    <td>\n                      {blockInfo.data.chainFrom} → {blockInfo.data.chainTo}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>Nb. of transactions</td>\n                    <td>{blockInfo.data.txNumber}</td>\n                  </tr>\n                  <tr>\n                    <td>Timestamp</td>\n                    <td>{dayjs(blockInfo.data.timestamp).format('MM/DD/YYYY HH:mm:ss')}</td>\n                  </tr>\n                </TableBody>\n              </Table>\n\n              <SecondaryTitle>Transactions</SecondaryTitle>\n              {!txLoading && txList && txList.data && txList.status === 200 ? (\n                <>\n                  <Table main hasDetails scrollable>\n                    <TableHeader\n                      headerTitles={['', 'Hash', 'Inputs', '', 'Outputs', 'Total amount', '']}\n                      columnWidths={['35px', '150px', '120px', '50px', '120px', '90px', '30px']}\n                      textAlign={['left', 'left', 'left', 'left', 'left', 'right', 'left']}\n                    />\n                    <TableBody tdStyles={TXTableBodyCustomStyles}>\n                      {txList.data.map((t, i) => (\n                        <TransactionRow transaction={t} key={i} />\n                      ))}\n                    </TableBody>\n                  </Table>\n                </>\n              ) : (\n                <LoadingSpinner />\n              )}\n            </>\n          ) : (\n            <InlineErrorMessage message={blockInfo?.detail} code={blockInfo?.status} />\n          )}\n          {txList && txList.data && blockInfo?.data?.txNumber && (\n            <PageSwitch totalNumberOfElements={blockInfo.data.txNumber} />\n          )}\n        </>\n      ) : (\n        <LoadingSpinner />\n      )}\n    </Section>\n  )\n}\n\ninterface TransactionRowProps {\n  transaction: Transaction\n}\n\nconst TransactionRow: FC<TransactionRowProps> = ({ transaction }) => {\n  const t = transaction\n  const { detailOpen, toggleDetail } = useTableDetailsState(false)\n\n  return (\n    <>\n      <Row key={t.hash} isActive={detailOpen} onClick={toggleDetail}>\n        <td>\n          <TransactionIcon />\n        </td>\n        <td>\n          <TightLink to={`/transactions/${t.hash}`} text={t.hash} maxWidth=\"150px\" />\n        </td>\n        <td>\n          {t.inputs.length} address{t.inputs.length > 1 ? 'es' : ''}\n        </td>\n        <td>\n          <ArrowRight size={15} />\n        </td>\n        <td>\n          {t.outputs.length} address{t.outputs.length > 1 ? 'es' : ''}\n        </td>\n        <td>\n          <Badge\n            type={'neutral'}\n            content={t.outputs.reduce<JSBI>((acc, o) => JSBI.add(acc, JSBI.BigInt(o.amount)), JSBI.BigInt(0))}\n            amount\n            floatRight\n          />\n        </td>\n        <DetailToggle isOpen={detailOpen} onClick={toggleDetail} />\n      </Row>\n      <DetailsRow openCondition={detailOpen}>\n        <td />\n        <td />\n        <AnimatedCell>\n          {t.inputs.map((input, i) => (\n            <AddressLink key={i} address={input.address} txHashRef={input.txHashRef} maxWidth=\"180px\" />\n          ))}\n        </AnimatedCell>\n        <td />\n        <AnimatedCell>\n          {t.outputs.map((o, i) => (\n            <AddressLink address={o.address} key={i} maxWidth=\"180px\" />\n          ))}\n        </AnimatedCell>\n        <AnimatedCell alignItems=\"right\">\n          {t.outputs.map((o, i) => (\n            <Amount value={JSBI.BigInt(o.amount)} key={i} />\n          ))}\n        </AnimatedCell>\n        <td />\n      </DetailsRow>\n    </>\n  )\n}\n\n// TODO: make expandlable elements generic (in Table.tsx)\n\nconst TransactionIcon = styled.div`\n  background-image: url(${transactionIcon});\n  background-position: center;\n  background-repeat: no-repeat;\n  height: 20px;\n  width: 20px;\n`\n\nconst BlockTableBodyCustomStyles: TDStyle[] = [\n  {\n    tdPos: 2,\n    style: css`\n      font-weight: 500;\n    `\n  }\n]\n\nconst TXTableBodyCustomStyles: TDStyle[] = [\n  {\n    tdPos: 1,\n    style: css`\n      text-align: center;\n      text-align: -webkit-center;\n    `\n  },\n  {\n    tdPos: 3,\n    style: css`\n      color: ${({ theme }) => theme.textAccent};\n    `\n  },\n  {\n    tdPos: 4,\n    style: css`\n      text-align: center;\n      color: ${({ theme }) => theme.textSecondary};\n    `\n  },\n  {\n    tdPos: 5,\n    style: css`\n      color: ${({ theme }) => theme.textAccent};\n    `\n  }\n]\n\nexport default BlockInfoSection\n","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\n\nimport dayjs from 'dayjs'\nimport { useCallback, useContext, useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { GlobalContext } from '..'\nimport SectionTitle from '../components/SectionTitle'\nimport { Transaction } from '../types/api'\nimport { APIResp } from '../utils/client'\nimport Badge from '../components/Badge'\nimport { Table, TableBody, HighlightedCell } from '../components/Table'\nimport { AddressLink, TightLink } from '../components/Links'\nimport Section from '../components/Section'\nimport LoadingSpinner from '../components/LoadingSpinner'\nimport InlineErrorMessage from '../components/InlineErrorMessage'\nimport JSBI from 'jsbi'\nimport Amount from '../components/Amount'\nimport { Check } from 'lucide-react'\nimport { useInterval } from '../utils/hooks'\n\ninterface ParamTypes {\n  id: string\n}\n\nconst TransactionInfoSection = () => {\n  const { id } = useParams<ParamTypes>()\n  const client = useContext(GlobalContext).client\n  const [txInfo, setTxInfo] = useState<APIResp<Transaction>>()\n  const [loading, setLoading] = useState(true)\n\n  const getTxInfo = useCallback(async () => {\n    if (!client) return\n    setLoading(true)\n\n    client\n      .transaction(id)\n      .catch((e) => {\n        console.log(e)\n        setLoading(false)\n      })\n      .then((r) => {\n        if (!r) return\n\n        setTxInfo(r)\n        setLoading(false)\n      })\n  }, [client, id])\n\n  // Initial fetch\n  useEffect(() => {\n    getTxInfo()\n  }, [getTxInfo])\n\n  // Polling when TX is unconfirmed\n  useInterval(() => {\n    if (txInfo && txInfo.data && txInfo.data.type === 'unconfirmed') getTxInfo()\n  }, 15 * 1000)\n\n  return (\n    <Section>\n      <SectionTitle title=\"Transaction\" />\n      {!loading ? (\n        <>\n          {txInfo && txInfo.status === 200 && txInfo.data ? (\n            <Table bodyOnly>\n              <TableBody>\n                <tr>\n                  <td>Hash</td>\n                  <HighlightedCell textToCopy={txInfo.data.hash}>{txInfo.data.hash}</HighlightedCell>\n                </tr>\n                <tr>\n                  <td>Status</td>\n                  {txInfo.data.type === 'confirmed' ? (\n                    <td>\n                      <Badge\n                        type=\"plus\"\n                        content={\n                          <span>\n                            <Check style={{ marginRight: 5 }} size={15} />\n                            Confirmed\n                          </span>\n                        }\n                      />\n                    </td>\n                  ) : (\n                    <td>\n                      <Badge\n                        type=\"neutral\"\n                        content={\n                          <>\n                            <LoadingSpinner style={{ marginRight: 5 }} size={15} />\n                            <span>Unconfirmed</span>\n                          </>\n                        }\n                      />\n                    </td>\n                  )}\n                </tr>\n                {txInfo.data.blockHash && (\n                  <tr>\n                    <td>Block Hash</td>\n                    <td>\n                      <TightLink\n                        to={`../blocks/${txInfo.data.blockHash || ''}`}\n                        text={txInfo.data.blockHash || ''}\n                        maxWidth=\"550px\"\n                      />\n                    </td>\n                  </tr>\n                )}\n                {txInfo.data.timestamp && (\n                  <tr>\n                    <td>Timestamp</td>\n                    <td>{dayjs(txInfo.data.timestamp).format('MM/DD/YYYY HH:mm:ss')}</td>\n                  </tr>\n                )}\n                {txInfo.data.type === 'confirmed' && (\n                  <tr>\n                    <td>Inputs</td>\n                    <td>\n                      {txInfo.data.inputs && txInfo.data.inputs.length > 0\n                        ? txInfo.data.inputs.map((v, i) => (\n                            <AddressLink\n                              address={v.address}\n                              txHashRef={v.txHashRef}\n                              key={i}\n                              amount={JSBI.BigInt(v.amount)}\n                            />\n                          ))\n                        : 'Block Rewards'}\n                    </td>\n                  </tr>\n                )}\n                <tr>\n                  <td>Outputs</td>\n                  <td>\n                    {txInfo.data.outputs.map((v, i) => (\n                      <AddressLink address={v.address} key={i} amount={JSBI.BigInt(v.amount)} txHashRef={v.spent} />\n                    ))}\n                  </td>\n                </tr>\n                <tr>\n                  <td>Gas Amount</td>\n                  <td>{txInfo.data.gasAmount || '-'} GAS</td>\n                </tr>\n                <tr>\n                  <td>Gas Price</td>\n                  <td>\n                    <Amount value={JSBI.BigInt(txInfo.data.gasPrice)} />\n                  </td>\n                </tr>\n                <tr>\n                  <td>Transaction Fee</td>\n                  <td>\n                    <Amount\n                      value={JSBI.multiply(JSBI.BigInt(txInfo.data.gasPrice), JSBI.BigInt(txInfo.data.gasAmount))}\n                      showFullPrecision\n                    />\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <b>Total value</b>\n                  </td>\n                  <td>\n                    <Badge\n                      type=\"neutralHighlight\"\n                      content={txInfo.data.outputs.reduce<JSBI>(\n                        (acc, o) => JSBI.add(acc, JSBI.BigInt(o.amount)),\n                        JSBI.BigInt(0)\n                      )}\n                      amount\n                    />\n                  </td>\n                </tr>\n              </TableBody>\n            </Table>\n          ) : (\n            <InlineErrorMessage message={txInfo?.detail} code={txInfo?.status} />\n          )}\n        </>\n      ) : (\n        <LoadingSpinner />\n      )}\n    </Section>\n  )\n}\n\nexport default TransactionInfoSection\n","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\n\nimport { FC, useContext, useEffect, useRef, useState } from 'react'\nimport dayjs from 'dayjs'\nimport relativeTime from 'dayjs/plugin/relativeTime'\nimport { useParams } from 'react-router-dom'\nimport { GlobalContext } from '..'\nimport SectionTitle, { SecondaryTitle } from '../components/SectionTitle'\nimport { Address, Transaction } from '../types/api'\nimport { APIResp } from '../utils/client'\nimport Badge from '../components/Badge'\nimport {\n  Table,\n  TableBody,\n  HighlightedCell,\n  TableHeader,\n  AnimatedCell,\n  DetailsRow,\n  Row,\n  DetailToggle,\n  TDStyle\n} from '../components/Table'\nimport { AddressLink, TightLink } from '../components/Links'\nimport { ArrowRight } from 'lucide-react'\nimport Section from '../components/Section'\nimport styled, { css } from 'styled-components'\nimport _ from 'lodash'\nimport useTableDetailsState from '../hooks/useTableDetailsState'\nimport LoadingSpinner from '../components/LoadingSpinner'\nimport InlineErrorMessage from '../components/InlineErrorMessage'\nimport JSBI from 'jsbi'\nimport usePageNumber from '../hooks/usePageNumber'\nimport PageSwitch from '../components/PageSwitch'\nimport { calAmountDelta } from '../utils/amounts'\n\ndayjs.extend(relativeTime)\n\ninterface ParamTypes {\n  id: string\n}\n\nconst TransactionInfoSection = () => {\n  const { id } = useParams<ParamTypes>()\n  const client = useContext(GlobalContext).client\n  const [addressInfo, setAddressInfo] = useState<APIResp<Address>>()\n  const [txList, setTxList] = useState<APIResp<Transaction[]>>()\n\n  const [infoLoading, setInfoLoading] = useState(true)\n  const [txLoading, setTxLoading] = useState(true)\n  const previousId = useRef(id)\n\n  // Default page\n  const pageNumber = usePageNumber()\n\n  // Address info\n  useEffect(() => {\n    if (!client) return\n\n    previousId.current = id\n\n    setInfoLoading(true)\n\n    client\n      .address(id)\n      .catch((e) => {\n        console.log(e)\n        setInfoLoading(false)\n      })\n      .then((r) => {\n        if (!r) return\n        setAddressInfo(r)\n        setInfoLoading(false)\n      })\n  }, [client, id])\n\n  // Address transactions\n  useEffect(() => {\n    if (!client) return\n\n    setTxLoading(true)\n\n    client\n      .addressTransactions(id, pageNumber)\n      .catch((e) => {\n        console.log(e)\n        setTxLoading(false)\n      })\n      .then((r) => {\n        if (!r) return\n        setTxList(r)\n        setTxLoading(false)\n      })\n  }, [client, id, pageNumber])\n\n  return (\n    <Section>\n      <SectionTitle title=\"Address\" />\n      {!infoLoading && previousId.current === id ? (\n        <>\n          {addressInfo && addressInfo.status === 200 && addressInfo.data ? (\n            <>\n              <Table bodyOnly>\n                <TableBody tdStyles={AddressTableBodyCustomStyles}>\n                  <tr>\n                    <td>Address</td>\n                    <HighlightedCell textToCopy={id} qrCodeContent={id}>\n                      {id}\n                    </HighlightedCell>\n                  </tr>\n                  <tr>\n                    <td>Number of Transactions</td>\n                    <td>{addressInfo.data.txNumber}</td>\n                  </tr>\n                  <tr>\n                    <td>Balance</td>\n                    <td>\n                      <Badge type={'neutralHighlight'} content={addressInfo.data.balance.toString()} amount />\n                    </td>\n                  </tr>\n                </TableBody>\n              </Table>\n\n              <SecondaryTitle>History</SecondaryTitle>\n              {!txLoading && txList && txList.data && txList.status === 200 ? (\n                <>\n                  {txList.data.length > 0 ? (\n                    <Table hasDetails main scrollable>\n                      <TableHeader\n                        headerTitles={['Hash', 'Timestamp', '', 'Account(s)', 'Amount', '']}\n                        columnWidths={['15%', '100px', '80px', '25%', '120px', '30px']}\n                        textAlign={['left', 'left', 'left', 'left', 'right', 'left']}\n                      />\n                      <TableBody>\n                        {txList.data\n                          .sort((t1, t2) => (t2.timestamp && t1.timestamp ? t2.timestamp - t1.timestamp : 1))\n                          .map((t, i) => (\n                            <AddressTransactionRow transaction={t} addressId={id} key={i} />\n                          ))}\n                      </TableBody>\n                    </Table>\n                  ) : (\n                    <NoTxMessage>No transactions yet</NoTxMessage>\n                  )}\n                </>\n              ) : (\n                <LoadingSpinner />\n              )}\n            </>\n          ) : (\n            <InlineErrorMessage message={addressInfo?.detail} code={addressInfo?.status} />\n          )}\n          {txList && txList.data && <PageSwitch totalNumberOfElements={addressInfo?.data?.txNumber} />}\n        </>\n      ) : (\n        <LoadingSpinner />\n      )}\n    </Section>\n  )\n}\n\ninterface AddressTransactionRowProps {\n  transaction: Transaction\n  addressId: string\n}\n\nconst AddressTransactionRow: FC<AddressTransactionRowProps> = ({ transaction, addressId }) => {\n  const t = transaction\n  const { detailOpen, toggleDetail } = useTableDetailsState(false)\n\n  const amountDelta = calAmountDelta(t, addressId)\n  const isOut = JSBI.lessThan(amountDelta, JSBI.BigInt(0))\n\n  const renderOutputAccounts = () => {\n    // Check for auto-sent tx\n    if (t.outputs.every((o) => o.address === addressId)) {\n      return <AddressLink key={addressId} address={addressId} maxWidth=\"250px\" />\n    } else {\n      return _(t.outputs.filter((o) => o.address !== addressId))\n        .map((v) => v.address)\n        .uniq()\n        .value()\n        .map((v, i) => <AddressLink key={i} address={v} maxWidth=\"250px\" />)\n    }\n  }\n\n  const renderInputAccounts = () => {\n    const inputAccounts = _(t.inputs.filter((o) => o.address !== addressId))\n      .map((v) => v.address)\n      .uniq()\n      .value()\n      .map((v, i) => <AddressLink key={i} address={v} maxWidth=\"250px\" />)\n\n    if (inputAccounts.length > 0) {\n      return inputAccounts\n    } else {\n      return <BlockRewardLabel>Block rewards</BlockRewardLabel>\n    }\n  }\n\n  return (\n    <>\n      <Row key={t.hash} isActive={detailOpen} onClick={toggleDetail}>\n        <td>\n          <TightLink to={`/transactions/${t.hash}`} text={t.hash} maxWidth=\"120px\" />\n        </td>\n        <td>{(t.timestamp && dayjs().to(t.timestamp)) || '-'}</td>\n        <td>\n          <Badge type={isOut ? 'minus' : 'plus'} content={isOut ? 'To' : 'From'} />\n        </td>\n        <td>{isOut ? renderOutputAccounts() : renderInputAccounts()}</td>\n        <td>\n          <Badge\n            type={isOut ? 'minus' : 'plus'}\n            amount\n            prefix={isOut ? '- ' : '+ '}\n            floatRight\n            content={\n              JSBI.lessThan(amountDelta, JSBI.BigInt(0))\n                ? JSBI.multiply(amountDelta, JSBI.BigInt(-1)).toString()\n                : amountDelta.toString()\n            }\n          />\n        </td>\n        <DetailToggle isOpen={detailOpen} onClick={toggleDetail} />\n      </Row>\n      <DetailsRow openCondition={detailOpen}>\n        <td />\n        <td />\n        <AnimatedCell colSpan={4}>\n          <Table noBorder>\n            <TableHeader headerTitles={['Inputs', '', 'Outputs']} columnWidths={['', '50px', '']} compact transparent />\n            <TableBody>\n              <Row>\n                <td>\n                  {t.inputs.length > 0 ? (\n                    t.inputs.map((input, i) => (\n                      <AddressLink\n                        key={i}\n                        address={input.address}\n                        txHashRef={input.txHashRef}\n                        amount={JSBI.BigInt(input.amount)}\n                        maxWidth=\"180px\"\n                      />\n                    ))\n                  ) : (\n                    <BlockRewardLabel>Block rewards</BlockRewardLabel>\n                  )}\n                </td>\n                <td style={{ textAlign: 'center' }}>\n                  <ArrowRight size={12} />\n                </td>\n                <td>\n                  {t.outputs.map((output, i) => (\n                    <AddressLink\n                      key={i}\n                      address={output.address}\n                      amount={JSBI.BigInt(output.amount)}\n                      maxWidth=\"180px\"\n                    />\n                  ))}\n                </td>\n              </Row>\n            </TableBody>\n          </Table>\n        </AnimatedCell>\n      </DetailsRow>\n    </>\n  )\n}\n\nconst AddressTableBodyCustomStyles: TDStyle[] = [\n  {\n    tdPos: 2,\n    style: css`\n      font-weight: 500;\n    `\n  }\n]\n\nconst BlockRewardLabel = styled.span`\n  color: ${({ theme }) => theme.textSecondary};\n  font-style: italic;\n`\n\nconst NoTxMessage = styled.span`\n  color: ${({ theme }) => theme.textSecondary};\n`\n\nexport default TransactionInfoSection\n","export default __webpack_public_path__ + \"static/media/alephium-logo-gradient-stroke.2922636d.svg\";","import styled from 'styled-components'\nimport logo from '../images/alephium-logo-gradient-stroke.svg'\n\nconst ComingSoon = ({ text }: { text: string }) => {\n  return (\n    <ComingSoonWrapper>\n      <ComingSoonLogo />\n      <ComingSoonText>{text}</ComingSoonText>\n    </ComingSoonWrapper>\n  )\n}\n\nconst ComingSoonWrapper = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 100px;\n`\n\nconst ComingSoonLogo = styled.div`\n  background-image: url(${logo});\n  background-repeat: no-repeat;\n  background-size: contain;\n  background-position: center;\n  min-height: 150px;\n  max-height: 300px;\n  height: 25%;\n  width: 100%;\n  margin-bottom: 25px;\n`\n\nconst ComingSoonText = styled.p`\n  text-align: center;\n`\n\nexport default ComingSoon\n","import Section from '../components/Section'\nimport ComingSoon from '../components/ComingSoon'\nimport styled from 'styled-components'\n\nconst AddressesSection = () => {\n  return (\n    <StyledSection>\n      <ComingSoon text=\"Coming soon.\" />\n    </StyledSection>\n  )\n}\n\nconst StyledSection = styled(Section)`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n`\n\nexport default AddressesSection\n","import styled from 'styled-components'\nimport ComingSoon from '../components/ComingSoon'\nimport Section from '../components/Section'\n\nconst TransactionsSection = () => {\n  return (\n    <StyledSection>\n      <ComingSoon text=\"Coming soon.\" />\n    </StyledSection>\n  )\n}\n\nconst StyledSection = styled(Section)`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n`\n\nexport default TransactionsSection\n","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\n\nimport { FC, useEffect } from 'react'\nimport { useLocation } from 'react-router-dom'\n\ninterface ScrollToTopProps {\n  getScrollContainer: () => HTMLElement | null\n}\n\nexport const ScrollToTop: FC<ScrollToTopProps> = ({ getScrollContainer }) => {\n  const { pathname } = useLocation()\n\n  useEffect(() => {\n    getScrollContainer()?.scrollTo(0, 0)\n  }, [getScrollContainer, pathname])\n\n  return null\n}\n","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState, useEffect, useRef, useCallback } from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { HashRouter as Router, Redirect, Route } from 'react-router-dom'\nimport styled, { ThemeProvider } from 'styled-components'\nimport { darkTheme, lightTheme, ThemeType } from './style/themes'\nimport GlobalStyle, { deviceBreakPoints } from './style/globalStyles'\nimport * as serviceWorker from './serviceWorker'\n\nimport { StyledThemeSwitcher } from './components/ThemeSwitcher'\nimport Sidebar, { SidebarState } from './components/Sidebar'\nimport SearchBar from './components/SearchBar'\nimport BlockSection from './sections/BlockSection'\nimport { AlephClient, createClient } from './utils/client'\nimport BlockInfoSection from './sections/BlockInfoSection'\nimport TransactionInfoSection from './sections/TransactionInfoSection'\nimport AddressInfoSection from './sections/AddressInfoSection'\nimport AddressesSection from './sections/AdressesSection'\nimport TransactionsSection from './sections/TransactionsSection'\nimport { AnimatePresence, motion } from 'framer-motion'\nimport dayjs from 'dayjs'\nimport updateLocale from 'dayjs/plugin/updateLocale'\nimport { Menu } from 'lucide-react'\nimport { ArrowLeft } from 'lucide-react'\nimport { useHistory } from 'react-router-dom'\nimport { isElectron } from './utils/misc'\nimport { ScrollToTop } from './utils/routing'\n\nconst networkTypes = ['testnet', 'mainnet'] as const\nexport type NetworkType = typeof networkTypes[number]\n\ninterface SnackbarMessage {\n  text: string\n  type: 'info' | 'alert' | 'success'\n  duration?: number\n}\n\ninterface GlobalContext {\n  client: AlephClient | undefined\n  networkType: NetworkType | undefined\n  currentTheme: ThemeType\n  sidebarState: 'open' | 'close'\n  setSidebarState: (state: SidebarState) => void\n  switchTheme: (arg0: ThemeType) => void\n  setSnackbarMessage: (message: SnackbarMessage) => void\n}\n\nexport const GlobalContext = React.createContext<GlobalContext>({\n  client: undefined,\n  networkType: undefined,\n  currentTheme: 'dark',\n  sidebarState: 'open',\n  setSidebarState: () => null,\n  switchTheme: () => null,\n  setSnackbarMessage: () => null\n})\n\n/* Customize data format accross the app */\ndayjs.extend(updateLocale)\n\ndayjs.updateLocale('en', {\n  relativeTime: {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few secs',\n    m: 'a min',\n    mm: '%d mins',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years'\n  }\n})\n\nconst App = () => {\n  const [themeName, setThemeName] = useStateWithLocalStorage<ThemeType>('theme', 'light')\n  const [client, setClient] = useState<AlephClient>()\n  const [networkType, setNetworkType] = useState<NetworkType>()\n  const [snackbarMessage, setSnackbarMessage] = useState<SnackbarMessage | undefined>()\n  const [sidebarState, setSidebarState] = useState<SidebarState>('close')\n\n  const contentRef = useRef(null)\n\n  const getContentRef = useCallback(() => contentRef.current, [])\n  const history = useHistory()\n\n  useEffect(() => {\n    // Check and apply environment variables\n    const url: string | null | undefined = process.env.REACT_APP_BACKEND_URL\n    const networkType = process.env.REACT_APP_NETWORK_TYPE as NetworkType | undefined\n\n    if (!url) {\n      throw new Error('The REACT_APP_BACKEND_URL environment variable must be defined')\n    }\n\n    if (!networkType) {\n      throw new Error('The REACT_APP_NETWORK_TYPE environment variable must be defined')\n    } else if (!networkTypes.includes(networkType)) {\n      throw new Error('Value of the REACT_APP_NETWORK_TYPE environment variable is invalid')\n    }\n\n    setClient(createClient(url))\n    setNetworkType(networkType)\n  }, [])\n\n  // Remove snackbar popup\n  useEffect(() => {\n    if (snackbarMessage) {\n      setTimeout(() => setSnackbarMessage(undefined), snackbarMessage.duration || 3000)\n    }\n  }, [snackbarMessage])\n\n  return (\n    <Router>\n      <ThemeProvider theme={themeName === 'light' ? lightTheme : darkTheme}>\n        <GlobalStyle />\n        <GlobalContext.Provider\n          value={{\n            client,\n            networkType,\n            currentTheme: themeName as ThemeType,\n            switchTheme: setThemeName as (arg0: ThemeType) => void,\n            sidebarState: 'close',\n            setSidebarState: setSidebarState,\n            setSnackbarMessage\n          }}\n        >\n          <MainContainer>\n            <Sidebar sidebarState={sidebarState} />\n            <ContentContainer>\n              <ContentWrapper ref={contentRef}>\n                <ScrollToTop getScrollContainer={getContentRef} />\n                <Header>\n                  <HamburgerButton onClick={() => setSidebarState('open')}>\n                    <Menu />\n                  </HamburgerButton>\n                  {isElectron() && (\n                    <nav>\n                      <BackButton\n                        size={20}\n                        onClick={() => history.goBack()}\n                        color={themeName === 'light' ? 'black' : 'white'}\n                      />\n                    </nav>\n                  )}\n                  <SearchBar />\n                </Header>\n                <Content>\n                  <Route exact path=\"/\">\n                    <Redirect to=\"/blocks\" />\n                  </Route>\n                  <Route exact path=\"/blocks\">\n                    <BlockSection />\n                  </Route>\n                  <Route path=\"/blocks/:id\">\n                    <BlockInfoSection />\n                  </Route>\n                  <Route exact path=\"/addresses\">\n                    <AddressesSection />\n                  </Route>\n                  <Route path=\"/addresses/:id\">\n                    <AddressInfoSection />\n                  </Route>\n                  <Route exact path=\"/transactions\">\n                    <TransactionsSection />\n                  </Route>\n                  <Route path=\"/transactions/:id\">\n                    <TransactionInfoSection />\n                  </Route>\n                </Content>\n              </ContentWrapper>\n            </ContentContainer>\n            <SnackbarManager message={snackbarMessage} />\n          </MainContainer>\n        </GlobalContext.Provider>\n      </ThemeProvider>\n    </Router>\n  )\n}\n\nconst SnackbarManager = ({ message }: { message: SnackbarMessage | undefined }) => {\n  return (\n    <SnackbarManagerContainer>\n      <AnimatePresence>\n        {message && (\n          <SnackbarPopup\n            initial={{ y: 10, opacity: 0 }}\n            animate={{ y: 0, opacity: 1 }}\n            exit={{ opacity: 0 }}\n            className={message?.type}\n          >\n            {message?.text}\n          </SnackbarPopup>\n        )}\n      </AnimatePresence>\n    </SnackbarManagerContainer>\n  )\n}\n\n/* Custom hooks */\n// Local storage hook\n\nfunction useStateWithLocalStorage<T>(localStorageKey: string, defaultValue: T) {\n  const [value, setValue] = React.useState(localStorage.getItem(localStorageKey) || defaultValue)\n\n  React.useEffect(() => {\n    localStorage.setItem(localStorageKey, value as string)\n  }, [localStorageKey, value])\n\n  return [value, setValue]\n}\n\n/* Styles */\n\nconst MainContainer = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  display: flex;\n  overflow: hidden;\n`\n\nconst ContentContainer = styled.div`\n  flex: 1;\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  overflow-y: auto;\n  overflow-x: hidden;\n`\n\nconst ContentWrapper = styled.main`\n  min-height: 100%;\n  flex: 1 1 1200px;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  max-width: 1400px;\n\n  @media ${deviceBreakPoints.mobile} {\n    width: 100%;\n    justify-self: flex-start;\n  }\n`\n\nconst Content = styled.div`\n  flex: 1;\n  display: flex;\n  padding: 0 min(5vw, 50px);\n  margin-top: 20px;\n  margin-bottom: 40px;\n`\n\nconst Header = styled.header`\n  display: flex;\n  align-items: center;\n  margin: 25px 40px;\n  z-index: 1;\n\n  @media ${deviceBreakPoints.mobile} {\n    margin: 10px;\n  }\n\n  ${StyledThemeSwitcher} {\n    @media ${deviceBreakPoints.mobile} {\n      display: none;\n    }\n  }\n`\n\nconst HamburgerButton = styled.div`\n  width: 35px;\n  height: 35px;\n  display: none;\n  margin-right: 15px;\n\n  @media ${deviceBreakPoints.tablet} {\n    display: flex;\n    cursor: pointer;\n    align-items: center;\n    justify-content: center;\n  }\n\n  @media ${deviceBreakPoints.mobile} {\n    margin-right: 5px;\n  }\n`\n\nconst BackButton = styled(ArrowLeft)`\n  cursor: pointer;\n  margin-right: 25px;\n  margin-top: 2px;\n`\n\nconst SnackbarManagerContainer = styled.div`\n  position: fixed;\n  bottom: 0;\n  right: 0;\n  left: 0;\n  display: flex;\n  z-index: 10001;\n`\n\nconst SnackbarPopup = styled(motion.div)`\n  bottom: 10px;\n  left: 25px;\n  margin: 10px auto;\n  text-align: center;\n  min-width: 150px;\n  max-width: 50vw;\n  padding: 20px;\n  color: white;\n  border-radius: 14px;\n  z-index: 1000;\n\n  &.alert {\n    background-color: rgb(219, 99, 69);\n  }\n\n  &.info {\n    background-color: black;\n  }\n\n  &.success {\n    background-color: rgb(56, 168, 93);\n  }\n`\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n)\n\n//\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// Copyright 2018 The Alephium Authors\n// This file is part of the alephium project.\n//\n// The library is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Lesser General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// The library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n// GNU Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public License\n// along with the library. If not, see <http://www.gnu.org/licenses/>.\n\n// For usage from electron wallet, some UI elements can change.\n\nexport const isElectron = () => {\n  const userAgent = navigator.userAgent.toLowerCase()\n  return userAgent.indexOf(' electron/') > -1\n}\n"],"sourceRoot":""}